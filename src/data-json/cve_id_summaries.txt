CVE-2019-3773: Spring Web Services, versions 2.4.3, 3.0.4, and older unsupported versions of all three projects, were susceptible to XML External Entity Injection (XXE) when receiving XML data from untrusted sources.
CVE-2020-10683: dom4j is vulnerable to XML external entity attacks. The default `SaxReader()` does not disable external DTDs and External Entities by default, allowing an attacker to access local or internal network resources, or perform requests on behalf of the server.
CVE-2018-1000632: dom4j is vulnerable to XML External Entity (XXE) attacks. The library does not properly validate the attributes that can be inserted by the user, allowing a malicious user to conduct an XXE attack.
SRCCLR-SID-4943: dom4j is vulnerable to XML External Entity Injection. The library by default uses the `SAXReader` to parse documents without using the `setFeature` function in it to disable doctype and entities, allowing a malicious user to pass a document to execute an XML Injection attack.
CVE-2022-45685: org.codehaus.jettison:jettison is vulnerable to denial of service (DoS) attacks. A remote attacker is able to cause a stack overflow via injecting crafted JSON data, resulting in denial of service conditions.
CVE-2022-45693: org.codehaus.jettison:jettison is vulnerable to denial of service (DoS) attacks. A remote attacker is able to cause a stack overflow via injecting a crafted string through the `map` parameter, resulting in denial of service.
CVE-2022-40149: jettison is vulnerable to denial of service. The vulnerability exists due to the stack overflow in the `convertToJSONPrimitive` function of `DefaultConverter.java`, allowing an attacker to cause an application crash by providing malicious input through the parser.
CVE-2022-40150: Jettison is vulnerable to denial of service. The vulnerability exists in `nextValue()` function in `JSONTokener.java` where the attacker may supply content that causes the parser to crash by out of memory if the parser is running on user supplied input.    
CVE-2015-5262: http/conn/ssl/SSLConnectionSocketFactory.java in Apache HttpComponents HttpClient before 4.3.6 ignores the http.socket.timeout configuration setting during an SSL handshake, which allows remote attackers to cause a denial of service (HTTPS call hang) via unspecified vectors.
CVE-2012-5783: Apache Commons HttpClient 3.x, as used in Amazon Flexible Payments Service (FPS) merchant Java SDK and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.
CVE-2012-6153: http/conn/ssl/AbstractVerifier.java in Apache Commons HttpClient before 4.2.3 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  NOTE: this issue exists because of an incomplete fix for CVE-2012-5783.
CVE-2020-25638: hibernate-core is vulnerable to SQL injection. The vulnerability exists when both hibernate.use_sql_comments and JPQL String literals are used.
CVE-2019-14900: hibernate-core is vulnerable to SQL injection. The vulnerability exists in Hibernate ORM.
CVE-2019-11272: spring-security is vulnerable to authentication bypass. The cause of vulnerability is due to the use of `PlaintextPasswordEncoder`, validating the authentication of a user if a `null` encoded password is entered.
CVE-2016-5007: Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.
SRCCLR-SID-1844: Spring Security allows an active session to be logged out without a PUT request and valid cross-site request forgery (CSRF) token, even when CSRF is enabled. This could allow an attacker to trick users into logging out of their sessions without the user knowing.
CVE-2017-8028: In Pivotal Spring-LDAP versions 1.3.0 - 2.3.1, when connected to some LDAP servers, when no additional attributes are bound, and when using LDAP BindAuthenticator with org.springframework.ldap.core.support.DefaultTlsDirContextAuthenticationStrategy as the authentication strategy, and setting userSearch, authentication is allowed with an arbitrary password when the username is correct. This occurs because some LDAP vendors require an explicit operation for the LDAP bind to take effect.
CVE-2024-38829: org.springframework.ldap:spring-ldap-core is vulnerable to Sensitive Information Exposure. The vulnerability is due to improper handling of case conversions using String.toLowerCase() and String.toUpperCase() methods, which can have locale-dependent exceptions. This may lead to unintended columns being queried, exposing sensitive data.
CVE-2023-49735: org.apache.tiles: tiles-core is vulnerable to Path Traversal. The vulnerability is due to missing validation in the `DefaultLocaleResolver.LOCALE_KEY` attribute set on the session while resolving XML definition files. This can lead to Server Side Request Forgery (SSRF) or XML External Entity Injection (XXE) when user-controlled data is passed to this key. An example of passing user-controlled data to this key is (which is relatively common), is setting the language in `tiles-test` application shipped with the Tiles project. 
CVE-2010-3683: mysql is vulnerable to denial of service (DoS). The vulnerability exists as a flaw in the way MySQL handled LOAD DATA INFILE requests allowed MySQL to send OK packets even when there were errors.
CVE-2012-0492: mysql is vulnerable to denial of service. An unspecified vulnerability allows a remotely authenticated user to denial service to the application.
CVE-2012-3173: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.63 and earlier, and 5.5.25 and earlier, allows remote authenticated users to affect availability via unknown vectors related to InnoDB Plugin.
CVE-2012-0114: mysql is vulnerable to privilege escalation. An unspecified vulnerability allows a remotely authenticated user gain privileged access to the application.
CVE-2010-3677: mysql is vulnerable to denial of service. A flaw in the way MySQL processed JOIN queries that attempt to retrieve data from a unique SET column could allow a remote, authenticated attacker to crash mysqld. 
CVE-2012-0120: mysql is vulnerable to denial of service. An unspecified vulnerability allows a remotely authenticated user to denial service to the application.
CVE-2010-3839: mysql is vulnerable to denial of service. A flaw in the way MySQL processed certain JOIN queries could allow a remote, authenticated attacker to cause excessive CPU use (up to 100%), if a stored procedure contained JOIN queries, and that procedure was executed twice in sequence.
CVE-2014-0402: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.71 and earlier, 5.5.33 and earlier, and 5.6.13 and earlier allows remote authenticated users to affect availability via unknown vectors related to Locking.
CVE-2014-0393: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.71 and earlier, 5.5.33 and earlier, and 5.6.13 and earlier allows remote authenticated users to affect integrity via unknown vectors related to InnoDB.
CVE-2010-3840: mysql is vulnerable to denial of service. It was found that the MySQL PolyFromWKB() function did not sanity check Well-Known Binary (WKB) data. A remote, authenticated attacker could use specially-crafted WKB data to crash mysqld. This issue only caused a temporary denial of service, as mysqld was automatically restarted after the crash. 
CVE-2012-1690: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.61 and earlier, and 5.5.21 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer, a different vulnerability than CVE-2012-1703.
CVE-2010-2008: MySQL before 5.1.48 allows remote authenticated users with alter database privileges to cause a denial of service (server crash and database loss) via an ALTER DATABASE command with a #mysql50# string followed by a . (dot), .. (dot dot), ../ (dot dot slash) or similar sequence, and an UPGRADE DATA DIRECTORY NAME command, which causes MySQL to move certain directories to the server data directory.
CVE-2012-3167: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.63 and earlier, and 5.5.25 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Full Text Search.
CVE-2013-0375: MySQL is a multi-user, multi-threaded SQL database server. It consists of the MySQL server daemon (mysqld) and many client programs and libraries.  This update fixes several vulnerabilities in the MySQL database server. Information about these flaws can be found on the Oracle Critical Patch Update Advisory page, listed in the References section. (CVE-2012-0572, CVE-2012-0574, CVE-2012-1702, CVE-2012-1705, CVE-2013-0375, CVE-2013-0383, CVE-2013-0384, CVE-2013-0385, CVE-2013-0389)  These updated packages upgrade MySQL to version 5.1.67. Refer to the MySQL release notes listed in the References section for a full list of changes.  All MySQL users should upgrade to these updated packages, which correct these issues. After installing this update, the MySQL server daemon (mysqld) will be restarted automatically.
CVE-2012-3160: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.65 and earlier, and 5.5.27 and earlier, allows local users to affect confidentiality via unknown vectors related to Server Installation.
CVE-2008-2079: mysql is vulnerable to privilege escalation. The vulnerability exists as MySQL did not correctly check directories used as arguments for the DATA DIRECTORY and INDEX DIRECTORY directives. Using this flaw, an authenticated attacker could elevate their access privileges to tables created by other database users. Note: this attack does not work on existing tables. An attacker can only elevate their access to another user's tables as the tables are created. As well, the names of these created tables need to be predicted correctly for this attack to succeed.
CVE-2012-0484: mysql is vulnerable to information disclosure. An unspecified vulnerability allows a remotely authenticated user to retrieve confidential information.
CVE-2020-2933: mysql-connector-java is vulnerable to denial of service. When working with a load balancing setup, if the connection property `loadBalanceStrategy` was set to `bestResponseTime` and connections to all the hosts in the original setup failed, a denial of service condition will occur in Connector/J, even if newly-added hosts are available.
CVE-2012-0119: mysql is vulnerable to denial of service. An unspecified vulnerability allows a remotely authenticated user to denial service to the application.
CVE-2007-5925: mysql is vulnerable to denial of service. A flaw was found in a way MySQL's InnoDB engine handled spatial indexes. An authenticated user could create a table with spatial indexes, which are not supported by the InnoDB engine, that would cause the mysql daemon to crash when used. This issue only causes a temporary denial of service, as the mysql daemon will be automatically restarted after the crash.
CVE-2013-3804: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.69 and earlier, 5.5.31 and earlier, and 5.6.11 and earlier allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2012-0102: mysql is vulnerable to Denial of Service (DoS).
CVE-2010-3678: mysql is vulnerable to denial of service (DoS). The vulnerability exists as a flaw in the way MySQL processed SQL queries containing IN or CASE statements, when a NULL argument was provided as one of the arguments to the query, could allow a remote, authenticated attacker to crash mysqld.
CVE-2012-0113: mysql is vulnerable to denial of service (DoS).
CVE-2014-0412: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.72 and earlier, 5.5.34 and earlier, and 5.6.14 and earlier allows remote authenticated users to affect availability via unknown vectors related to InnoDB.
CVE-2012-1702: Unspecified vulnerability in the Server component in Oracle MySQL 5.1.66 and earlier and 5.5.28 and earlier allows remote attackers to affect availability via unknown vectors.
CVE-2014-0401: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.72 and earlier, 5.5.34 and earlier, and 5.6.14 and earlier allows remote authenticated users to affect availability via unknown vectors.
CVE-2013-2378: MySQL is a multi-user, multi-threaded SQL database server. It consists of the MySQL server daemon (mysqld) and many client programs and libraries.  This update fixes several vulnerabilities in the MySQL database server. Information about these flaws can be found on the Oracle Critical Patch Update Advisory page, listed in the References section. (CVE-2012-5614, CVE-2013-1506, CVE-2013-1521, CVE-2013-1531, CVE-2013-1532, CVE-2013-1544, CVE-2013-1548, CVE-2013-1552, CVE-2013-1555, CVE-2013-2375, CVE-2013-2378, CVE-2013-2389, CVE-2013-2391, CVE-2013-2392)  These updated packages upgrade MySQL to version 5.1.69. Refer to the MySQL release notes listed in the References section for a full list of changes.  All MySQL users should upgrade to these updated packages, which correct these issues. After installing this update, the MySQL server daemon (mysqld) will be restarted automatically.
CVE-2013-0383: Unspecified vulnerability in the Server component in Oracle MySQL 5.1.66 and earlier, and 5.5.28 and earlier, allows remote attackers to affect availability via unknown vectors related to Server Locking.
CVE-2014-0386: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.71 and earlier, 5.5.33 and earlier, and 5.6.13 and earlier allows remote authenticated users to affect availability via unknown vectors related to Optimizer.
CVE-2012-0583: mysql is vulnerable to denial of service. An unspecified vulnerability allows a remotely authenticated user to denial service to the application.
CVE-2009-4019: mysql is vulnerable to denial of service. A flaw was found in the way MySQL handled SELECT statements with subqueries in the WHERE clause, that assigned results to a user variable. A remote, authenticated attacker could use this flaw to crash the MySQL server daemon (mysqld). This issue only caused a temporary denial of service, as the MySQL daemon was automatically restarted after the crash.
CVE-2012-0087: mysql is vulnerable to Denial of Service (DoS).
CVE-2008-3963: mysql is vulnerable to denial of service (DoS). The vulnerability exists as a flaw was found in the way MySQL handles an empty bit-string literal. A remote, authenticated attacker could crash the MySQL server daemon (mysqld) if they used an empty bit-string literal in an SQL statement. This issue only caused a temporary denial of service, as the MySQL daemon was automatically restarted after the crash.
CVE-2012-1734: Unspecified vulnerability in Oracle MySQL Server 5.1.62 and earlier, and 5.5.23 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2013-2392: Unspecified vulnerability in Oracle MySQL 5.1.68 and earlier, 5.5.30 and earlier, and 5.6.10 and earlier allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2012-0075: mysql is vulnerable to Denial of Service (DoS).
CVE-2010-1621: The mysql_uninstall_plugin function in sql/sql_plugin.cc in MySQL 5.1 before 5.1.46 does not check privileges before uninstalling a plugin, which allows remote attackers to uninstall arbitrary plugins via the UNINSTALL PLUGIN command.
CVE-2017-3523: Vulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 5.1.40 and earlier. Difficult to exploit vulnerability allows low privileged attacker with network access via multiple protocols to compromise MySQL Connectors. While the vulnerability is in MySQL Connectors, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.0 Base Score 8.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H).
CVE-2017-3589: Vulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 5.1.41 and earlier. Easily "exploitable" vulnerability allows low privileged attacker with logon to the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data. CVSS 3.0 Base Score 3.3 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N).
CVE-2015-2575: Unspecified vulnerability in the MySQL Connectors component in Oracle MySQL 5.1.34 and earlier allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Connector/J.
CVE-2012-1688: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.61 and earlier, and 5.5.21 and earlier, allows remote authenticated users to affect availability, related to Server DML.
CVE-2010-3835: mysql is vulnerable to denial of service. A flaw in the way MySQL processed statements that assign a value to a user-defined variable and that also contain a logical value evaluation could allow a remote, authenticated attacker to crash mysqld.
CVE-2010-3837: mysql is vulnerable to denial of service. A flaw in the way MySQL processed PREPARE statements containing both GROUP_CONCAT and the WITH ROLLUP modifier could allow a remote, authenticated attacker to crash mysqld. 
CVE-2010-3836: mysql is vulnerable to denial of service. MySQL did not properly pre-evaluate LIKE arguments in view prepare mode, possibly allowing a remote, authenticated attacker to crash mysqld.
CVE-2012-3180: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.65 and earlier, and 5.5.27 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2014-0437: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.72 and earlier, 5.5.34 and earlier, and 5.6.14 and earlier allows remote authenticated users to affect availability via unknown vectors related to Optimizer.
CVE-2010-3834: Unspecified vulnerability in MySQL 5.0 before 5.0.92, 5.1 before 5.1.51, and 5.5 before 5.5.6 allows remote authenticated users to cause a denial of service (server crash) via vectors related to "materializing a derived table that required a temporary table for grouping" and "user variable assignments."
CVE-2013-2389: Unspecified vulnerability in Oracle MySQL 5.1.68 and earlier, 5.5.30 and earlier, and 5.6.10 and earlier allows remote authenticated users to affect availability via unknown vectors related to InnoDB.
CVE-2011-2262: mysql is vulnerable to Denial of Service (DoS).
CVE-2010-3681: mysql is vulnerable to denial of service. A flaw was found in the way MySQL processed certain alternating READ requests provided by HANDLER statements. A remote, authenticated attacker could use this flaw to provide such requests, causing mysqld to crash. This issue only caused a temporary denial of service, as mysqld was automatically restarted after the crash.
CVE-2012-0115: mysql is vulnerable to denial of service. An unspecified vulnerability allows a remotely authenticated user to denial service to the application.
CVE-2012-0112: mysql is vulnerable to denial of service (DoS).
CVE-2012-0485: mysql is vulnerable to denial of service. An unspecified vulnerability allows a remotely authenticated user to denial service to the application.
CVE-2012-0116: mysql is vulnerable to privilege escalation. An unspecified vulnerability allows a remotely authenticated user to gain privileged access to the application.
CVE-2013-1555: Unspecified vulnerability in Oracle MySQL 5.1.67 and earlier, and 5.5.29 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Partition.
CVE-2012-0490: mysql is vulnerable to denial of service. An unspecified vulnerability allows a remotely authenticated user to denial service to the application.
CVE-2012-3197: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.64 and earlier, and 5.5.26 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Replication.
CVE-2013-2391: Unspecified vulnerability in Oracle MySQL 5.1.68 and earlier, 5.5.30 and earlier, and 5.6.10 and earlier allows local users to affect confidentiality and integrity via unknown vectors related to Server Install.
CVE-2010-3679: mysql is vulnerable to denial of service (DoS). The vulnerability exists as a flaw in the way MySQL processed certain values provided to the BINLOG statement caused MySQL to read unassigned memory. A remote,  authenticated attacker could possibly use this flaw to crash mysqld.
CVE-2012-1696: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.5.19 and earlier allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2019-2692: Vulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 8.0.15 and prior. Difficult to exploit vulnerability allows high privileged attacker with logon to the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.0 Base Score 6.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H).
CVE-2010-3682: mysql is vulnerable to denial of service. A flaw in the way MySQL processed EXPLAIN statements for some complex SELECT queries could allow a remote, authenticated attacker to crash mysqld. 
CVE-2012-3166: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.63 and earlier, and 5.5.25 and earlier, allows remote authenticated users to affect availability via unknown vectors related to InnoDB.
CVE-2013-1552: MySQL is a multi-user, multi-threaded SQL database server. It consists of the MySQL server daemon (mysqld) and many client programs and libraries.  This update fixes several vulnerabilities in the MySQL database server. Information about these flaws can be found on the Oracle Critical Patch Update Advisory page, listed in the References section. (CVE-2012-5614, CVE-2013-1506, CVE-2013-1521, CVE-2013-1531, CVE-2013-1532, CVE-2013-1544, CVE-2013-1548, CVE-2013-1552, CVE-2013-1555, CVE-2013-2375, CVE-2013-2378, CVE-2013-2389, CVE-2013-2391, CVE-2013-2392)  These updated packages upgrade MySQL to version 5.1.69. Refer to the MySQL release notes listed in the References section for a full list of changes.  All MySQL users should upgrade to these updated packages, which correct these issues. After installing this update, the MySQL server daemon (mysqld) will be restarted automatically.
CVE-2012-0118: mysql is vulnerable to privilege escalation. An unspecified vulnerability allows a remotely authenticated user to gain privileged access to the application.
CVE-2012-2749: MySQL 5.1.x before 5.1.63 and 5.5.x before 5.5.24 allows remote authenticated users to cause a denial of service (mysqld crash) via vectors related to incorrect calculation and a sort order index.
CVE-2013-1548: Unspecified vulnerability in Oracle MySQL 5.1.63 and earlier allows remote authenticated users to affect availability via unknown vectors related to Server Types.
CVE-2010-3838: mysql is vulnerable to denial of service. A flaw in the way MySQL processed queries that provide a mixture of numeric and longblob data types to the LEAST or GREATEST function, could allow a remote, authenticated attacker to crash mysqld.
CVE-2013-1506: Unspecified vulnerability in Oracle MySQL 5.1.67 and earlier, 5.5.29 and earlier, and 5.6.10 and earlier allows remote authenticated users to affect availability via unknown vectors related to Server Locking.
CVE-2012-0574: Unspecified vulnerability in the Server component in Oracle MySQL 5.1.66 and earlier, and 5.5.28 and earlier, allows remote authenticated users to affect availability via unknown vectors.
CVE-2012-1689: Unspecified vulnerability in Oracle MySQL Server 5.1.62 and earlier, and 5.5.22 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2009-0819: sql/item_xmlfunc.cc in MySQL 5.1 before 5.1.32 and 6.0 before 6.0.10 allows remote authenticated users to cause a denial of service (crash) via "an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML()," which triggers an assertion failure.
CVE-2012-0572: Unspecified vulnerability in the Server component in Oracle MySQL 5.1.66 and earlier and 5.5.28 and earlier allows remote authenticated users to affect availability via unknown vectors related to InnoDB.
CVE-2010-3833: mysql is vulnerable to denial of service. A flaw in the way MySQL evaluated the arguments of extreme-value functions, such as LEAST and GREATEST, could allow a remote, authenticated attacker to crash mysqld.
CVE-2012-3150: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.64 and earlier, and 5.5.26 and earlier, allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2010-3676: storage/innobase/dict/dict0crea.c in mysqld in Oracle MySQL 5.1 before 5.1.49 allows remote authenticated users to cause a denial of service (assertion failure) by modifying the (1) innodb_file_format or (2) innodb_file_per_table configuration parameters for the InnoDB storage engine, then executing a DDL statement.
CVE-2012-1697: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.5.21 and earlier allows remote authenticated users to affect availability via unknown vectors related to Partition.
CVE-2013-3802: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.69 and earlier, 5.5.31 and earlier, and 5.6.11 and earlier allows remote authenticated users to affect availability via unknown vectors related to Full Text Search.
CVE-2010-3680: mysql is vulnerable to denial of service. A flaw in the way MySQL processed CREATE TEMPORARY TABLE statements that define NULL columns when using the InnoDB storage engine, could allow a remote, authenticated attacker to crash mysqld.
CVE-2009-4030: mysql is vulnerable to privilege escalation. The vulnerability exists when the "datadir" option was configured with a relative path, MySQL did not properly check paths used as arguments for the DATA DIRECTORY and INDEX DIRECTORY directives. An authenticated attacker could use this flaw to bypass the restriction preventing the use of subdirectories of the MySQL data directory being used as DATA DIRECTORY and INDEX  DIRECTORY paths.
CVE-2012-1705: Unspecified vulnerability in the Server component in Oracle MySQL 5.1.66 and earlier and 5.5.28 and earlier allows remote authenticated users to affect availability via unknown vectors related to Server Optimizer.
CVE-2013-3808: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.68 and earlier, 5.5.30 and earlier, and 5.6.10 allows remote authenticated users to affect availability via unknown vectors related to Server Options.
CVE-2012-0540: Unspecified vulnerability in Oracle MySQL Server 5.1.62 and earlier and 5.5.23 and earlier allows remote authenticated users to affect availability, related to GIS Extension.
CVE-2012-0101: mysql is vulnerable to Denial of Service (DoS).
CVE-2008-7247: sql/sql_table.cc in MySQL 5.0.x through 5.0.88, 5.1.x through 5.1.41, and 6.0 before 6.0.9-alpha, when the data home directory contains a symlink to a different filesystem, allows remote authenticated users to bypass intended access restrictions by calling CREATE TABLE with a (1) DATA DIRECTORY or (2) INDEX DIRECTORY argument referring to a subdirectory that requires following this symlink.
CVE-2012-2102: MySQL 5.1.x before 5.1.62 and 5.5.x before 5.5.22 allows remote authenticated users to cause a denial of service (assertion failure and mysqld abort) by deleting a record and using HANDLER READ NEXT.
CVE-2013-5908: Unspecified vulnerability in the MySQL Server component in Oracle MySQL 5.1.72 and earlier, 5.5.34 and earlier, and 5.6.14 and earlier allows remote attackers to affect availability via unknown vectors related to Error Handling.
CVE-2023-20863: Spring Expression Language is vulnerable to Denial Of Service (DoS). The vulnerability exists in the `doParseExpression` function of `InternalSpelExpressionParser.java` because the SpEL expression length is not restricted which allows an attacker to cause an application crash.
CVE-2023-20861: Spring Framework is vulnerable to Denial of Service (DoS). The vulnerability is due to a lack of max repeated words and max number of character logic in the Spring Expression Language parser located in the `getValueInternal` function of `OpMultiply` and the `getValueInternal` function in `OperatorMatches`, which can trigger an infinite loop and consume excessive CPU memory, possibly leading to a system crash.
CVE-2024-38827: `org.springframework:spring-beans`, `org.springframework:spring-context`, `org.springframework:spring-core`, `org.springframework:spring-expression` and `org.springframework:spring-jdbc` is vulnerable to Authorization Bypass. The vulnerability is due to improper handling of locale-dependent exceptions in String.toLowerCase() and String.toUpperCase(), which could lead to authorization rules not functioning as intended.
CVE-2022-22950: Spring Expression is vulnerable to denial of service. The vulnerability exists due to the creation of large array in a SpEL and sending meaningless error messages to the user which allows an attacker to send crafted SpEL expressions that leads to an out ouf bound error causing an application crash. 
CVE-2018-1199: Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.
CVE-2018-1271: Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.
CVE-2014-3578: Directory traversal vulnerability in Pivotal Spring Framework 3.x before 3.2.9 and 4.0 before 4.0.5 allows remote attackers to read arbitrary files via a crafted URL.
CVE-2014-3625: Directory traversal vulnerability in Pivotal Spring Framework 3.0.4 through 3.2.x before 3.2.12, 4.0.x before 4.0.8, and 4.1.x before 4.1.2 allows remote attackers to read arbitrary files via unspecified vectors, related to static resource handling.
CVE-2024-38819: WebMvc.fn and WebFlux.fn are vulnerable to Path Traversal. The vulnerability is due to improper sanitization of user input in handling file paths, allows attackers to craft requests that bypass security restrictions and access unauthorized files on the server.             
CVE-2024-38816: org.springframework:spring-webmvc and org.springframework:spring-webflux are vulnerable to Path Traversal. The vulnerability is due to inadequate validation of file paths in HTTP requests, allowing access to files on the file system when using RouterFunctions with a FileSystemResource location.
CVE-2015-5211: Spring Web is vulnerable to reflected file download (RFD) attacks. These attacks can be conducted through a URL with a batch script extension; this will result in the response being downloaded rather than rendered. It also includes some input reflected in the response.
CVE-2016-9878: An issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet were not properly sanitized and as a result exposed to directory traversal attacks.
CVE-2014-0097: The ActiveDirectoryLdapAuthenticator in Spring Security 3.2.0 to 3.2.1 and 3.1.0 to 3.1.5 does not check the password length. If the directory allows anonymous binds then it may incorrectly authenticate a user who supplies an empty password.
CVE-2024-22257: org.springframework.security: spring-security-core is vulnerable to Authentication Bypass. The vulnerability is due to the `isFullyAuthenticated` method within the `AuthenticatedVoter` class incorrectly returning `true` *if* the `authentication` parameter is `null`, resulting in broken access control. Note that applications are only vulnerable if the `AuthenticatedVoter.vote()` method is used directly.
CVE-2020-5408: spring-security-core is vulnerable to Information Disclosure. The vulnerability exists as it uses a fixed null initialization vector with CBC Mode for the queryable text encryptor rather than handling the `null` value passed to the function `BCryptPasswordEncoder.encode()`, thereby allowing a user with access to encrypted data to trigger a dictionary attack to disclose the plaintext.
CVE-2019-3795: Spring Security versions 4.2.x prior to 4.2.12, 5.0.x prior to 5.0.12, and 5.1.x prior to 5.1.5 contain an insecure randomness vulnerability when using SecureRandomFactoryBean#setSeed to configure a SecureRandom instance. In order to be impacted, an honest application must provide a seed and make the resulting random material available to an attacker for inspection.
SRCCLR-SID-2784: spring-security-core is vulnerable to timing attacks. The attacks are possible because it does not use a constant time to verify passwords with different lengths, thereby revealing the time taken to compare the passwords.
CVE-2016-6652: SQL injection vulnerability in Pivotal Spring Data JPA before 1.9.6 (Gosling SR6) and 1.10.x before 1.10.4 (Hopper SR4), when used with a repository that defines a String query using the @Query annotation, allows attackers to execute arbitrary JPQL commands via a sort instance with a function call.
CVE-2025-22228: org.springframework.security, spring-security-crypto is vulnerable to Improper password verification. The vulnerability is due to BCrypt's 72-character password truncation causing BCryptPasswordEncoder.matches to validate only the first 72 characters, allowing incorrect password acceptance.
CVE-2022-22976: org.springframework.security:spring-security-crypto is vulnerable to integer overflows. The encoder does not perform any salt rounds when the `BCrypt` class is used with the maximum work factor(31), allowing a local authenticated attacker to cause an integer overflow error resulting in the attacker gaining access to sensitive user information.
CVE-2024-38809: org.springframework,spring-web is vulnerable to Denial Of Service (DoS). The vulnerability is due to improper handling of ETags from If-Match or If-None-Match request headers, allowing attackers to overwhelm the system and cause service disruption.
CVE-2014-0225: When processing user provided XML documents, the Spring Framework 4.0.0 to 4.0.4, 3.0.0 to 3.2.8, and possibly earlier unsupported versions did not disable by default the resolution of URI references in a DTD declaration. This enabled an XXE attack.
CVE-2020-5421: spring-web is vulnerable to Reflected File Download (RFD) attack. An incomplete fix of CVE-2015-5211 allows an attacker to bypass the protection against RFD attack via the `jsessionid` path parameter.  
CVE-2018-11039: spring-web is vulnerable to cross-site tracing (XST) attacks. The vulnerability exists as `HiddenHttpMethodFilter` allows web applications to change existing HTTP request method to any HTTP method, causing applications with existing cross-site scripting (XSS) vulnerability to be vulnerable to XST.
CVE-2016-1000027: spring-web is vulnerable to remote code execution (RCE). When it is used with external endpoints regardless of endpoints being authenticated or not, the function `HttpInvokerServiceExporter: readRemoteInvocation` allows deserialization of untrusted object if the endpoints are exposed to untrusted clients. It depends on the implementation within a product to mandate an authentication and to protect an application from an authenticated deserialization. The vendor has claimed the behavior to be as intended, but has deprecated the vulnerable Sun's JDK HTTP server classes in version 6.0.0. 
CVE-2024-22243: org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack.
CVE-2015-3192: Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.
CVE-2024-22262: org.springframework: spring-web is vulnerable Open Redirect. The vulnerability is caused due to improper validation checks on the host of the parsed URL, which could lead to potential SSRF attacks if the URL is utilized post-validation. 
CVE-2024-22259: org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack. Note that this vulnerability is the same as CVE-2024-22243 but with different input.
CVE-2018-1274: Spring Data Commons, versions 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property path parser vulnerability caused by unlimited resource allocation. An unauthenticated remote malicious user (or attacker) can issue requests against Spring Data REST endpoints or endpoints using property path parsing which can cause a denial of service (CPU and memory consumption).
CVE-2021-39146: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure default blacklist which does not cover all the excluded XStream security framework. 
CVE-2021-21347: xstream is vulnerable to remote code execution. The vulnerability exists because it relies on XStream's default blacklist of the Security Framework, allowing an attacker to manipulate the processed input stream and replace or inject objects, that result in execution of arbitrary code loaded from a remote server.
CVE-2021-21351: xstream is vulnerable to remote code execution. The vulnerability exists due to an uncontrolled process references on enum types at deserialization, allowing an attacker to manipulate the processed input stream and replace or inject objects, that result in execution of arbitrary code loaded from a remote server.
CVE-2021-21346: xstream is vulnerable to remote code execution. An attacker is able to manipulate the processed input stream and replace or inject objects which would result in the execution of arbitrary code loaded from a remote server.
CVE-2021-39139: xstream is vulnerable to remote code execution. An attacker may exploit the vulnerability by injection code via the input stream. 
CVE-2021-39154: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure blacklist which does not cover all the excluded XStream security framework. 
CVE-2022-40151: xstream is vulnerable to denial of service. The vulnerability exists due to the stack overflow in the `processConverterAnnotations` function of `AnnotationMapper.java`, allowing an attacker to cause an application crash by providing malicious input through the parser 
CVE-2021-21350: xstream is vulnerable to arbitrary code execution. A remote attacker is able to execute arbitrary code by manipulating the processed input stream.
CVE-2013-7285: It was found that XStream would deserialize arbitrary user-supplied XML content, representing objects of any type. A remote attacker able to pass XML to XStream could use this flaw to perform a variety of attacks, including remote code execution in the context of the server running the XStream application.
CVE-2021-39151: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure default blacklist which does not cover all the excluded XStream security framework. 
CVE-2021-21341: xstream is vulnerable to denial of service. An attacker is able to manipulate the processed input stream and replace or inject a manipulated ByteArrayInputStream to produce an endless loop which would lead to a denial of service condition.
CVE-2020-26258: xstream is vulnerable to remote code execution (RCE). The vulnerability exists through server-side request forgery when unmarshalling XStream objects with the `java.beans.EventHandler`, `java.lang.ProcessBuilder`, `javax.imageio.ImageIO$ContainsFilter`, and `jdk.nashorn.internal.objects.NativeString` classes.
CVE-2021-39144: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure default blacklist which does not cover all the excluded XStream security framework. 
CVE-2021-39153: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure default blacklist which does not cover all the excluded XStream security framework. 
CVE-2021-39145: XStream is vulnerable to remote code execution. A remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. 
CVE-2021-21349: xstream is vulnerable to Server-Side Forgery Request. The processed stream at unmarshalling time contains information to recreate the formerly written objects, allowing an attacker to manipulate data streams referencing a resource in an intranet or the local host.
CVE-2021-39140: xstreamis vulnerable to is vulnerable to Denial Of Service. An attacker can manipulate the processed input stream and replace or inject objects, that result in an endless loop probably causing a denial of service.
CVE-2020-26217: The processed stream at unmarshalling time contains type information to recreate the formerly written objects, and new instances are created based on these type information. The vulnerability allows an attacker to manipulate the processed input stream and replace or inject objects that can result in arbitrary shell commands execution.
CVE-2016-3674: Multiple XML external entity (XXE) vulnerabilities in the (1) Dom4JDriver, (2) DomDriver, (3) JDomDriver, (4) JDom2Driver, (5) SjsxpDriver, (6) StandardStaxDriver, and (7) WstxDriver drivers in XStream before 1.4.9 allow remote attackers to read arbitrary files via a crafted XML document.
CVE-2017-7957: XStream through 1.4.9, when a certain denyTypes workaround is not used, mishandles attempts to create an instance of the primitive type 'void' during unmarshalling, leading to a remote application crash, as demonstrated by an xstream.fromXML("<void/>") call.
CVE-2022-41966: xstream core is vulnerable to denial of service. The vulnerability exists in the `unmarshal` function in `XStream.java` due to a stack overflow which allows an attacker to manipulate the processed input stream at unmarshalling time and replace or inject objects calculating a recursive hash set.
CVE-2021-39148: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure default blacklist which does not cover all the excluded XStream security framework. 
CVE-2021-43859: com.thoughtworks.xstream:xstream is vulnerable to denial of service (DoS) attacks. A remote attacker is able to exhaust CPU resources depending on the CPU type or parallel execution of a payload by manipulating the processed input stream resulting in denial of service conditions.
CVE-2021-21348: xstream is vulnerable to regular expression denial of service. A remote attacker is able to occupy a thread that consumes excessive CPU resources for long period of time.
CVE-2021-39147: xstream is vulnerable to remote code execution. An attacker can manipulate the processed input stream and replace or inject objects, that result in execution of arbitrary code loaded from a remote server.
SRCCLR-SID-3833: XStream is vulnerable to denial of service (DoS) attacks. A malicious user can cause the Java Virtual Machine to crash by passing a malicious XML or JSON file to the system.
CVE-2021-39152: xstream is vulnerable to Server-Side Forgery Request. An attacker can manipulate the processed input stream and replace or inject objects, that result in a server-side forgery request.
CVE-2021-21343: xstream is vulnerable to Arbitrary File Deletion. An attacker may exploit the vulnerability by processing input stream and replace or inject malicious object that results in the deletion of a file on the local host due to the processed stream at unmarshalling time containing type information that recreates formerly written objects. 
CVE-2024-47072: com.thoughtworks.xstream, xstream is vulnerable to a Denial of service (DoS). The vulnerability is due to a stack overflow that allows an attacker to manipulate the processed input stream when XStream is configured to use the BinaryStreamDriver.                 
CVE-2021-21342: xstream is vulnerable to Server-Side Request Forgery (SSRF). An attacker is able to manipulate the processed input stream and replace or inject a manipulated ByteArrayInputStream that result in a server-side forgery request.
CVE-2021-39141: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure default blacklist which does not cover all the excluded XStream security framework. 
CVE-2021-39150: xstream is vulnerable to remote code execution. The vulnerability exists due to the usage of an insecure default blacklist which does not cover all the excluded XStream security framework. 
CVE-2021-39149: xstream is vulnerable to remote code execution. An attacker is able to exploit the vulnerability injecting arbitrary code via the processed input stream.
CVE-2021-21344: xstream is vulnerable to arbitrary code execution. An attacker is able to manipulate the processed input stream to replace or inject objects that result in the execution of arbitrary code loaded from a remote server during unmarshalling of written objects containing type information.
CVE-2021-29505: xstream is vulnerable to remote code execution. A remote attacker with sufficient rights is able to execute arbitrary code on the host by manipulating the processed input stream.
CVE-2022-22968: spring-context is vulnerable to binding rules bypass. The vulnerability exists due to a lack of sanitization of HTTP request parameters allowing an attacker to bypass the `disallowedFields` and bind maliciously crafted HTTP request parameters.  
CVE-2024-38820: org.springframework, spring-context is vulnerable to Case Insensitive Input Validation. The vulnerability is due to improper handling of case insensitivity in String.toLowerCase(), where the fix for making disallowedFields patterns case insensitive inadvertently introduced a risk. This behavior differs based on the system's locale, allowing an attacker to bypass field protection mechanisms.  
CVE-2016-9879: An issue was discovered in Pivotal Spring Security before 3.2.10, 4.1.x before 4.1.4, and 4.2.x before 4.2.1. Spring Security does not consider URL path parameters when processing security constraints. By adding a URL path parameter with an encoded "/" to a request, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. The unexpected presence of path parameters can cause a constraint to be bypassed. Users of Apache Tomcat (all current versions) are not affected by this vulnerability since Tomcat follows the guidance previously provided by the Servlet Expert group and strips path parameters from the value returned by getContextPath(), getServletPath(), and getPathInfo(). Users of other Servlet containers based on Apache Tomcat may or may not be affected depending on whether or not the handling of path parameters has been modified. Users of IBM WebSphere Application Server 8.5.x are known to be affected. Users of other containers that implement the Servlet specification may be affected.
CVE-2022-22978: Spring Security is vulnerable to authorization bypass. The vulnerability exists in `getRequestMatcherPrivilegeEvaluatorsEntry` function in `WebSecurity.java` due to misconfiguration of privilege evaluation which allows an attacker to gain access to the system and perform unauthorized actions. 
SRCCLR-SID-20558: Spring security web has Incorrect Headers Handling. It uses the HTTP Host header to construct URL. Thus it is vulnerable to cache poisoning. If this response is cached with a malicious HTTP Host header, a malicious URL could be returned which could be a part of a phishing attack.
CVE-2021-22112: spring-security-web is vulnerable to privilege escalation. The `SecurityContext` is not saved if it has been changed more than once in a single request, allowing a malicious user to run with elevated privileges in a small portion of the application, and subsequently may extend those privileges to the rest of the application.
SRCCLR-SID-2739: spring-security-web is vulnerable to breach attacks. The vulnerability exists because it returns the same CSRF token to the browser instead of returning a token  calculated using XOR of an internal CSRF token and a random per secret request. The attack is possible if CSRF protection in Spring is turned on and HTTP compression is used in web server.
SRCCLR-SID-2476: spring-security-web is vulnerable to open redirect phishing attack. The attack can be triggered because it does not properly calculate and use context relative URL in its default redirect strategy.
SRCCLR-SID-1845: Spring Security Web contains an open redirect on the login form. This allows an attacker to trick a user into visiting a malicious site that the user believes is legitimate. For example, this link http://legitimate.com/login?continue=http:www.malicious.site appears to be hosted by legitimate.com, but will actually redirect to www.malicious.site.
CVE-2015-0254: Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.
CVE-2025-48734: Apache Commons BeanUtils is vulnerable to Improper Access Control. The vulnerability is due to insecure property access due to failure to restrict access to the declaredClass property of Java enums, allowing attackers to access the classloader and potentially execute arbitrary code.
CVE-2019-10086: commons-beanutils2 is vulnerable to authorization bypass. The vulnerability exists as the class property of Java objects are able to get access to the classloader by default.
CVE-2014-0114: Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to "manipulate" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.
CVE-2022-23307: Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability allowing an attacker to execute maliciously scripted code via the system. 
CVE-2021-4104: JMSAppender in log4j is vulnerable to deserialization of untrusted object. When an application is configured to use JMSAppender with the setting TopicBindingName or TopicConnectionFactoryBindingName to something that JNDI can handle - for example "ldap://host:port/a", an attacker is able to execute code on the server as in Log4j 2.x CVE-2021-44228. However, this vulnerability is only depending on configuration. Note: This CVE is for Log4j 1.x and its corresponding flaw information for Log4j 2.x is in CVE-2021-44228.
CVE-2020-9493: Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability. 
CVE-2019-17571: log4j-core is vulnerable to arbitrary code execution. Deserialization of untrusted data in `TcpSocketServer` and `UdpSocketServer` when listening for log data allows an attacker to execute arbitrary code via a malicious deserialization gadget.
CVE-2023-26464: log4j:log4j is vulnerable to Denial of Service (DoS) attacks. The vulnerability is due to the Chainsaw or SocketAppender components processing a logging entry with either a deeply nested hashmap or hashtable, which can lead to memory exhaustion when the object is deserialized. An attacker can submit a crafted logging entry and cause Denial of Service if the JRE is below 1.7.
CVE-2022-23305: JDBCAppender in Log4j is vulnerable to SQL injection attacks. An attacker is able to execute arbitrary SQL commands via entering crafted strings into input fields and headers where the values to be inserted are converters from `PatternLayout`
CVE-2022-23302: JMSSink in log4j is vulnerable to deserialization of untrusted object. The insecure use of JNDI in JMSSink allows an attacker to send malicious object in LDAP store if it is accessible by an attacker or is configured to use an untrusted site, leading to a remote code execution.  Note: this vulnerability only affects the applications specifically configured to use JMSSink, which is not the default. 
CVE-2015-4852: Apache Commons includes a class called InvokerTransformer. An application is vulnerable to a deserialization attack if this class is available on the classpath and the application deserializes untrusted or user-supplied data. It's not necessary to actually use InvokerTransfomer to be vulnerable. With these two criteria satisfied, an attacker may construct a gadget chain using classes in the component to execute arbitrary code. The chain relies on the class InvokerTransformer in the org.apache.commons.collections.functors package to invoke methods during the deserialization process.  The fix prevents deserialization of InvokerTransformer by default unless it's specifically enabled.  CVE-2015-4852, CVE-2015-6420, CVE-2015-7501, and CVE-2015-7450 are all related to this artifact.
CVE-2022-22965: spring-beans is vulnerable to remote code execution. Using Spring Parameter Binding with non-basic parameter types, such as POJOs, allows an unauthenticated attacker to execute arbitrary code on the target system by writing or uploading arbitrary files (e.g .jsp files) to a location that can be loaded by the application server.   Initial analysis at time of writing shows that exploitation of the vulnerability is only possible with JRE 9 and above, and Apache Tomcat 9 and above, and that the vulnerability requires the usage of Spring parameter binding with non-basic parameter types such as POJOs.
CVE-2022-22970: spring-beans is vulnerable to denial of service. An attacker can crash the application through a model object when it sets a multipart file or javax.servlet.Part of a field
CVE-2019-16335: FasterXML jackson-databind is vulnerable to deserialization of untrusted data. It causes polymorphic typing because there are more than one association gadget types related to com.zaxxer.hikari.HikariDataSource by default. This vulnerability is different from CVE-2019-14540. A remote attacker can gain unauthorized access to sensitive information on the system.
CVE-2019-14439: jackson-databind is vulnerable to deserialization of untrusted data. A Polymorphic Typing issue existed in the library as `DefaultTransactionManagerLookup` and `JNDIConnectionSource` was missing from the validator function.. This only occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and it can potentially lead to remote code execution.
CVE-2020-14061: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. It is possible because it does not filter the untrusted serialization classes `weblogic/oracle-aqjms` from interaction between serialization gadgets and typing by default.
SRCCLR-SID-21524: FasterXML jackson-databind is vulnerable to deserialization of untrusted data. There is a polymorphic typing issue because there are more than one association gadget types related to CXF JAX-RS implementation by default.
CVE-2019-12086: A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.
CVE-2020-10672: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. The gadget `org.apache.aries.transaction.jms` is not validated and filtered by default from the interaction between serialization gadgets and polymorphic typing, allowing for injection of said object type which can lead to execution of arbitrary code.
CVE-2019-12384: jackson-databind is vulnerable to arbitrary code execution via unsafe deserrialization. Lack of object validation before deserialization allows an attacker to execute arbitrary code using polymorphic deserialization of a malicious gadget type.
CVE-2020-10969: jackson-databind is vulnerable to deserialization of untrusted data. It was possible for an untrusted class, `javax.swing.JEditorPane` to be used as a serialization gadget through polymorphic typing, potentially allowing execution of arbitrary code.
CVE-2017-15095: A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.
CVE-2020-36188: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource` class through deserialization.
CVE-2019-20330: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists as an unsafe deserializatino flaw due to the lack of sanitization of `net.sf.ehcache.transaction.manager.selector.GenericJndiSelector`, or `net.sf.ehcache.transaction.manager.selector.GlassfishSelector` classes when polymorphic typing with Default Typing is enabled.
CVE-2019-16943: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists as it does not stop classes from the `p6spy` package from being used as deserialization gadgets.
CVE-2018-14720: FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.
CVE-2020-9548: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the deserialization of a JSON payload that uses the `br.com.anteros.dbcp.AnterosDBCPConfig` gadget.
CVE-2018-14718: FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.
CVE-2020-36183: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool` class through deserialization.
CVE-2020-36184: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource` class through deserialization.
CVE-2018-14719: FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.
CVE-2017-7525: A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.
CVE-2019-14540: FasterXML jackson-databind is vulnerable to deserialization of untrusted data . There is a polymorphic typing issue because there are more than one association gadget types related to com.zaxxer.hikari.HikariConfig by default.
CVE-2020-35490: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. It is possible because untrusted classes `org.apache.commons.dbcp2.datasources.SharedPoolDataSource` was not filtered by default from the interaction between serialization gadgets and polymorphic typing.
CVE-2020-36179: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS` class through deserialization.
CVE-2020-10968: FasterXML jackson-databind is vulnerable to deserialization of untrusted data. There is a polymorphic typing issue because there are more than one association gadget types related to `org.aoju.bus.proxy.provider.remoting.RmiProvider` (aka `bus-proxy`) implementation by default.
CVE-2019-14893: jackson-databind is vulnerable to remote code execution. The application does not block the `xalan` classes during deserialization, which would allow a remote attacker to leverage the vulnerability to execute arbitrary code.
CVE-2020-36189: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource` class through deserialization.
CVE-2020-11111: jackson-databind is vulnerable to remote code execution. The vulnerability exists as the untrusted classes `org.apache.activemq.*` were not filtered by default from the interaction between serialization gadgets and polymorphic typing.
CVE-2020-14060: jackson-databind is vulnerable to remote code execution. It was possible to use the apache-drill gadget type as a serialization gadget through polymorphic typing and execute arbitrary code on the system.
CVE-2020-14195: jackson-databind is vulnerable to remote code execution. It was possible to use the `org.jsecurity` gadget type as a serialization gadget through polymorphic typing and execute arbitrary code on the system.
CVE-2020-11112: jackson-databind is vulnerable to remote code execution. The vulnerability exists as deserialization of untrusted data containing the class `org.apache.commons.proxy.provider.remoting.RmiProvider` was not filtered by default from the interaction between serialization gadgets and polymorphinc typing, allowing the execution of arbitrary code.
CVE-2020-35728: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool` class through deserialization.
CVE-2019-14892: jackson-databind is vulnerable to remote code execution. The application does not block the `commons-configuration` and `commons-configuration2` classes during deserialization, which would allow a remote attacker to leverage the vulnerability to execute arbitrary code.
CVE-2020-11113: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. It is possible because the untrusted classe `org.apache.openjpa.ee.WASRegistryManagedRuntime` were not filtered by default from the interaction between serialization gadgets and polymorphinc typing.
CVE-2020-11619: jackson-databind is vulnerable to deserialization of untrusted data. It was possible for an untrusted class, `org.springframework.aop.config.MethodLocatingFactoryBean`, and `org.springframework.beans.factory.config.BeanReferenceFactoryBean`, to be used as a serialization gadget through polymorphic typing, potentially allowing execution of arbitrary code.
SRCCLR-SID-22717: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. It is possible because untrusted classes `org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup`, `org.apache.ignite.cache.jta.jndi.CacheJndiTmFactory`, and `org.quartz.utils.JNDIConnectionProvider` were not filtered by default from the interaction between serialization gadgets and polymorphinc typing.
CVE-2019-16942: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists as it does not stop classes from the `commons-dbcp` package from being used as deserialization gadgets.
CVE-2017-17485: FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.
CVE-2020-36182: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS` class through deserialization.
CVE-2020-9546: jackson-databind is vulnerable to deserialization of untrusted data. It is possible because untrusted class `org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config)` was not filtered by default from the interaction between serialization gadgets and polymorphinc typing.
CVE-2018-5968: FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.
CVE-2020-36187: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `"org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource` class through deserialization.
CVE-2020-36185: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource` class through deserialization.
CVE-2019-12814: A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.
SRCCLR-SID-22677: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. It is possible because untrusted classes `org.apache.shiro.realm.jndi.JndiRealmFactory` and `org.apache.shiro.jndi.JndiObjectFactory` were not filtered by default from the interaction between serialization gadgets and polymorphinc typing.
CVE-2020-8840: jackson-databind is vulnerable to remote code execution. The vulnerability exists because it does not restrict the data sources for the `org.apache.xbean.propertyeditor.JndiConverter` object type, leading to deserialisation of arbitrary data from external untrusted sources which would allow an attacker to execute arbitrary code.
CVE-2020-36186: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource` class through deserialization.
CVE-2018-7489: FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.
CVE-2018-12022: An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.
CVE-2020-36181: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPD` class through deserialization.
CVE-2020-11620: FasterXML jackson-databind is vulnerable to deserialization of untrusted data. It causes polymorphic typing because there are more than one association gadget types related to `commons-jelly` (`org.apache.commons.jelly.impl.Embedded `) by default. A remote attacker can gain unauthorized access to sensitive information on the system.
CVE-2020-10673: jackson-databind is vulnerable to remote code execution (RCE) through deserialization of untrusted data. It is possible because the untrusted class, `com.caucho.config.types.ResourceRef `, was not filtered by default from the interaction between serialization gadgets and polymorphinc typing.
CVE-2020-24616: jackson-databind is vulnerable to arbitrary code execution. The vulnerability exists as an untrusted class, `br.com.anteros.dbcp.AnterosDBCPDataSource`, was not filtered by default from the interaction between serialization gadgets and polymorphic typing.
CVE-2020-14062: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. It is possible because the untrusted class `com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool` was not filtered by default from the interaction between serialization gadgets and polymorphinc typing.
CVE-2020-35491: jackson-databind is vulnerable to deserialization of untrusted data that can lead to remote code execution. It is possible because untrusted classes `org.apache.commons.dbcp2.datasources.SharedPoolDataSource` was not filtered by default from the interaction between serialization gadgets and polymorphic typing.
CVE-2019-17267: FasterXML jackson-databind is vulnerable to deserialization of untrusted data. There is a polymorphic typing issue because there are more than one association gadget types related to `net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup`.
CVE-2018-11307: jackson-databind is vulnerable to remote code execution (RCE) attacks. The vulnerability exists due to the availability of an allowed gadget type that could be used to perform remote code execution attacks through deserialization.
CVE-2021-20190: jackson-databind is vulnerable to arbitrary code execution. The vulnerability exists through the lack of sanitization of the `javax.swing.JTextPane` class through deserialization.
CVE-2019-17531: FasterXML jackson-databind is vulnerable to remote code execution (RCE). A polymorphic typing issue allows a remote attacker to execute arbitrary code through the JNDI service due to unsafe deserialization of objects related to the `apache-log4j-extra` classpath.
CVE-2018-14721: FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.
CVE-2020-36180: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the lack of sanitization of the `org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS` class through deserialization.
CVE-2018-19362: FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.
CVE-2018-12023: An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Oracle JDBC jar in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.
CVE-2019-14379: jackson-databind is vulnerable to remote code execution (RCE). The attack is possible due to lack of proper handling of gadget type conversion when `ehcache` is used.
CVE-2018-19360: FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.
CVE-2020-24750: jackson-databind is vulnerable to arbitrary code execution. The vulnerability exists as the untrusted Java object `com.pastdev.httpcomponents.configuration.JndiConfiguration` is not filtered by default, allowing an attacker to execute arbitrary code during deserialization.
CVE-2019-10172: jackson-mapper-asl is vulnerable to XML external entity attacks. This vulnerability is similar to CVE-2016-3720 whereby the external DTD is not disabled, allowing an attacker to retrieve system files, or perform requests on behalf of the server using malicious XML documents.
CVE-2018-19361: FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.
CVE-2020-9547: jackson-databind is vulnerable to remote code execution (RCE). The vulnerability exists through the deserialization of a JSON payload that uses the `com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig` gadget.
SRCCLR-SID-1841: There is an infinite loop in org.springframework.util.PatternMatchUtil by using a command such as PatternMatchUtils.simpleMatch("**a", "*").
CVE-2021-22096: Spring Framework is vulnerable to privilege escalation. The vulnerability exists due to lack of secure validations of user input which allows a malicious user to inject additional log files. 
SRCCLR-SID-3120: jackson-core-asl is vulnerable to hash collision attacks. The sanity checks added to prevent hash collisions will fail with too long collision chains.
CVE-2020-36604: @hapi/hoek is vulnerable to prototype pollution. The function `internals.clone` allows an attacker to get control of value of “path” and modify attributes such as `__proto__`, `constructor` and `prototype`.
SRCCLR-SID-36862: moment-timezone is vulnerable to command injection. An attacker can inject and execute the malicious commands using the child_process exec function as it does not sanitize the input. 
CVE-2022-25927: ua-parser-js is vulnerable to Regular Expression Denial Of Service (ReDoS). The vulnerability exists due to an insecure Regex pattern used for the `str` attribute in the `trim` function of `ua-parser.js`, which allows an attacker to crash the application by providing a maliciously crafted string.
CVE-2024-57965: Axios is vulnerable to Cross-Site Scripting (XSS). The vulnerability is due to improper origin determination and unsafe handling of the href attribute in the lib/helpers/isURLSameOrigin.js file, which does not use a proper URL object. It allows an attacker to manipulate the href attribute and inject malicious code.
CVE-2023-45857: axios is vulnerable to Cross-Site Request Forgery. The vulnerability is due to the `xhr.js` setting `config.withCredentials` to true which enables the sending of a confidential `XSRF-TOKEN` cookie within the `X-XSRF-TOKEN` HTTP header for all requests. This allows attackers to view sensitive information and also can leads to the bypass of CSRF protections.
SRCCLR-SID-45276: Axios is vulnerable to Regular Expression Denial of Service (ReDoS). This vulnerability is due to the use of a regex with inefficient time complexity when parsing URLS with many `/` characters within the `combineURLs` method. This vulnerability results in Denial of Service if an attacker can manipulate input to the `combineURLs` method.
CVE-2023-45133: babel is vulnerable to Arbitrary Code Execution . An attacker can trick a user into compiling malicious code which can lead to code injection during compilation, when using specific plugins that rely on internal babel methods. This can lead to bypass of several protection mechanisms posed by the package.
CVE-2023-44270: postcss is vulnerable to Improper Input Validation. The vulnerability is due to the `RE_BAD_BRACKET` in `tokenize.js` which does not account for carriage returns (\r). This means that any CSS containing a carriage return character `\r` would not be matched by this regular expression, potentially allowing malicious CSS to bypass any security or validation check that relies on this regular expression check. This can leads to potential CSS injection vulnerabilities.
CVE-2024-47764: cookie is vulnerable to Cookie Poisoning. The vulnerability is due to improper input validation for the cookie name, path, and domain fields, allowing these fields to be manipulated and alter other cookie attributes.
CVE-2023-46234: browserify-sign is vulnerable to Improper Verification Of Cryptographic Signature. An upper bound check issue in DSA verification allows an attacker to construct signatures that can be successfully verified by any public key, which leads to a signature forgery attack. The attacker could exploit this vulnerability by tricking a user into signing a malicious message with their private key. The attacker could then use the forged signature to impersonate the user or to authorize malicious transactions.
CVE-2025-26791: DOMPurify is vulnerable to mutation cross-site scripting (mXSS). The vulnerability is due to an incorrect template literal regular expression in DOMPurify, allows an attacker to execute mutation cross-site scripting (mXSS)     
CVE-2022-2596: Node-fetch is vulnerable to Denial of Service. The vulnerability lies in the `referrer` field in the `fetch()` function, leading to inefficient Regular Expression Complexity. If an attacker is able to use a large character string in the `referrer` field, the program will either hang or crash.
CVE-2022-25858: terser is vulnerable to regular expression denial of service. The vulnerability exists in index.js and evaluate.js because regular expressions used are not properly handled which allows an attacker to send crafted requests which causes an application crash.
CVE-2023-28155: request is vulnerable to Server-Side Request Forgery (SSRF). The vulnerability exists due to the `Redirect.prototype.redirectTo` function in `redirect.js`, which allows a remote attacker to bypass SSRF protection because library does not properly apply configurations when requests are redirected from http to https, or vice versa.
SRCCLR-SID-21913: request is vulnerable to prototype pollution attacks. When using filtering options, the package does not ensure that the `options` object that are passed to the `filterForNonReserved` method is using a clean object prototype. This allows an attacker to pollute the object and inject malicious values through the affected objects cause a denial of service condition in the application, or potentially remote code execution in certain situation.
SRCCLR-SID-3911: requests uses an insecure cipher. The library uses the SHA1 hashing algorithm by default which was shown to be compromised with the SHA1 shatter attack. The library also does not offer any alternate hashing algorithm.
CVE-2025-32997: http-proxy-middleware is vulnerable to Improper Request Handling. The vulnerability is due to improper request handling caused by fixRequestBody executing even when bodyParser has failed, which allows attackers to smuggle malicious HTTP requests.
CVE-2025-32996: http-proxy-middleware is vulnerable to Denial Of Service (DoS). The vulnerability is due to improper conditional logic due to the absence of "else if", which allows an attacker to trigger writeBody twice and potentially disrupt normal application behavior.
CVE-2022-38900: decode-uri-component is vulnerable to denial of service(DoS) attacks. A remote attacker is able to cause denial of service conditions via sending a malicious payload through the `decode` function in `index.js` due to improper input validation.
CVE-2024-39249: async is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability is due to the `autoinject` function, which allows an attacker to slowdown parsing with crafted whitespaces, resulting in Regular Expression Denial of Service (ReDoS).
CVE-2022-46175: json5 is vulnerable to prototype pollution. The vulnerability exists in the `internalize` function in `parse.js` due to not restricting keys named `__proto__` which allows an attacker to inject specially crafted strings to pollute the prototype of the resulting object.
CVE-2023-26159: follow-redirects is vulnerable to Open Redirect. The vulnerability is due to improper input validation of URL's in the `url.parse()` function. This issue can be exploited by an attacker to redirect users to malicious page leading to information disclosure or phishing attacks. 
CVE-2024-28849: follow-redirects is vulnerable to Credential Leakage. The vulnerability is due to insufficient redaction of the proxy-authentication header when handing requests. If an attacker can trigger a cross domain redirect, they can capture the request header containing the sensitive proxy-auth header, resulting in the leakage of credentials.
CVE-2024-11831: serialize-javascript is vulnerable to Cross-Site Scripting (XSS). The vulnerability is due to improper input sanitization due to the failure to properly sanitize certain inputs, such as regex or other JavaScript object types, allowing an attacker to inject and execute malicious code when deserialized by a web browser.
CVE-2021-23364: browserslist is vulnerable to regular expression denial of service. Usage of an insecure regex allows an attacker to cause a denial of service condition via a malicious string.
CVE-2024-29180: webpack-dev-middleware is vulnerable to Path Traversal. The vulnerability is due to insufficient validation of URL addresses, allowing attackers to access any file on the developer's machine by manipulating the URL with specific encoded sequences such as `%2e` or `%2f`.
SRCCLR-SID-32342: prompts is vulnerable to regular expression denial of service. The use of an inefficient regex pattern for `strip` allows an attacker to input a malicious string, leading to an application crash.
CVE-2024-45590: body-parser is vulnerable to Denial Of Service (DoS). The vulnerability is due to inadequate handling of url encoding in body-parser, which allows an attacker to flood the server with excessive requests, potentially disrupting the server’s availability.
CVE-2024-29415: ip is vulnerable to Server Side Request Forgery (SSRF). The vulnerability is due to some IP addresses being improperly categorized via the `isPublic`, `isPrivate`, and `isLoopback` methods, which allows an attacker to perform Server-Side Request Forgery (SSRF) if an application utilizes the library to restrict access based on public/private IP addresses.
CVE-2021-23337: lodash is vulnerable to command injection. The vulnerability exists through the unsanitized values of `template`.
CVE-2022-25881: http-cache-semantics is vulnerable to Regular Expression Denial Of Service (ReDoS). The vulnerability exists in the `parseCacheControl` function of `index.js` because of insufficient regular expression complexity which allows an attacker to cause an application crash.
CVE-2024-4068: braces is vulnerable to Memory Exhaustion. The vulnerability is due to improper input size restrictions, which allows an attacker to cause a Denial of Service (DoS) via crafted large imbalanced input to the `braces()` method, leading to memory exhaustion and eventual application crash.
CVE-2022-31129: moment is vulnerable to regular expression denial of service. The vulnerability exists due to the inefficient regex pattern used in the `preprocessRFC2822` function of `from-string.js`, allowing an attacker to crash the application by providing malicious inputs of more than 10k characters.
SRCCLR-SID-41137: inflight is vulnerable to a Memory Leak. The vulnerability is due to lack of restrictions on how many callbacks the library can concurrently support, which can result in a NodeJS out of heap memory crash.
CVE-2024-55565: nanoid is vulnerable to Mishandling non-integer values. The vulnerability is due to insufficient input validation and inadequate type checking in earlier versions of Nano ID, which fails to properly handle non-integer values. It allows attackers to exploit the mishandling of input, leading to potential issues such as data corruption, crashes, or even unintended code execution.    
CVE-2024-28863: node-tar is vulnerable to Denial of service (DoS). The vulnerability is caused due to lack of validation on the number of folders created during the folder creation process.This allows an attackers to consume excessive CPU and memory resources, potentially causing the system to become unresponsive or crash.
CVE-2025-30359: webpack-dev-server is vulnerable to source code exposure. The vulnerability is due to lack of proper origin checks due to requests for classic scripts not being subject to the same-origin policy, allowing attackers to inject malicious scripts that extract source code if the port and script path are known.
CVE-2024-27088: es5-ext is vulnerable to a Denial of Service (DoS). The vulnerability is due to the handling of functions with very long names or complex default argument names in `function#copy` or `function#toStringTokens`, which may cause the script to stall. This potentially leads to Denial of Service (DoS).
CVE-2024-12801: ch.qos.logback, logback-core is vulnerable to Server-Side Request Forgery (SSRF). The vulnerability is due to improper handling of the DOCTYPE declaration in XML configuration files, allowing an attacker to forge requests.    
CVE-2024-57699: net.minidev, json-smart is vulnerable to Denial Of Service (DoS). The vulnerability is due to loading a specially crafted JSON input with a large number of ‘{’, which allows an attacker to trigger a Denial of Service (DoS) attack.
CVE-2023-33201: org.bouncycastle is vulnerable to LDAP injection. The vulnerability exists because the `engineGetCRLs` function in `X509LDAPCertStoreSpi.java` does not properly validate the `X.509` certificates, allowing an attacker to insert malicious certificate's subject name with special characters such as `CN=Subject*)(objectclass=.` into an LDAP search filter without any escape mechanism.
CVE-2023-33202: org.bouncycastle: bcprov is vulnerable to Denial of Service (DoS). The vulnerability arises due to parsing certificates in the PEMParser class. This class is responsible for parsing X.509 certificates, encoded keys and PKCS7 objects. The parser can throw an `OutOfMemoryError` while parsing crafted ASN.1 data which can ultimately lead to a DoS.
CVE-2024-29857: org.bouncycastle:bcprov-jdk is vulnerable to Denial of Service. The vulnerability is due to improper validation of F2m parameters, allowing an attacker to use crafted parameters that cause high CPU usage during parameter evaluation.
CVE-2024-30171: org.bouncycastle:bcprov-jdk is vulnerable to Observable Discrepancy. The vulnerability is due to improper handling of exceptions in RSA-based handshakes. An attacker can exploit the timing differences observed during these exceptions to reveal sensitive information.
CVE-2025-46701: org.apache.tomcat, tomcat-catalina is vulnerable to improper handling of case sensitivity. The vulnerability is due to inconsistent case sensitivity handling in the pathInfo component of URIs mapped to the CGI servlet, which allows security constraints to be bypassed.
CVE-2025-24813: org.apache.tomcat:tomcat-catalina is vulnerable to Path Equivalence. The vulnerability is due to improper handling of internal dot notation in file names due to inadequate validation in the Default Servlet, allowing remote code execution, information disclosure, or unauthorized file modifications when specific conditions are met.
CVE-2025-31650: org.apache.tomcat, tomcat-coyote is vulnerable to Improper Input Validation. The vulnerability is due to incorrect error handling of invalid HTTP priority headers, which causes incomplete clean-up of failed requests and a memory leak, allowing an attacker to send many malformed requests to exhaust memory and trigger a Denial of Service (DoS).
CVE-2025-24970: io.netty:netty-handler  is vulnerable to Denial of Service. The vulnerability is due to improper input validation due to incorrect handling of specially crafted packets in SslHandler, which can lead to a native crash.
CVE-2025-25193: io.netty, netty-common is vulnerable to Denial Of Service (DoS). The vulnerability is due to an unsafe reading of the environment file, allows an attacker to create a large nonexistent file on Windows, causing Netty to crash due to an unsafe reading of the environment file.
CVE-2025-22235: org.springframework.boot is vulnerable to Missing Authorization. The vulnerability is due to incorrect request matching caused by EndpointRequest.to() creating a matcher for null/** when the targeted actuator endpoint is disabled or not exposed, which allows unprotected access to the /null path.
CVE-2024-34750: org.apache.tomcat: tomcat-coyote is vulnerable to Denial of Service (DoS). The vulnerability is due to improper handling of excessive HTTP headers in HTTP/2 streams, which leads to the miscounting of active streams resulting in an infinite connection timeout. This allows connections to remain open longer than intended, allowing an attacker to cause Denial of Service (DoS).
CVE-2024-52316: org.apache.tomcat, tomcat-catalina is vulnerable to Authentication Bypass. The vulnerability exists due to improper exception handling in custom Jakarta Authentication ServerAuthContext components, allowing attackers to bypass authentication and gain unauthorized access.             
CVE-2024-50379: Apache Tomcat is vulnerable to a Time-of-check Time-of-use (TOCTOU) Race Condition. The vulnerability is lack of proper synchronization between the time the system checks a file's state and when it actually uses the file, allowing an attacker to manipulate the file system state during the brief window between these two actions.      
CVE-2024-38828: org.springframework, spring-webmvc is vulnerable to Denial of Service (DoS). The vulnerability is caused by inefficient handling of large request bodies in controller methods with an @RequestBody byte[] parameter, which allows an attacker to lead to resource exhaustion.
CVE-2025-27533: org.apache.activemq, activemq-client is vulnerable to Denial Of Service (DoS). The vulnerability is due to missing or insufficient validation of buffer size values during the unmarshalling of OpenWire commands, allows attackers to supply excessively large size values, leading to uncontrolled memory allocation.
CVE-2024-38808: org.springframework, spring-expression is vulnerable to a Denial of Service (DoS). The vulnerability is due to the evaluation of user-supplied Spring Expression Language (SpEL) expressions, which attackers can exploit by providing specially crafted expressions that can overload the system.
CVE-2023-1370: net.minidev, json-smart is vulnerable to Denial Of Service (DoS). The vulnerability exists because there is no nested depth checks for deeply nested JSON arrays or objects, which allows an attacker to crash the application via a malicious array with deeply nested elements.
CVE-2020-36518: com.fasterxml.jackson.core:jackson-databind is vulnerable to denial of service. A malicious user is able to cause a `StackOverflow` exception using a large depth of nested objects resulting in a denial of service conditions.
CVE-2022-42004: jackson-databind is vulnerable to denial of service. The vulnerability exists in `_deserializeFromArray` function in `BeanDeserializer.java` due to resource exhaustion when processing a deeply nested array which allows an attacker to cause an application crash via a malicious input.
CVE-2022-42003: com.fasterxml.jackson.core:jackson-databind is vulnerable to denial of service. The vulnerability exists in `_deserializeWrappedValue` function in `StdDeserializer.java`, which allows an attacker to cause denial of service conditions via a maliciously crafted input, due to the resource exhaustion which occurs when processing a deeply nested array .
CVE-2021-46877: jackson-databind is vulnerable to Denial Of Service (DoS). The vulnerability exists because the `writeExternal` function in `NodeSerialization.java` does not properly handle JDK serialization of the `JsonNode`, which allows an attacker to crash the application(2 GB transient heap usage per read) if uses JDK serialization to serialize a `JsonNode`.
SRCCLR-SID-22742: commons-codec does not properly perform input validation on encoded values. The `decode()` function in the Base32, Base64 and BCodec classes fails to reject malformed Base32 and Base64 encoded strings and decodes into arbitrary values. A remote attacker can leverage this vulnerability to tunnel additional information via Base32 or Base64 encoded strings that appears to be legitimate.
CVE-2023-24998: Apache Commons FileUpload is vulnerable to Denial Of Service (DoS). The vulnerability exists because the default configuration doesn't limit the number of request parts to be processed which allows an attacker to submit an upload with unlimited file parts, resulting in Denial of Service.
SRCCLR-SID-5295: commons-io is vulnerable to remote code execution (RCE) attacks. These attacks are possible because the library doesn't restrict the classes which can be accepted when deserializing a binary.
CVE-2024-34447: Bouncy Castle Java Cryptography APIs are vulnerable to improper SSL/TLS hostname verification. The vulnerability is due to hostname verification potentially being performed against a DNS-resolved IP address when no explicit hostname is provided, which could lead to DNS poisoning risks.
CVE-2024-30172: org.bouncycastle:bcprov-jdk is vulnerable to an infinite loop. The vulnerability is due to insufficient verification of signatures and public keys during Ed25519 verification, allowing attackers to trigger a denial of service (DoS) due to the infinite loop.
CVE-2022-21449: Oracle Java SE and Oracle GraalVM Enterprise Edition product of Oracle Java SE (their component: Libraries) are vulnerable to signature verification bypass. The vulnerability is possible due to a flawed implementation of ECDSA verification code rewritten from native C++ code, allowing an attacker to forge signature and bypass signature verification. The vulnerability exists only for Java 15, 16, 17, or 18 version.  
CVE-2023-52428: com.nimbusds, nimbus-jose-jwt is vulnerable to a Denial of Service (DoS). The vulnerability is due to insufficient validation and handling of the JWE p2c header value in the PasswordBasedDecrypter (PBKDF2) component, allowing the acceptance of excessively large values that can lead to resource consumption.
CVE-2022-45688: hutool-json is vulnerable to denial of service. The vulnerability exists due to a stack-based overflow in the library which allows an attacker to cause an application crash via malicious JSON or XML data.
CVE-2022-2390: play-services-basement is vulnerable to privilege escalation.The vulnerability exists due to the modification of assumed-immutable data which allows an attacker to elevate their privileges.
CVE-2024-23635: antisamy is vulnerable to Cross Site Scripting (XSS). The vulnerability is due to improper parsing of HTML when the `preserveComments` directive is enabled in the  policy file. This issue can be exploited by an attacker to inject malicious JavaScript via comment tags. 
SRCCLR-SID-44410: org.owasp.esapi:esapi is vulnerable to Cross-site Scripting (XSS). The `Validator.isValidSafeHTML()` method, which is responsible for determining whether user-supplied input is safe to include in HTML content, exhibits a flaw that can lead to false negatives. This means that the method may incorrectly identify certain input as safe (i.e., return true) when it actually contains malicious code. As a result, utilizing this supposedly "safe" input directly could enable attackers to inject malicious scripts into the web application.
CVE-2024-6531: bootstrap is vulnerable to Cross Site Scripting (XSS). The vulnerability is caused due to a missing sanitization in the href attribute of the `<a>` tag while working with `data-slide` and `data-slide-to` attributes. This could enable an attacker to execute arbitrary JavaScript within the victim's browser.
CVE-2025-27820: org.apache.httpcomponents.client5, httpclient5 is vulnerable to improper domain validation. The vulnerability is due to disabled domain checks caused by a bug in the PSL validation logic, affecting cookie management and host name verification, which allows an attacker to perform cookie injection or man-in-the-middle attacks.
SRCCLR-SID-30298: oauth2-oidc-sdk is vulnerable to XML external entity (XXE) attacks.The `parse` function in `SAML2AssertionValidator.java` does not disable access to external entities by default, allowing an attacker to submit a malicious XML document to perform requests on behalf of the server.
CVE-2024-56128: org.apache.kafka, kafka-clients is vulnerable to an incorrect implementation of the authentication algorithm. The vulnerability is due to the lack of nonce verification in Apache Kafka's SCRAM implementation, where the server does not verify that the nonce sent by the client in the second message matches the nonce sent by the server in the first message, as required by RFC 5802, allows an attacker to potentially intercept and manipulate the authentication exchange if transmitted over an unencrypted channel (plaintext).           
CVE-2024-31141: Apache Kafka Clients is vulnerable to Improper Privilege Management. The vulnerability is due to ConfigProvider plugins, including FileConfigProvider, DirectoryConfigProvider, and EnvVarConfigProvider, allowing untrusted users to read arbitrary files or environment variables, potentially leading to privilege escalation in certain configurations.
CVE-2020-15522: bouncycastle is vulnerable to information disclosure. The vulnerability exists due to a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures.
SRCCLR-SID-27749: Bouncy Castle is vulnerable to hash collision attacks. The library keystore files uses a HMAC hash that is only 16 bits long, allowing a malicious user to retrieve the password used for keystore integrity verification checks. This vulnerability only affects users of the `BKS-V1` keystore format, which was re-introduced since 1.49. Since it is re-introduced in Bouncy Castle 1.49, users of Bouncy Castle 1.49 and above may be affected if the legacy BKS-V1 is being used. To remediate the vulnerability, ensure that there are no usage of BKS-V1.
CVE-2024-35255: Azure Identity and Microsoft Authentication are vulnerable to Privilege Escalation. The vulnerability is due to improper handling of tokens and keys within DefaultAzureCredential and ManagedIdentityCredential classes, allowing an attacker to elevate to SYSTEM privileges read arbitrary files on the filesystem. 
CVE-2023-43643: AntiSamy is vulnerable to Cross Site Scripting. The vulnerability arises due to flawed parsing of the HTML being sanitized. As a result an attacker can execute malicious JavaScript on client side by using certain crafty inputs resulting in elements in comment tags being interpreted as executable when using AntiSamy's sanitized output. The `preserveComments` directive must be enabled in the AntiSamy policy file (e.g., `antisamy.xml`) to get subjected to this vulnerability. 
CVE-2024-26308: org.apache.commons: commons-compress is vulnerable to Denial Of Service (DoS). This vulnerability is caused when uncompressing a corrupted PAC200 archive, which results in Denial of Service by consuming excessive system resources.
CVE-2024-25710: org.apache.commons: commons-compress is vulnerable to Denial Of Service. The vulnerability is due to an infinite loop when parsing dump files, which allows an attacker to inject crafted values to cause Denial of Service (DoS).
CVE-2021-28169: jetty-servlets is vulnerable to information disclosure. Lack of proper handling of requests to the ConcatServlet with a doubly encoded path allows an attacker to access protected resources within the WEB-INF directory. For example, sending `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file.
CVE-2023-36479: Jetty-servlets is vulnerable to Arbitrary Code Execution. The vulnerability is due to insecure escaping of user input which can result in the execution of arbitrary commands. This vulnerability occurs in the CGI servlet handler through the `getRuntime.exec()` method.
CVE-2024-9823: org.eclipse.jetty, jetty-servlets is vulnerable to Denial Of Service (DoS). The vulnerability is due to the exploitation of Jetty's DosFilter, which allows attackers to send crafted requests that trigger OutOfMemory errors.
CVE-2024-31573: org.xmlunit: xmlunit-core is vulnerable to Arbitrary Code Execution. The vulnerability is due to enabling XSLT extension transformation functions by default within `TransformerFactoryConfigurer.java`, which could allows attackers to execute arbitrary code during XSLT transformations if an application parses untrusted XSLT files.
CVE-2021-47621: io.github.classgraph:classgraph is vulnerable to XML External Entity (XXE). The vulnerability is due to improper handling of external entities during XML processing, which can result in XML External Entity (XXE) injection attacks that can expose sensitive data or execute malicious code.
CVE-2025-4949: org.eclipse.jgit, org.eclipse.jgit is vulnerable to XML External Entity (XXE) attacks. The vulnerability is due to insecure handling of XML input by the ManifestParser and AmazonS3 classes when parsing XML files, allows an attacker to perform XML External Entity (XXE) attack.
SRCCLR-SID-6586: maven-core is vulnerable to arbitrary file writes. The application does not properly validate the destination filepath when during zip file extraction, allowing a malicious user to control the write destination and overwrite files.
CVE-2020-13956: httpclient is vulnerable to validation bypass. A malformed authority component in the request URIs that is passed to the library as `java.net.URI` object would result in the request execution for a wrong target host.
SRCCLR-SID-22555: jcommander is vulnerable to man-in-the-middle attacks. The usage of an insecure HTTP channel during build allows an attacker to intercept and modify network traffic and introduce malicious code into the third-party component.
SRCCLR-SID-30004: plexus-cipher uses an insecure random number generator. The constructor sets a system property and does not initialize `_secureRandom`. This results in `getSalt()` function falling back to the usage of an insecure `Random`.
SRCCLR-SID-3322: httpcore5 and httpclient are vulnerable to directory traversal attacks. The vulnerability is possible because the string input by user is not validated for the presence of leading character `/` and is passed to the constructor as `path` information.
CVE-2014-3577: org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a "CN=" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the "foo,CN=www.apache.org" string in the O field.
CVE-2022-34169: xalan:xalan is vulnerable to remote code execution. An attacker is able to corrupt Java class files generated by the internal XSLTC compiler and execute harmful Java bytecodes on the host machine due to an integer truncation flaw which occurs during XSLT style sheet processing.
CVE-2014-0107: The TransformerFactory in Apache Xalan-Java before 2.7.2 does not properly restrict access to certain properties when FEATURE_SECURE_PROCESSING is enabled, which allows remote attackers to bypass expected restrictions and load arbitrary classes or access external resources via a crafted (1) xalan:content-header, (2) xalan:entities, (3) xslt:content-header, or (4) xslt:entities property, or a Java property that is bound to the XSLT 1.0 system-property function.
CVE-2024-7254: Google Protobuf is vulnerable to a StackOverflow. The vulnerability is due to insufficient validation and control over the parsing of nested groups and SGROUP tags in untrusted Protocol Buffers data, allowing an attacker to crash the application or make it unresponsive.       
CVE-2022-23437: xercesImpl is vulnerable to denial of service. The vulnerability exists because the library does not properly handle XML document payloads, allowing an attacker to crash the application by providing a specially crafted XML document through the XML parser.
CVE-2024-47535: io.netty, netty-common is vulnerable to Denial Of Service (DoS). The vulnerability is due to unsafe reading of environment files, where Netty attempts to load a non-existent file, allows an attacker can exploit this by creating a large file, causing the application to crash and resulting in a denial of service.
CVE-2016-2510: BeanShell (bsh) before 2.0b6, when included on the classpath by an application that uses Java serialization or XStream, allows remote attackers to execute arbitrary code via crafted serialized data, related to XThis.Handler.
CVE-2024-23672: org.apache.tomcat: tomcat-websocket is vulnerable to Denial of Service (DoS). The vulnerability is due to improper cleanup of WebSocket connections during a session timeout. If a client fails to send a close message within the timeout period, the websocket connection will continue to hold resources, which can result in Denial of Service.
CVE-2024-38807: org.springframework.boot:spring-boot-loader and org.springframework.boot:spring-boot-loader-classic are vulnerable to Improper Verification of Cryptographic Signature due to the signature verification process in nested jar files. An attacker can manipulate the signature to appear as if it was signed by a trusted source by exploiting the verification logic.
CVE-2017-5662: In Apache Batik before 1.9, files lying on the filesystem of the server which uses batik can be revealed to arbitrary users who send maliciously formed SVG files. The file types that can be shown depend on the user context in which the exploitable application is running. If the user is root a full compromise of the server - including confidential or sensitive files - would be possible. XXE can also be used to attack the availability of the server via denial of service as the references within a xml document can trivially trigger an amplification attack.
CVE-2022-24839: nekohtml is vulnerable to denial of service. The vulnerability exists due to a memory corruption allowing an attacker to crash the system via a maliciously crafted HTML markup. 
CVE-2017-14735: OWASP AntiSamy before 1.5.7 allows XSS via HTML5 entities, as demonstrated by use of &colon; to construct a javascript: URL.
CVE-2016-10006: In OWASP AntiSamy before 1.5.5, by submitting a specially crafted input (a tag that supports style with active content), you could bypass the library protections and supply executable code. The impact is XSS.
CVE-2022-28367: org.owasp.antisamy:antisamy is vulnerable to cross-site scripting(XSS) attacks. The `output serializer` does not properly encode the cascading style sheet(CSS) content, allowing an attacker to conduct HTML tag smuggling on `STYLE` content with the use of a specifically crafted user input, resulting in harmful javascript been executed in victim's browser.
SRCCLR-SID-22277: netty-handler is vulnerable to man-in-the-middle attacks. The library uses an SSLEngine that does not verify certificate hostnames when establishing connections with a server by default. This allows an attacker to potentially intercept and modify network traffic in a successful man-in-the-middle attack.
CVE-2024-29025: io.netty: netty-codec-http is vulnerable to Denial Of Service (DoS). The vulnerability is due to missing form field restrictions within the `HttpPostRequestDecoder` class. An attacker can send a chunked POST request with many small form fields, possibly resulting in Denial of Service (DoS).
CVE-2022-24891: esapi is vulnerable to cross-site scripting. The vulnerability exists due to the lack of sanitization use in the `onsiteURL` regular expression of `antisamy-esapi.xml`, allowing an attacker to inject and execute malicious javascript
CVE-2022-23457: org.owasp.esapi:esapi is vulnerable to path traversal. A remote authenticated user is able to break out of expected directory via a crafted input through `getValidDirectoryPath` function, because it may incorrectly treat the tested input string as a child of the specified parent directory.
CVE-2019-12415: Apache Poi is vulnerable to XML external entity (XXE). During the use of `XSSFExportToXml` tool to convert user-provided Microsoft Excel documents, it is possible for an attacker to parse a malicious Microsoft Excel document containing a reference to an external entity and perform requests on behalf of the server.
CVE-2025-31672: org.apache.poi:poi-ooxml is vulnerable to Improper Input validation. The vulnerability is due to improper input validation due to the lack of checks for duplicate ZIP entry names in OOXML files, which can lead to inconsistent parsing behavior across different products.
CVE-2021-29425: commons-io is vulnerable to directory traversal. Invoking the method `FileNameUtils.normalize` with a malicious input string would potentially allow access to files within the parent directory.
CVE-2024-47554: Apache Commons IO is vulnerable to Uncontrolled Resource Consumption. The vulnerability is due to excessive CPU consumption caused by the org.apache.commons.io.input.XmlStreamReader class when processing maliciously crafted input.
CVE-2024-24549: org.apache.tomcat, tomcat-coyote is vulnerable to Denial of Service (DoS). The vulnerability is due to improper request handling when processing an HTTP/2 request that exceeds any of the configured limits for headers, leading to the associated HTTP/2 stream not being reset until after all of the headers had been processed. This vulnerability allows an attacker to send requests with excessively large headers or too many headers which can result in Denial Of Service (DoS) attacks.
CVE-2024-38821: org.springframework.security, spring-security-web is vulnerable to Authorization Bypass. The vulnerability is due to a flaw in Spring Security’s handling of authorization rules for static resources in WebFlux applications, which allows these rules to be bypassed under specific conditions.
CVE-2023-51074: json-path is vulnerable to Denial Of Service (DoS). The vulnerability is due an infinite recursion caused when a specially crafted input is passed to the `Criteria.parse()` method which results in a stack overflow.
CVE-2024-22234: org.springframework.security: spring-security-core is vulnerable to Broken Access Control. The vulnerability is due to incorrectly retuning a `true` return value from the `AuthenticationTrustResolver.isFullyAuthenticated()` method when a null authentication parameter is passed to it. This can result in bypassing access controls and an attacker gaining illegitimate access to the application.
CVE-2023-35887: org.apache.sshd:sshd-common and org.apache.sshd:sshd-sftp are vulnerable to Information Disclosure. SFTP servers using the library with a `RootedFileSystem` may reveal the existence of items outside the rooted tree through parent navigation or symlinks, resulting in disclosure of sensitive information.
CVE-2023-42503: libcommons-compress-java is vulnerable to Denial of Service (DoS). The vulnerability allows an attacker to cause a DoS attack on an application that uses Apache Commons Compress by sending a specially crafted TAR file.
CVE-2024-8184: org.eclipse.jetty, jetty-server is vulnerable to a Remote Denial-of-Service (DoS). The vulnerability is due to the ThreadLimitHandler.getRemote() method, which allows unauthorized users to send crafted requests that trigger OutOfMemory errors and exhaust the server's memory.       
CVE-2023-51775: jose4j is vulnerable to Denial of Service (DoS). The vulnerability is due to insufficient validation of a large p2c (PBES2 Count) value, allowing attackers to trigger excessive CPU usage. This potentially leads to Denial of Service (DoS).
CVE-2024-52046: Apache MINA is vulnerable to Remote code execution (RCE). The vulnerability is due to lack of necessary security checks and defenses in the ObjectSerializationDecoder, which uses Java’s native deserialization protocol. It allows attackers to exploit the deserialization process by sending malicious serialized data.       
CVE-2024-6763: org.eclipse.jetty:jetty-server is vulnerable to Improper Validation of Syntactic Correctness of Input via the HttpURI class. The vulnerability is due to insufficient validation on the authority segment of a URI. An attacker can manipulate the URI parsing to redirect requests or initiate server-side requests to unintended destinations by supplying malformed URIs that bypass validation checks.
CVE-2023-40167: Jetty is vulnerable to HTTP Request Smuggling. The vulnerability is due to accepting `+` character proceeding the content-length in the request. This vulnerability can be exploited by the attacker to possibly conduct request smuggling attacks. 
CVE-2024-41909: org.apache.sshd, sshd-common is vulnerable for Improper Validation Of Integrity Check Value. The vulnerability is due to the possibility of packet interception, where an attacker can intercept traffic between the client and server and drop certain packets from the stream, potentially downgrading or disabling some security features. Attackers can exploit this to conduct a Terrapin attack, compromising the security of the connection.
CVE-2024-23944: Apache ZooKeeper is vulnerable to Sensitive Information Disclosure. The vulnerability is due to missing ACL checks in the persistent watcher feature. An attackers can monitor child znodes by attaching a persistent watcher to a parent node they already have access to. When the persistent watcher is triggered, ZooKeeper server doesn't perform ACL check, exposing the full path of znodes to the watcher's owner. 
CVE-2024-47561: Apache Avro is vulnerable to Deserialization of Untrusted Data. The vulnerability is due to improper schema parsing in the Java SDK, which allows attackers to execute arbitrary code.
SRCCLR-SID-29415: @angular/core is vulnerable to cross-site scripting (XSS). An attacker is able to inject and execute arbitrary Javascript in a user's browser through SSR.
CVE-2021-4231: @angular/core is vulnerable to cross-site scripting. The vulnerability exists in few methods due to not escaping the comment text which allows an attacker to inject and execute arbitrary javascript. 
SRCCLR-SID-22082: sonar-scanner-api is vulnerable to denial of service(DoS) attacks. The vulnerability exists in the `ServerConnection.java` class because the downloadFile function does not properly close response body, resulting in excessive resource consumption that can potentially lead to an application crash.
CVE-2024-38810: org.springframework.security, spring-security-core is vulnerable to Improper Authorization. The vulnerability is caused due to a missing Authorization when using `@AuthorizeReturnObject`. This allows attacker to render security annotations inaffective. 
CVE-2023-33546: org.codehaus.janino:janino is vulnerable to Denial of Service (DoS) attacks. The vulnerability is due to the `guessParameterNames` method caused to an uncaught stack overflow exception, which can be triggered by user input with deeply nested structures causing the application to crash.
CVE-2023-34036: Spring HATEOS is vulnerable to Improper Neutralization Of HTTP Headers. The vulnerability is due to not sanitizing or stripping the "Forwarded", "X-Forwarded-Host", "X-Forwarded-Port" or "X-Forwarded-Proto" headers. This can allow an attacker to spoof these headers values thereby bypassing security mechanisms meant to prevent illegitimate access. The application needs to use reactive web stack (Spring WebFlux) for this vulnerability to materialise.
CVE-2021-31684: json-smart is vulnerable to denial of service (DoS). An unhandled ArrayIndexOutOfBoundsException thrown from the indexOf function of JSONParserByteArray allows a remote attacker to crash the program or leak confidential information.
CVE-2021-27568: json-smart is vulnerable to denial of service (DoS) attacks. An unhandled NumberFormatException thrown from the function `extractFloat` in `JSONParserBase.java` allows a remote attacker to crash programs or leak sensitive information.  
CVE-2023-20883: spring-boot-autoconfigure is vulnerable to Denial Of Service (DoS). The vulnerability is applicable when the application has Spring MVC auto-configuration enabled and uses the Spring Boot welcome page, which can be either static or templated, and the application is deployed behind a proxy which caches the 404 responses. An attacker can cause the application to crash by submitting a request to the welcome page which the server is unable to properly respond to.
SRCCLR-SID-30179: activemq-broker is vulnerable to denial of service (Dos). The library does not properly implement bounds checking on the message scheduling properties, allowing a malicious user to cause an application crash by sending many messages with a repeat value of Integer.
CVE-2022-22971: spring-messaging is vulnerable to denial of service. The vulnerability exists because the `handleMessageInternal` function of `SimpleBrokerMessageHandler.java` does not properly handle to ignore the invalid `STOMP` frames, allowing an attacker to cause an application crash through the WebSocket endpoint. 
CVE-2023-28513: IBM MQ is vulnerable to Denial Of Service (DoS). The vulnerability exists due to an error processing messages which allows an attacker to cause an application crash. 
CVE-2019-4049: IBM MQ is vulnerable to denial of service.An attacker is able to exploit the vulnerability by filling up the disk space of the filesystem via the error logging service. 
CVE-2024-47068: Rollup is vulnerable to a DOM Clobbering. The vulnerability is due to improper handling of import.meta properties in cjs/umd/iife formats, which allows an attacker to perform cross-site scripting (XSS) attacks through unsanitized HTML elements, like an img tag with an unsanitized name attribute.
CVE-2025-27789: Babel is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability is due to quadratic complexity in the .replace method polyfill when compiling regular expression named capturing groups, allowing an attacker to cause excessive processing time with crafted input.
CVE-2024-4067: micromatch is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability is due a regex expression with inefficient complexity within the `micromatch.braces()` method. An attacker can submit a large payload without a closing bracket, which results in Regular Expression Denial of Service (ReDoS) as the application slows down, hangs or crashes.
CVE-2023-37466: vm2 is vulnerable to Sandbox Escape. The vulnerability exists because the library does not properly sanitize a `Promise` return, allowing an attacker to escape the sandbox and inject and execute malicious code.
SRCCLR-SID-41279: vm2 is vulnerable to Sandbox Escape. The vulnerability exists because the Node.js custom inspect function allows attackers to escape the sandbox and inject and execute malicious code.
CVE-2024-43788: Webpack is vulnerable to Cross Site Scripting(XSS). The vulnerability is due to improper handling and lack of sanitization of HTML elements and their attributes in Webpack's `AutoPublicPathRuntimeModule`, allowing attacker-controlled elements to execute malicious scripts.
CVE-2024-21538: cross-spawn is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability is due to improper input sanitization, which allows an attacker to craft a large string that increases CPU usage and crashes the program.
CVE-2024-43796: Express.js is vulnerable to Remote Code Execution (RCE). The vulnerability is due to insufficient validation or handling of user input when passed to response.redirect(), allowing untrusted code to be executed despite sanitization efforts.
CVE-2024-21536: http-proxy-middleware is vulnerable to Denial of Service (DoS). The vulnerability is due to an unhandled promise rejection error caused by micromatch, which can allow an attacker to crash the server by making requests to certain paths.
CVE-2024-43800: serve-static is vulnerable to Cross-site Scripting (XSS). The vulnerability is due to passing untrusted user input, even after sanitization, to the redirect() function, which may lead to the execution of untrusted code.
CVE-2024-43799: Send is vulnerable to untrusted code execution. The vulnerability is due to the failure to properly validate or sanitize user input before passing it to SendStream.redirect(), which allows an attacker to execute arbitrary code on the server.
CVE-2024-45296: path-to-regexp is vulnerable to Denial Of Service (DoS). The vulnerability is due to the generation of inefficient regular expressions when path strings contain two parameters within a single segment separated by a non-period character, allowing an attacker to cause high CPU usage and potentially disrupt the service.     
CVE-2025-22223: org.springframework.security, spring-security-core is vulnerable to Authorization Bypass. The vulnerability is due to improper method security annotation detection due to issues in locating annotations on parameterized types or methods, allowing an attacker to access methods or resources without proper authorization.
SRCCLR-SID-33427: rhino is vulnerable to xml external entity attack. The vulnerability exists due to a lack of sanitization of DOCTYPE and ENTITY declarations to the XML to trick the Java parsers into making protocol requests when parsing XML document.
CVE-2022-29546: neko-htmlunit is vulnerable to denial of service. An attacker can crash the application through the out of memory exception in the `scanPI` function of `HTMLScanner.java` by providing a specifically crafted processing instruction.
CVE-2021-45105: log4j is vulnerable to denial of service. An attacker with control over Thread Context Map (MDC) input data is able to cause a denial of service by causing a StackOverflowError that will terminate the process. This is due to uncontrolled recursion from self-referential lookups when the logging configuration uses a non-default Pattern Layout with a Context Lookup (for example, `$${ctx:loginId}`).
CVE-2023-20873: org.springframework.boot:spring-boot-actuator-autoconfigure is vulnerable to Access Restriction Bypass. The vulnerability is due to improper wild card matching, which allows a remote attacker to bypass access restrictions and gain access to the system. Please note that the vulnerability is only applicable if its deployed on Cloud Foundry.
CVE-2022-41854: org.yaml:snakeyaml is vulnerable to Denial of Service. The vulnerability is only due when SnakeYaml parses untrusted yaml, resulting in a denial of service through memory exhaustion.
CVE-2022-1471: SnakeYaml is vulnerable to Remote Code Execution (RCE). The vulnerability is due to deserializing unrestricted types in the `Constructor` method leading to Remote Code execution through classpath injection. 
CVE-2022-38752: org.yaml:snakeyaml is vulnerable to denial of service (DoS) attacks. The parser is running on user supplied input, which allows an attacker to parse untrusted YAML files causing an application crash through stack-based buffer overflows.
CVE-2022-38750: snakeyaml is vulnerable to denial of service. The vulnerability exists in the `Composer` function of `Composer.java` as it does not properly restrict the nested depth limitation for collections, allowing an attacker to crash the application through the stack overflow by providing malicious yaml files.  
CVE-2022-38749: snakeyaml is vulnerable to denial of service. The vulnerability exists in the `Composer` function of `Composer.java` as it does not properly restrict the nested depth limitation for collections which allows an attacker to crash the application through the stack overflow by providing malicious yaml files.
CVE-2022-25857: snakeyaml is vulnerable to denial of service. The vulnerability exists because the `Composer` function of `Composer.java` does not properly restrict the nested depth limitation for collections, allowing an attacker to crash the application.
CVE-2022-38751: snakeyaml is vulnerable to denial of service. The vulnerability exists in the `resolve.java` due to a lack of input validation, allowing an attacker to crash the system via malicious yaml file.
CVE-2023-5072: JSON-Java is vulnerable to Denial of Service. The vulnerability is due to chars with value `\0` being parsed incorrectly, which can results in an input string of modest size causing indefinite amounts of memory usage.
CVE-2018-10237: Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.
CVE-2020-8908: guava is vulnerable to information disclosure. A folder with insecure permissions is created by the function `com.google.common.io.Files.createTempDir`. A local user will be able to steal secrets stored in this directory.
CVE-2023-2976: com.google.guava, guava is vulnerable to Information Disclosure. The vulnerability exits due to incorrect default file permissions in `FileBackedOutputStream`, which allow an attacker to access the temporary directory.
CVE-2022-31690: Spring Security OAuth2 Client is vulnerable to privilege escalation. The vulnerability exists in the `getTokenResponse` function in multiple files due to the authorization server responding with an OAuth2 access token response containing an empty scope list which allows an attacker to modify requests initiated by clients.
CVE-2023-20860: spring-webmvc is vulnerable to Security Bypass. The vulnerability exists because using "`**`" as a pattern in spring security configuration with the `mvcRequestMatcher` which creates a mismatch in pattern matching between Spring Security and Spring MVC and the potential for a security bypass.
CVE-2021-23926: xmlbeans is vulnerable to XML External Entity attacks. The vulnerability exists due to the lack of sanitization of XML input containing a reference to an external entity which is processed by a weakly configured XML parser allowing an attacker to exhaust the system resource via recursive external entity pointers. 
SRCCLR-SID-50336: esbuild is vulnerable to Improper Access Control. The vulnerability is due to improper CORS settings due to the development server allowing any website to send requests and read responses by default.
CVE-2025-22150: Undici is vulnerable to predictable boundary selection. The vulnerability is due to the use of Math.random() to choose the boundary, which can be predicted if several of its values are known, potentially allowing an attacker to tamper with requests to backend APIs. 
CVE-2024-30260: undici is vulnerable to Header Injection. The vulnerability is due to inconsistent header handling, where headers were cleared for fetch() but not for undici.request(), which could result in unauthorized access to sensitive information.
CVE-2024-30261: undici is vulnerable to Improper Access Control. This vulnerability is due to insufficient validation of the integrity option passed to the `fetch()` function. If an attacker can manipulate the `integrity` option passed to the `fetch()` method, the request will be accepted even if the request was tampered with.
CVE-2025-47279: Undici is vulnerable to Denial Of Service (DoS). The vulnerability is due to a memory leak because of a repeated webhook calls to servers with invalid SSL certificates.
CVE-2024-31207: vite is vulnerable to Path Traversal. The vulnerability is due to mishandling patterns containing directories caused by the `server.fs.deny` option. This allows an attacker to gain unauthorized access to certain files.
CVE-2024-45812: Vite is vulnerable to Cross Site Scripting(XSS). The vulnerability is due to improper handling of the document.currentScript lookup in Vite's script imports for cjs, iife, or umd output formats. It allows attackers to manipulate DOM elements, such as using unsanitized attributes in HTML tags, to override the intended script and dynamically load malicious scripts from attacker-controlled sources.
CVE-2025-31125: Vite is vulnerable to Unauthorized File Exposure. The vulnerability is due to improper exposure of non-allowed files through the ?inline&import or ?raw?import methods when the Vite dev server is explicitly exposed to the network (using --host or the server.host config option), allows unauthorized access to potentially sensitive files.
CVE-2025-46565: Vite is vulnerable to Directory Traversal. The vulnerability is due to access control bypass due to insufficient enforcement of file access restrictions when using pattern-matching with dot-slash (/.) in network-exposed development servers.
CVE-2025-32395: Vite is vulnerable to Arbitrary File Disclosure. The vulnerability is due to incorrect assumptions about the presence of # in req.url, which is permitted by some runtimes (Node, Bun) despite being invalid per HTTP specs, allowing attackers to bypass file system access restrictions using path traversal techniques.
CVE-2024-45811: vite is vulnerable to arbitrary file exposure. The vulnerability is due to improper enforcement of file access restrictions in the @fs mechanism, allowing attackers to bypass the allow list by adding ?import&raw to the URL and retrieving the contents of arbitrary files.     
CVE-2025-30208: Vite is vulnerable to Arbitrary File Disclosure. The vulnerability is due to improper handling of trailing separators in query strings and is caused by the removal of trailing separators (?) without proper validation in regex checks, allows attackers to bypass file access restrictions and retrieve arbitrary files from the server.
CVE-2023-6378: ch.qos.logback:logback-classic is vulnerable to Denial Of Service (DoS). The vulnerability is due a missing check on the length of an argument array during the deserialization process. This could lead to Denial of Service attacks by sending crafted data.
CVE-2023-34040: org.springframework.kafka, spring-kafka is vulnerable to Deserialization Of Untrusted Data. The vulnerability is caused by not setting `ErrorHandlingDeserializer` when `checkDeserExWhenKeyNull` or `checkDeserExWhenValueNull` container properties are set to true. An attacker can construct a malicious serialized object in one of the deserialization exception record headers to exploit this vulnerability.   
CVE-2023-25194: Kafka clients is vulnerable to Remote Code Execution. The vulnerability is due to a lack of restrictions on the `sasl.jaas.config` authentication property, which allows an authenticated attacker to submit arbitrary SASL configurations. An attacker can inject a deserialization gadget chain into the configuration when there are available gadgets in the classpath, resulting in arbitrary code execution when a client connects to the attacker controlled LDAP server.
CVE-2022-34917: kafka-clients is vulnerable to denial of service. An attacker can crash the application through the OutOfMemoryException in the `readArray` function of `ByteBufferAccessor.java` by providing large amounts of memory on brokers.
CVE-2023-3635: Okio is vulnerable to Denial of Service (DoS). The vulnerability arises due to improper handling of the `xlen` parameter in the `consumeHeader` function of `GzipSource.kt`. When the parsing value exceeds `0x7fff` in a maliciously crafted gzip buffer, an attacker can crash the application.
CVE-2023-30535: net.snowflake:snowflake-jdbc is vulnerable to Command Injection. The vulnerability exists due to improper input sanitizations in the `openBrowser` function of `SessionUtilExternalBrowser.java`. An attacker is able to set up a malicious server to respond to an SSO URL with a malicious payload, leading to remote code execution if the user visits the maliciously crafted connection URL.
CVE-2025-24790: net.snowflake, snowflake-jdbc is vulnerable to credentials exposure. The vulnerability is due to insecure file permissions, where the Snowflake JDBC Driver caches temporary credentials in a world-readable file, allowing unauthorized users or attackers to access sensitive information.
CVE-2024-43382: net.snowflake, snowflake-jdbc is vulnerable to an Incorrect Security Setting. The vulnerability is due to data being uploaded to an encrypted stage without client-side encryption, allowing unauthorized parties to access or modify sensitive information.
CVE-2025-24789: net.snowflake:snowflake-jdbc is vulnerable to Privilege Escalation. The vulnerability is due to improper path handling due to an attacker with write access to a directory in %PATH% being able to escalate privileges when the EXTERNALBROWSER authentication method is used on Windows.
CVE-2025-27496: net.snowflake, snowflake-jdbc is vulnerable to Information Disclosure. The vulnerability is due to improper logging practices due to the Driver logging the client-side encryption master key locally when the logging level is set to DEBUG during GET/PUT commands, allowing an attacker to retrieve the key from local logs, potentially aiding in further attacks if combined with additional access authorizations.
CVE-2023-43642: Snappy-Java is vulnerable to Denial of Service (DoS). The vulnerability is due to the lack of a max chunk length check, allowing an attacker to decompress data with a chunk size which is too large to process resulting in Denial of Service.
CVE-2023-34455: snappy-java is vulnerable to Denial Of Service (DoS). The vulnerability exists because the `hasNextChunk` function of `SnappyInputStream.java` does not properly check for negative chunk sizes and huge positive values such as `0x7FFFFFFF`, which leads to `java.lang.NegativeArraySizeException` and `java.lang.OutOfMemoryError` exceptions, allowing an attacker to cause an application crash.
CVE-2023-34453: snappy-java is vulnerable to Integer Overflow. The vulnerability exists because the `shuffle` functions of `BitShuffle.java` does not properly check multiplication results if its zero, too small or a negative value or not which cause `java.lang.NegativeArraySizeException` and `java.lang.ArrayIndexOutOfBoundsException` exceptions, leading to an application crash.
CVE-2023-34454: snappy-java is vulnerable to Integer Overflow. The vulnerability exists because the `compress` function receives an array of characters and multiplies the value by two, and passes it to the `rawCompress` function of `Snappy.java` which does not properly check the length and causes an integer overflow, or the value becomes negative which leads to `java.lang.NegativeArraySizeException` exception if the size is too small to use for the compression, causing a fatal Access Violation error, allowing an attacker to crash the application.
CVE-2023-1932: org.hibernate.validator, hibernate-validator is vulnerable to HTML Injection. The vulnerability is due to improper validation in the 'isValid' method of the SafeHtmlValidator class, where the tag ending can be omitted by using a less-than character, allowing invalid HTML to be rendered.    
CVE-2023-46589: org.apache.tomcat: tomcat-catalina is vulnerable to Request Smuggling. The vulnerability is due to the `realReadBytes` function in `InputBuffer.java` because there is no check or validation for the size of the HTTP request data, specifically the HTTP trailer headers. This allows an attacker to add excessively large headers and that could be processed without any constraints, leading to potential request smuggling.
CVE-2023-28709: org.apache.tomcat:tomcat-coyote is vulnerable to Denial Of Service (DoS). Bypassing the restriction on uploaded request parts may result in a Denial of Service if HTTP connector settings are different from the default. The Denial of Service may occur if a request query string exactly matches the `maxParameterCount` parameters.
CVE-2023-44487: github.com/nghttp2/nghttp2 is vulnerable to Denial Of Service (DoS). The vulnerability could be exploited by attackers via sending a large number of HTTP/2 requests to a vulnerable server, then canceling them, causing the server to consume excessive resources and become unavailable to legitimate users. This vulnerability is known as "Rapid Reset".
CVE-2022-25647: Gson is vulnerable to denial of service. The vulnerability exists in internal java classes due to not preventing writing a replacement JDK object during serialization which allows an attacker to cause an application crash. 
CVE-2018-1259: Spring Data Commons, versions 1.13 prior to 1.13.12 and 2.0 prior to 2.0.7, used in combination with XMLBeam 1.4.14 or earlier versions, contains a property binder vulnerability caused by improper restriction of XML external entity references as underlying library XMLBeam does not restrict external reference expansion. An unauthenticated remote malicious user can supply specially crafted request parameters against Spring Data's projection-based request payload binding to access arbitrary files on the system.
CVE-2018-1273: Spring Data Commons, versions prior to 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property binder vulnerability caused by improper neutralization of special elements. An unauthenticated remote malicious user (or attacker) can supply specially crafted request parameters against Spring Data REST backed HTTP resources or using Spring Data's projection-based request payload binding hat can lead to a remote code execution attack.
CVE-2021-35043: antisamy is vulnerable to cross-site scripting (XSS). An attacker is able to inject and execute arbitrary Javascript in a user's browser via HTML attributes using the HTML output serializer.
CVE-2022-29577: antisamy is vulnerable to cross-site scripting. The vulnerability exists in the `processStyleTag` function in `AntiSamyDOMScanner.java` due to lack of input sanitization which allows an attacker to inject and execute arbitrary scripts.
CVE-2021-22118: spring-web is vulnerable to privilege escalation. Creating or recreating the temporary storage directory creates multiple instances collision which allows a locally authenticated malicious user to read or modify files being uploaded or overwrite arbitrary files with multipart request data.
CVE-2020-11988: xmlgraphics-commons is vulnerable to XML external entity (XXE) attacks. The external DTDs are not disabled by default and allows an attacker submit requests on behalf of the server via a malicious XML document.
CVE-2019-3802: spring-data-jpa is vulnerable to information disclosure. A lack of validation and sanitization of wildcard characters when using `ExampleMatcher.StringMatcher.STARTING`, `ExampleMatcher.StringMatcher.ENDING` or `ExampleMatcher.StringMatcher.CONTAINING` allows a user to retrieve more results than expected using a maliciously crafted example value.
CVE-2019-3797: This affects Spring Data JPA in versions up to and including 2.1.5, 2.0.13 and 1.11.19. Derived queries using any of the predicates ?startingWith?, ?endingWith? or ?containing? could return more results than anticipated when a maliciously crafted query parameter value is supplied. Also, LIKE expressions in manually defined queries could return unexpected results if the parameter values bound did not have escaped reserved characters properly.
CVE-2022-41853: duplicate of https://research.prod.srcclr.io/artifacts/37492  HyperSQL Database is vulnerable to remote code execution. The vulnerability exists in the `supportsJavaMethod` function of `HsqlDatabaseProperties.java` due to the untrusted input process allowing an attacker to execute remote codes in the system.
CVE-2017-8039: An issue was discovered in Pivotal Spring Web Flow through 2.4.5. Applications that do not change the value of the MvcViewFactoryCreator useSpringBinding property which is disabled by default (i.e., set to 'false') can be vulnerable to malicious EL expressions in view states that process form submissions but do not have a sub-element to declare explicit data binding property mappings. NOTE: this issue exists because of an incomplete fix for CVE-2017-4971.
CVE-2017-4971: An issue was discovered in Pivotal Spring Web Flow through 2.4.4. Applications that do not change the value of the MvcViewFactoryCreator useSpringBinding property which is disabled by default (i.e., set to 'false') can be vulnerable to malicious EL expressions in view states that process form submissions but do not have a sub-element to declare explicit data binding property mappings.
CVE-2020-25649: jackson-databind is vulnerable to XML external entity (XXE) attack. The external DTDs and doctype declarations not disabled by default and allows an attacker to perform XXE attacks against the application using the library.
CVE-2020-10650: Jackson Databind is vulnerable to deserialization of untrusted data. The vulnerability exists in `Set` function in `SubTypeValidator.java` when handling interactions related to class ignite-jta which allows an attacker to inject and execute malicious codes.
CVE-2018-15756: spring-web is vulnerable to denial of service (DoS). A malicious user can pass a HTTP request containing a header with overlapping ranges, leading to an error which would crash the service.
CVE-2018-11040: spring-webmvc is vulnerable to cross-domain requests. The vulnerability exists as JSONP is enabled through the `jsonp` and `callback` JSONP parameters in MappingJackson2JsonView by default.
CVE-2020-9488: log4j-core is vulnerable to improper validation of certificate. It does not not verify the host name against the SSL/TLS certificate of an SMTPS connection during the certificate validation, allowing a man-in-the-middle to intercept the log messages sent.
CVE-2021-45046: log4j-core is vulnerable to denial of service (DoS). The vulnerability exists because previous mitigation for CVE-2021-44228 is incomplete in certain non-default configurations. An attacker can send a malicious Thread Context Map (MDC) input data in JNDI Lookup pattern using a non-default Pattern Layout in logging configuration with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC), causing denial of service using JNDI Lookup pattern. This is a different vulnerability which cannot be fixed using previously suggested configuration such as to set the system property `log4j2.noFormatMsgLookup` to `true`.
CVE-2017-5645: In Apache Log4j 2.x before 2.8.2, when using the TCP socket server or UDP socket server to receive serialized log events from another application, a specially crafted binary payload can be sent that, when deserialized, can execute arbitrary code.
CVE-2021-44228: log4j is vulnerable to remote code execution. The vulnerability exists due to a lack of sanitization of LDAP and other JNDI related endpoints allowing an attacker who can control log messages or log message perimeters to inject and execute arbitrary code via remote LDAP servers when message lookup substitution is enabled. 
CVE-2021-44832: log4j-core is vulnerable to remote code execution. Lack of limiting JNDI access to data source names allows an attacker with privilege to modify logging configuration to send malicious configuration via JDBC Appender with a data source referencing a JNDI URI.
SRCCLR-SID-4905: log4j-core is vulnerable to reflected information disclosure. The library stores passwords as immutable strings, allowing a malicious user with access to the heap to obtain another user's password.
CVE-2019-10219: hibernate-validator is vulnerable to cross-site scripting (XSS). The vulnerability exists as the `SafeHtml` annotation from `SafeHtmlValidator` does not properly sanitize payloads in HTML comments.
CVE-2020-10693: hibernate-validator is vulnerable to EL Expression Injection. The vulnerability exists as the value of `modType` in the validation message is improperly evaluated with `$`.
CVE-2017-7536: In Hibernate Validator 5.2.x before 5.2.5 final, 5.3.x, and 5.4.x, it was found that when the security manager's reflective permissions, which allows it to access the private members of the class, are granted to Hibernate Validator, a potential privilege escalation can occur. By allowing the calling code to access those private members without the permission an attacker may be able to validate an invalid instance and access the private member value via ConstraintViolation#getInvalidValue().
CVE-2021-22047: spring-boot-actuator is vulnerable to security restriction bypass. Lack of secure handling of HTTP resources implemented by custom controllers using a configured base API path and a controller type-level request mapping causes the exposure of those resources and request mapping, leading to unauthorized access depending on the Spring Security configuration.
CVE-2017-8046: Malicious PATCH requests submitted to servers using Spring Data REST versions prior to 2.6.9 (Ingalls SR9), versions prior to 3.0.1 (Kay SR1) and Spring Boot versions prior to 1.5.9, 2.0 M6 can use specially crafted JSON data to run arbitrary Java code.
CVE-2017-18640: snakeyaml is vulnerable to denial of service. The library allows an attacker to crash the application through an entity expansion attack, also known as billion laughs attack, by providing a malicious YAML file to be parsed.
CVE-2018-1272: Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.
CVE-2021-37714: jsoup is vulnerable to denial of service. An attacker is able to exploit the vulnerability by injecting malicious content that will cause the `reconstructFormattingElements` parser to get stuck in an indefinite loop until it gets cancelled. 
CVE-2022-36033: jsoup is vulnerable to cross-site scripting. The vulnerability exists in `resolve` function in `StringUtil.java` because the jsoup cleaner is not properly sanitized when SafeList.preserveRelativeLinks is enabled which allows an attacker to inject and execute arbitrary javascript.
SRCCLR-SID-2477: jsoup is vulnerable to denial of service (DoS) attacks through infinite loops. The infinite loop is triggered when parsing html strings which contains letters with accents.
CVE-2019-25028: vaadin-server is vulnerable to cross-site scripting (XSS). A remote attacker is able to inject and execute arbtirary Javascript in a user's browser via a variable in the Grid component.
SRCCLR-SID-25031: jsrsasign is vulnerable to timing attack. A timing attack can be performed to discover the private key due to the usage of an unsafe method for ECDSA key generation and signing in the `signHex` function.
CVE-2020-14968: jsrsasign uses an incorrect signature validation. It is possible because its RSASSA-PSS (RSA-PSS) implementation has a flaw which accepts manipulated/modified signatures as valid signatures by prepending '\0' bytes to a signature and also allows an attacker to send multiple valid signatures to corrupt memory.
CVE-2024-21484: jsrsasign is vulnerable to the Marvin Attack. The vulnerability is due to timing leakage in the bit size of raw RSA decryption. This flaw can provide a timing oracle, enabling a timing variant of the Bleichenbacher attack.
CVE-2020-14967: jsrsasign does not properly validate RSA signatures. The decryption implementation does not detect ciphertext modification prepended by `\0` bytes to ciphertexts, allowing an attacker to prepend NULL bytes with the goal of triggering memory corruption issues.
CVE-2020-14966: jsrsasign uses a malleable ECDSA signature. The vulnerability exists as it does not check for overflows in the length of a sequence, and allows `0` characters appended or prepended to an integer to be verified as the same as without the extra `0` characters.
CVE-2021-30246: jsrsasign does not perform secure signature verification. certain invalid RSA PKCS#1 v1.5 signatures are wrongly verified as valid, although there are no known practical attacks against the vulnerability.
CVE-2022-25898: jsrsasign is vulnerable to insecure signature verification. The vulnerability exists because the library does not properly validate the `JWS` or `JWT` signature with non-Base64URL encoding special characters or number escaped characters such as `!@$%` or `\11`
CVE-2016-1000344: In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.
CVE-2016-1000346: In the Bouncy Castle JCE Provider version 1.55 and earlier the other party DH public key is not fully validated. This can cause issues as invalid keys can be used to reveal details about the other party's private key where static Diffie-Hellman is in use. As of release 1.56 the key parameters are checked on agreement calculation.
CVE-2018-5382: Bouncy Castle is vulnerable to hash collision attacks. The library keystore files uses a HMAC hash that is only 16 bits long, allowing a malicious user to retrieve the password used for keystore integrity verification checks. This vulnerability only affects users of the `BKS-V1` keystore format, which was re-introduced since 1.49. Since it is re-introduced in Bouncy Castle 1.49, users of Bouncy Castle 1.49 and above may be affected if the legacy BKS-V1 is being used. To remediate the vulnerability, ensure that there are no usage of BKS-V1.
CVE-2016-1000343: In the Bouncy Castle JCE Provider version 1.55 and earlier the DSA key pair generator generates a weak private key if used with default values. If the JCA key pair generator is not explicitly initialised with DSA parameters, 1.55 and earlier generates a private value assuming a 1024 bit key size. In earlier releases this can be dealt with by explicitly passing parameters to the key pair generator.
CVE-2013-1624: The TLS implementation in the Bouncy Castle Java library before 1.48 and C# library before 1.8 does not properly consider timing side-channel attacks on a noncompliant MAC check operation during the processing of malformed CBC padding, which allows remote attackers to conduct distinguishing attacks and plaintext-recovery attacks via statistical analysis of timing data for crafted packets, a related issue to CVE-2013-0169.
CVE-2016-2183: The DES and Triple DES ciphers, as used in the TLS, SSH, and IPSec protocols and other protocols and products, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, as demonstrated by an HTTPS session using Triple DES in CBC mode, aka a "Sweet32" attack.
CVE-2016-1000338: In Bouncy Castle JCE Provider version 1.55 and earlier the DSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.
CVE-2016-1000352: In the Bouncy Castle JCE Provider version 1.55 and earlier the ECIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.
CVE-2016-1000342: In the Bouncy Castle JCE Provider version 1.55 and earlier ECDSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.
CVE-2016-1000345: In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES/ECIES CBC mode vulnerable to padding oracle attack. For BC 1.55 and older, in an environment where timings can be easily observed, it is possible with enough observations to identify when the decryption is failing due to padding.
CVE-2016-1000341: In the Bouncy Castle JCE Provider version 1.55 and earlier DSA signature generation is vulnerable to timing attack. Where timings can be closely observed for the generation of signatures, the lack of blinding in 1.55, or earlier, may allow an attacker to gain information about the signature's k value and ultimately the private value as well.
CVE-2015-7940: The Bouncy Castle Java library before 1.51 does not validate a point is withing the elliptic curve, which makes it easier for remote attackers to obtain private keys via a series of crafted elliptic curve Diffie Hellman (ECDH) key exchanges, aka an "invalid curve attack."
CVE-2016-1000339: In the Bouncy Castle JCE Provider version 1.55 and earlier the primary engine class used for AES was AESFastEngine. Due to the highly table driven approach used in the algorithm it turns out that if the data channel on the CPU can be monitored the lookup table accesses are sufficient to leak information on the AES key being used. There was also a leak in AESEngine although it was substantially less. AESEngine has been modified to remove any signs of leakage (testing carried out on Intel X86-64) and is now the primary AES class for the BC JCE provider from 1.56. Use of AESFastEngine is now only recommended where otherwise deemed appropriate.
CVE-2021-46708: swagger-ui is vulnerable to server-side request forgery. The reading configuration parameters from URL search params enabled by default allow an attacker to override the hard-coded schema files.
CVE-2021-27906: Apache PDFBox is vulnerable to denial of service. An attacker can cause the application to go into an infinite loop by submitting a malicious PDF file.
CVE-2021-31811: Apache PDFBox is vulnerable to denial of service. An attacker is able to cause an OutOfMemory-Exception by sending a malicious PDF file to the function `parse()` of `PDFObjectStreamParser.java`.
CVE-2021-27807: Apache PDFBox is vulnerable to denial of service. An attacker can cause the application to go into an infinite loop by submitting a malicious PDF file.
CVE-2021-31812: pdfbox is vulnerable to denial of service. An attacker is able to cause an infinite loop by submitting a malicious PDF file.
CVE-2021-37136: netty-codec is vulnerable to denial of service. The vulnerability exists due to lack of allocation size restriction on the decompressed output data in the Snappy frame decoder function, leading to an OOME.  
CVE-2021-37137: netty-codec is vulnerable to denial of service. The vulnerability exists due to lack of allocation size restriction on the decompressed output data in the Bzip2 decompression decoder function, leading to an OOME.  
CVE-2021-21409: netty-codec-http2 is vulnerable to HTTP request smuggling. The vulnerability exists through an incomplete fix in `CVE-2021-21295` where the `content-length` header is not properly validated if the request uses a single `Http2HeaderFrame`, and with `endStream` set to true.
CVE-2021-21295: netty-codec-http2 is vulnerable to HTTP request smuggling. The `Content-Length` header is not validated and allows an attacker to smuggle requests as requests are downgraded from HTTP/2 to HTTP/1.1.
CVE-2022-41915: netty-codec-http is vulnerable to HTTP response splitting attack. The vulnerability exists in the `setObject` function of `DefaultHeaders.java` as it takes the arrays and iterators as arguments, providing a way to bypass value validation allowing an attacker to inject malicious header values into the iterator.
CVE-2021-42550: logback is vulnerable to remote code execution. The vulnerability exists due to a lack of sanitization of write access allowing an attacker to craft a malicious configuration. 
CVE-2021-28170: eap7 has insecure token. The vulnerability exists due to a bug in the ELParserTokenManager which enables invalid EL expressions to be evaluated as if they were valid.
CVE-2023-34462: io.netty:netty-handler is vulnerable to Denial of Service (DoS) attacks. During TLS handshakes, the `SniHandler` class can allocate up to 16MB of heap for each channel. The `SniHandler` is used to establish a TCP server when the handler or channel has no idle timeout. In order to configure an SSL handler using the server name from the `ClientHello` record, it waits for the TLS handshake. There are no checks to ensure the handshake packet is larger then the data packet, therefore it is possible to create a packet that triggers the "SslClientHelloHandler", which could be used to cause denial of service through memory exhaustion if there is no idle timeout set.
CVE-2023-34062: Reactor Netty HTTP Server is vulnerable to Path Traversal. The vulnerability is due to improper validation for file paths. An attacker can accesses unauthorized files or directories by using crafted URLs.
CVE-2023-34054: Reactor Netty HTTP Server is vulnerable to Denial Of Service (DOS). The vulnerability is due to the improper validation of HTTP requests while if the micrometer integration is enabled, which can result in Denial Of Service.
CVE-2021-43797: io.netty:netty-codec-http is vulnerable to HTTP request smuggling. Improper validation of control chars, when they are present at the beginning and/or end of the header name leads to HTTP request smuggling. The vulnerability is exploitable in other remote systems when these headers are used as a proxy.
CVE-2021-21290: netty-codec-http is vulnerable to information disclosure. When netty's multipart decoders are used, local files containing confidential information can be accessed via the local system temporary directory if temporary storing uploads on the disk is enabled.
CVE-2022-23181: tomcat-catalina is vulnerable to time of check to time of use. The vulnerability exists in `file` function of `FileStore.java` which allows an attacker to perform unauthenticated actions causing a race condition.
CVE-2020-17527: tomcat is vulnerable to denial of service. Re-use of an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream would most likely lead to an error and the closure of the HTTP/2 connection. It is also possible that information could leak between requests.
CVE-2021-25329: tomcat9 is vulnerable to remote code execution (RCE). The vulnerability exists through the incomplete fix for CVE-2020-9484, with a configuration edge case that was highly unlikely to be used.
CVE-2021-30640: tomcat-catalina is vulnerable to access restriction bypass. Lack of proper sanitization of user provided parameter or configuration data provided by an administrator accept authentication using variations of their user name and/or to bypass some of the protection provided by the LockOut Realm.  
CVE-2021-33037: tomcat-coyote is vulnerable request smuggling.  Incorrect way of parsing of the HTTP transfer-encoding request header causes request smuggling when it is used with a reverse proxy and if the client declared it would only accept an HTTP/1.0 response.
CVE-2021-25122:  tomcat-coyote is vulnerable to information leakage. When responding to new h2c connection requests, a request mix-up occurs with h2c as the request headers and a limited amount of request body is duplicated from one request to another, resulting in the request being seen by another user.
CVE-2021-24122: apache tomcat is vulnerable to information disclosure. Security constraints can be bypassed to obtain and view JSP source code in certain configurations, when serving resources from a network location using the NTFS file system. The vulnerability is caused by the insufficient validation for the `:` character in the file path.
CVE-2024-21733: org.apache.tomcat: tomcat-coyote is vulnerable to Sensitive Information Disclosure. The vulnerability is due to improper handling of `IOExceptions` in the `fill` function within `Http11InputBuffer.java` during socket read operations, particularly when the client abruptly closed the connection. This could potentially lead to the generation of error messages that contain sensitive information.
CVE-2022-30187: Azure Storage Libraries are vulnerable to Sensitive Information Disclosure. The vulnerability is due to improper handling of cipher block chaining (CBC mode) during client-side encryption. An attacker is able to decrypt data on the client side if this method of client side encryption is utilized, resulting in the decryption of sensitive information.
CVE-2022-3171: protobuf-java is vulnerable to denial of service. The vulnerability exists in the parsing procedure for binary and text format data because the input streams contain multiple instances of non-repeated embedded messages with repeated or unknown fields, resulting in potentially long garbage collection pauses and causing an application crash.
CVE-2022-3510: protobuf is vulnerable to Denial Of Service (DoS). The vulnerability is due to multiple instances of non-repeated embedded message inputs with repeated or unknown fields which cause the objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses.
CVE-2022-3509: protobuf-java is vulnerable to denial of service (DoS) attacks. A remote attacker can cause objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses, when the inputs contain multiple instances of non-repeated embedded messages with repeated or unknown fields.
CVE-2022-2047: jetty-http is using Improper Input Validation. The vulnerability exists because the `authority` function of `HttpURI.java` does not properly validate the `_path` parameter as a valid authority, allowing an attacker to parse invalid URLs such as `http://localhost;/path` for the hostname.
CVE-2023-26049: jetty-server is vulnerable to Information Disclosure. The vulnerability exists because the cookie parsing of quoted values can exfiltrate values from other cookies because the cookie VALUE that starts with `"` (double quote) will continue to read the cookie string until it sees a closing quote even if a semicolon is encountered in the library, which allows an attacker to smuggle cookies within other cookies or perform unintended behavior by tampering with the cookie parsing mechanism through the cookie header. For example, the cookie `DISPLAY_LANGUAGE="b; JSESSIONID=1337; c=d"` will result in the cookie name as `DISPLAY_LANGUAGE` with the value `b; JSESSIONID=1337; c=d`, instead of parsing of three separate cookies 
CVE-2023-26048: org.eclipse.jetty: jetty-server is vulnerable to Denial of Service. The vulnerability exists due to a lack of multipart file upload sanitization that affects `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` methods annotated with `@MultipartConfig`, which allows an attacker to submit a multipart request with parts lacking a filename and a very large content size. This can throw an `OutOfMemoryError`, resulting in a Denial of Service. 
CVE-2023-39410: Apache Avro is vulnerable to Buffer Overflow. The vulnerability is due to improper handling of deserialization when processing untrusted or corrupted data. This can result in a reader consuming memory beyond the allowed constraints, potentially leading to an out-of-memory condition on the system.
CVE-2024-13009: org.eclipse.jetty:jetty-server is vulnerable to Data Corruption. The vulnerability is due to improper buffer management caused by the incorrect release of a buffer when handling gzip errors during request body inflation, allows attackers to access sensitive data from other requests.
CVE-2024-22201: jetty-http is vulnerable to Denial Of Service (DoS). The vulnerability is due to `GOAWAY` frames failing to be written to the queue when there is TCP congestion within the server. An attacker can exploit idle timeout periods to leave HTTP/2 or 3 connections in the `ESTABLISHED` state, even when they timed out, resulting in Denial of Service as the server runs out of available file descriptors. 
SRCCLR-SID-41245: jetty-xml is vulnerable to XML External Entity (XXE) Injection. The vulnerability exists because the `XmlParser` function of `XmlParser.java` does not sanitize the DOCTYPE declaration, which allows an attacker to inject maliciously crafted XML. Note that it is the vendors position that an attacker would need to compromise the server itself to control input to the `XmlParser` function.
CVE-2023-44981: Org.apache.zookeeper: zookeeper is vulnerable to authorization bypass. This vulnerability exists because they do not properly implement a User-Controlled Key for user authentication, allowing an attacker to gain access to the system and perform unauthorized actions.
SRCCLR-SID-40398: jose4j is vulnerable to Improper Cryptographic Algorthm. The vulnerability exists due to the way `RSA1_5` and `RSA_OAEP` is implemented, allowing an attacker to decrypt `RSA1_5` or `RSA_OAEP` encrypted ciphertexts, and in addition, it may be feasible to sign with affected keys.
CVE-2023-31582: jose4j is vulnerable to Weak Cryptography. The vulnerability is present in `Pbes2HmacShaWithAesKeyWrapAlgorithm.java` due to the ability to set a small iteration count when using the PBE (Password-Based Encryption) algorithm. This weakness enables an attacker to determine hashed password values
CVE-2022-22980: spring-data-mongodb is vulnerable to Spring Expression Language (SpEL) injection. The vulnerability exists due to the non-sanitized input in the repository query method, allowing an attacker to inject and execute malicious SpEL to the repository query method when it is annotated with `@Query` or `@Aggregation` and use parametrized SpEL statements.
CVE-2022-2048: HTTP2 Server is vulnerable to denial of service. The vulnerability exists in `onRequest` function in `HttpChannelOverHTTP2.java` due to improper error handling which allows an attacker to cause an application crash. 
CVE-2023-36478: org.eclipse.jetty is vulnerable to Denial Of Service (DoS). The vulnerability arises from the library's failure to appropriately limit the size in HPACK header values. This allows an attacker to repeatedly send maliciously crafted HTTP messages, leading to an integer overflow and ultimately causing an application crash through the `checkSize` function in `MetaDataBuilder.java`.
CVE-2023-49921: org.elasticsearch:elasticsearch is vulnerable to Insertion of Sensitive Information into Log File. The vulnerability is caused due to logging the source of each Watcher search hit at the DEBUG log level, which prints raw document contents, including sensitive information into the log files.
CVE-2023-31417: org.elasticsearch: elasticsearch is vulnerable to Insertion Of Sensitive Information Into Log File. The vulnerability is caused by a failure to filter out sensitive information and credentials before logging to the audit log when requests to Elasticsearch use certain deprecated URIs for APIs.  This can lead to sensitive information such as passwords and tokens getting printed in cleartext to Elasticsearch audit logs.
CVE-2023-46673: elasticsearch is vulnerable to Denial Of Service (DoS). The vulnerability is caused due to a lack of exception handling while calling the simulate pipeline API. The script processor of an ingest pipeline fails to handle malformed scripts. This can lead to an elastic node crash and ultimately deny service to users. 
CVE-2022-23708: elasticsearch is vulnerable to privilege escalation. An attacker can disable the in-built protections on the security index, leading to access to the current index with `*` index permission.
CVE-2024-23444: Elasticsearch is vulnerable to Missing Encryption of Sensitive Data. The vulnerability is due to the elasticsearch-certutil CLI tool storing generated private keys unencrypted on disk when creating Certificate Signing Requests, even if the --pass parameter is used.
CVE-2023-31419: elasticsearch is vulnerable to Denial of service attack. The vulnerability is due to the search API which allows specially crafted query strings to cause a stack overflow.
CVE-2021-22144: elasticsearchis vulnerable to Denial Of Service. The vulnerability exists due to an uncontrolled recursion in the Grok parser.
CVE-2024-43709: org.elasticsearch, elasticsearch is vulnerable to Out of Memory Error. The vulnerability is due to unrestricted resource allocation in Elasticsearch, where there are no limits or throttling mechanisms in place to manage resource usage effectively. It allows malicious queries, such as those using SQL functions, to consume excessive memory, resulting in an OutOfMemoryError and a crash.
CVE-2024-23450: org.elasticsearch:elasticsearch is vulnerable to Denial Of Service (DoS). The vulnerability is due to improper handling of deeply nested pipelines during document processing which can cause the Elasticsearch node to crash, resulting in Denial Of Service.
CVE-2020-28191: liferay is vulnerable to cross-site request forgery. The vulnerability exists due to the lack of validation in the csrf token in the `process` function of `EditPageHandler.java`, allowing an attacker to guess the csrf token value.
CVE-2022-46337: Apache Derby is vulnerable to LDAP Injection. The vulnerability is due to improper input validation in the username field which can be used to bypass authentication checks. This can be exploited by an attacker by injecting malicious usernames, and as a result fill up the disk by creating junk Derby databases, allowing the attacker to corrupt sensitive data and run sensitive database functions and procedures.
CVE-2023-34042: org.springframework.security: spring-security-config is vulnerable to Incorrect File Permissions. The vulnerability is due to insecure permissions assigned to the `spring-security.xsd` file inside the spring-security-config jar which is world writable. An attacker with access to the filesystem can overwrite this file, resulting in exploitation.
CVE-2021-3918: json-schema is vulnerable to prototype pollution. An attacker can inject properties into existing construct prototypes via the `checkObj` function in `validate.js` and modify attributes such as `__proto__`. and `constructor`
CVE-2021-3807: ansi-regex is vulnerable to regular expression denial of service (ReDoS). A malicious user can pass a string through the `pattern` header to cause a ReDoS.
CVE-2021-23343: path-parse is vulnerable to regular expression denial of service. An attacker is able to produce a denial of service condition in the application through worst-case time complexity via `splitDeviceRe`, `splitTailRe` and `splitPathRe`.
CVE-2024-48949: elliptic is vulnerable to Improper Verification of Cryptographic Signature. The vulnerability is due to improper range validation of the S value in the verify function, allowing the usage of an invalid signature.
CVE-2024-48948: elliptic is vulnerable to Improper Verification of Cryptographic Signature. The vulnerability is due to improper handling of the truncateToN function, which fails to correctly verify signatures when the hash contains at least four leading zero bytes and the elliptic curve's base point order is smaller than the hash. This leads to valid signatures being rejected.
SRCCLR-SID-50363: Elliptic is vulnerable to Information Disclosure. The vulnerability is due to inadequate input validation in the ECDSA signing process. Specifically, the system accepts malformed inputs (like strings or numbers) without proper checks, which allows an attacker to craft input that can lead to the extraction of the private key.
CVE-2024-42461: Elliptic is vulnerable to Signature Malleability. The vulnerability is due to the acceptance of BER-encoded signatures which allows for the manipulation of ECDSA signatures.
CVE-2024-42459: Elliptic is vulnerable to Signature Malleability. The vulnerability is due to lack of a signature length check, allowing for the manipulation of EDDSA signatures by adding or removing zero-valued bytes.
CVE-2024-42460: Elliptic is vulnerable to Signature Malleability. The vulnerability is due to the lack of verification for the leading bit of r and s in ECDSA signatures, allowing for signature manipulation.       
CVE-2022-25883: semver is vulnerable to Regular Expression Denial Of Service (ReDoS) attacks. A malicious user is able to cause parsing slowdowns when untrusted user data is provided as a range via the function `parseRange` due to the usage of regex expression with inefficient time complexity.
CVE-2022-37599: loader-utils is vulnerable to regular expression denial of service. The vulnerability exists due to the insecure regex pattern used for the `resourcePath` variable in `interpolateName.js`, allowing an attacker to crash the application by providing a malicious input  
CVE-2022-37603: loader-utils is vulnerable to regular expression denial of service (ReDoS). The vulnerability is due to insecure regular expression in the `url` variable of the `interpolateName` function in `interpolateName.js`. A remote attacker can cause denial of service via malicious regex.
CVE-2021-3803: nth-check is vulnerable to regular expression denial of service. The vulnerability exists due to an inefficient regular expression which can crash the system when parsing a malicious string.
CVE-2021-3749: axios is vulnerable to regular expression denial of service (ReDoS). An attacker is able to crash the application by submitting a malicious string as a header.
CVE-2023-26136: tough-cookie is vulnerable to Prototype Pollution. The vulnerability exists due to improper domain sanitization when using the CookieJar with `rejectPublicSuffixes=false` which allows an attacker to modify the base prototype, resulting in Prototype Pollution.
CVE-2023-26115: word-wrap is vulnerable to Regular Expression Denial Of Service (ReDoS). The vulnerability exists due to the usage of an regular expression with inefficient time complexity, resulting in long parsing times.
CVE-2022-1650: eventsource is vulnerable to information disclosure. The vulnerability exists in few function in `eventsource.js` due to the leakage of cookies and authorization headers to external sites which allows an attacker to steal user credentials and perform unauthorized actions. 
CVE-2023-30533: xlsx is vulnerable to Prototype Pollution. The vulnerability exists due to the lack of checks for user inputed specially crafted files, which allows an attacker to inject malicious properties, resulting in prototype pollution.
CVE-2024-22363: xlsx is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability is due to a regex with inefficient complexity that can be exploited by specially crafted inputs to cause excessive consumption of resources.
SRCCLR-SID-37811: unset-value is vulnerable to prototype pollution. An attacker can inject properties into existing construct prototypes via the `module.exports` function in `index.js` and modify attributes such as `__proto__`, `constructor`, and `prototype` base objects.
CVE-2021-3777: tmpl is vulnerable to regular expression denial of service. An attacker is able to crash the application when formatting the crafted string through the tmpl functionality.
CVE-2021-23566: nanoid is vulnerable to information disclosure. The vulnerability exists due to a lack of sanitization of the output of `valueOf()` function which allows an attacker to extract the last id generated
CVE-2021-23424: ansi-html is vulnerable to regular expression denial of service. An attacker is able to exploit the vulnerability by injecting a malicious long string of digits into the system. 
CVE-2021-23382: postcss is vulnerable to regular expression denial of service. The vulnerability exists due to the insecure usage of regex sub-pattern `\/\*\s* sourceMappingURL=(.*)` via `getAnnotationURL()` and `loadAnnotation()` in `lib/previous-map.js`.
CVE-2021-23368: postcss is vulnerable to regular expression denial of service. The usage of an insecure regular expression in source map parsing allows an attacker to cause a denial of service condition using a URL.
CVE-2021-23406: degenerator is vulnerable to remote code execution. The vulnerability exists due to unsafe PAC file handling.
SRCCLR-SID-31414: yargs-parser is vulnerable to Regular Expression Denial of Service (ReDoS). The `isUnknownOption` function in `yargs-parser.ts` does not properly replace `-` characters from parse, allowing a malicious user to slow down or hang the application when unknown-options-as-args is set to true.
CVE-2022-24999: qs is vulnerable to denial of service. The vulnerability exists in the `parseObject` function of `parse.js` due to lack of checks for attributes like `__ proto__ ` in the query string of the URL, which allows an attacker to cause an application crash by providing malicious payload.
CVE-2022-0235: node-fetch is vulnerable to information disclosure. The vulnerability exists due to the cookie header being leaked to third party site.
CVE-2021-3757: immer is vulnerable prototype pollution. The vulnerability was introduced by the fix provided for CVE-2020-28477 which allows insecure modification of Object Prototype Attributes.  
CVE-2021-23436: immer is vulnerable to prototype pollution. An attacker is able to exploit the vulnerability to inject arbitrary properties into existing construct prototypes and modify attributes such as `__proto__`, `constructor` and `prototype`.
CVE-2024-37890: ws is vulnerable to Denial Of Service (DoS). The vulnerability is due to improper handling of the `Upgrade` header when the number of received headers exceeds the `server.maxHeadersCount` or `request.maxHeadersCount` threshold, causing `incomingMessage.headers.upgrade` to not be set. Attackers can use this to crash the ws server by sending a request with an excessive number of headers.
CVE-2021-32640: ws is vulnerable to regular expression denial of service. An attacker is able to cause excessive CPU consumption that can lead to an application crash by submitting a malicious value of `Sec-Websocket-Protocol`.
SRCCLR-SID-29608: ws is vulnerable to denial of service (DoS) attacks. A malicious user is able to cause the process to crash by using the permessage-deflate extension.
CVE-2023-42282: ip is vulnerable to Server Side Request Forgery. The vulnerability is due to the `isPublic()` function's failure to interpret and classify hexadecimal IP address representations. If an application utilizes the `isPublic()` or `isPrivate()` functions to determine if an address is public, an attacker can preform Server Side Request Forgery.
SRCCLR-SID-33569: node-forge is vulnerable to prototype pollution. The vulnerability exists through the 'debug.set' function in 'debug.js' , allowing an attacker to inject properties into existing construct prototypes and modify attributes such as `__proto__`, `constructor` and `prototype`.
CVE-2022-24773: node-forge, improperly verifies cryptographic signatures. The vulnerability exists through improper verification of DigestInfo in the `rsa.js` file allowing to validate the signature in an invalid structure.
SRCCLR-SID-33572: node-forge is vulnerable to server-side request forgery. The vulnerability exists in `parseUrl` because certain relative paths are mishandled when validating, which allows the bypass of the URL redirection validation.
CVE-2022-24771: node-forge uses improper signature verification. Leniency in checking the digest algorithm structure allows remote attackers to specifically craft a structure that steals padding bytes and uses unchecked portion of the `PKCS#1` encoded message to forge a signature when a low public exponent is being used.
CVE-2022-0122: node-forge is vulnerable to URL redirection. The use of an insecure URL parsing in `forge.util.parseUrl()` (and `forge.http.parseUrl` alias) allows a URL redirection to malicious site.
CVE-2022-24772: node-forge is vulnerable to improper verification of the cryptographic signature. The vulnerability exists due to improper signature verification of tailing garbage bytes in the `rsa.js ` file allowing an attacker to execute a signature forge attack
CVE-2024-29041: express is vulnerable to Open Redirect. The vulnerability is due to improper handling of user-provided URLs during redirection in Express.js, which performs encoding using the encodeurl library before passing it to the 'location' header. It allows bypass of properly implemented allow lists and leading to an Open Redirect vulnerability.
CVE-2021-42740: shell-quote is vulnerable to command injection. An attacker can inject unescaped shell metacharacters through a regex used in `exports.quote` function in the `index.js`
CVE-2021-44906: minimist is vulnerable to prototype pollution. An attacker can inject properties into existing construct prototypes via the `setKey ` function in the `index.js` and modify attributes such as `__proto__`, `constructor`, and `prototype`. 
CVE-2022-24785: moment is vulnerable to path traversal. An attacker is able to access files outside the expected directory especially when a user-provided locale string is directly used to switch moment locale.
CVE-2022-23539: jsonwebtoken uses unrestricted key type. A remote attacker is able to bypass signature verification if the library is misconfigured so that legacy, insecure key types are used for the verification. The user is affected if the library uses an algorithm and a key type other than a combination listed in the `GitHub Security Advisory` as unaffected.
CVE-2022-23540: jsonwebtoken is vulnerable to signature validation bypass. The lack of algorithm definition in the `jwt.verify()` function leads to signature validation bypass due to defaulting to the `none` algorithm for signature verification, which allows an attacker to bypass the verification mechanism. 
CVE-2022-23541: jsonwebtoken is vulnerable to incorrect verification of tokens. A remote attacker is able to validate forged tokens via passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument when the application is supporting both symmetric and asymmetric keys with the same key retrieval function.
CVE-2022-0536: follow-redirects is vulnerable to information disclosure. The vulnerability exists because the HTTP Authorization header is sent via an insecure HTTP channel when a same-hostname HTTPS-to-HTTP redirect is received, allowing attackers in the same network to discover credentials by sniffing the network traffic.
CVE-2022-0155: follow-redirects is vulnerable to information disclosure. The cookie is exposed when the system is fetching a remote url with the `redirect`. 
CVE-2021-3664: url-parse is vulnerable to open redirection. Lack of URL validation allows an attacker to redirect a user to a malicious website.
CVE-2022-0512: url-parse is vulnerable to authorization bypass. The vulnerability exists in `Url` function of `index.js` because the user name and password are not properly handled which allows a malicious user to modify user information. 
CVE-2022-0686: url-parse is vulnerable to authorization bypass. Because the library does not properly validate the `hostname` in the `toString` function of `index.js`, an attacker can redirect to malicious URLs using the user-controlled key when no port number is specified in the URL.
CVE-2022-0639: url-parse is vulnerable to authorization bypass.  The use of User-Controlled Key allows an attacker to transform original invalid URL into a valid one with `url.pathname` as host.
CVE-2022-0691: url-parse is vulnerable to authorization bypass. The vulnerability exists because the protocol of the URL returned by the parser is not validated correctly, allowing an attacker to bypass URLs via `\b` characters and the user-controlled key.
CVE-2022-29078: ejs is vulnerable to server side template injection. Lack of protection against server-side template injection in `outputFunctionName` allows an attacker to inject arbitrary OS commands which are executed upon template compilation.
SRCCLR-SID-29384: ejs is vulnerable to OS command injection. An attacker is able to inject and execute arbitrary OS commands via the `render` and `renderFile` functions if external input is passed into the `options` parameter.
CVE-2024-33883: ejs is vulnerable to Prototype Pollution. The vulnerability is due to inadequate object checks which lack prototype protection measures, which allows an attackers to overwrite certain object prototypes.
CVE-2022-3517: node-minimatch is vulnerable to regular expression denial of service. The vulnerability exists when calling the braceExpand function with specific arguments, resulting in a denial of service.
CVE-2021-43138: async is vulnerable to prototype pollution. An attacker is able to inject malicious property types via `mapValues` method and gain unintended privileges due to prototype pollution vulnerability.
CVE-2021-23386: dns-packet is vulnerable to information disclosure. Internal application memory may be disclosed when querying invalid domain names due to buffers being created with `allocUnsafe` not always being filled before forming network packets.
CVE-2021-32803: tar is vulnerable to symlink attack. An attacker is able to write files to arbitrary locations on the file system via a malicious tar file.
CVE-2021-32804: tar (node-tar) is vulnerable to privilege escalation. The vulnerability exists due to insufficient absolute path sanitization.
CVE-2021-37713: tar is vulnerable to remote code execution. The vulnerability exists due to a lack of sanitization on the path of the entries when extracting tar files. 
CVE-2021-37712: taris vulnerable to Remote Code Execution (RCE). An attacker is able to exploit the vulnerability by modifying the symbolic link. The vulnerability exists due to the lack of sanitization of the symbolic link thus allowing the system to extract file through a maliciously modified symbolic link. 
CVE-2021-37701: tar is vulnerable to symlink attack. The vulnerability exists due to the lack of checking if the symbolic link has been modified through the logic used both `\` and `/` characters as path separators.
CVE-2014-9970: jasypt before 1.9.2 allows a timing attack against the password hash comparison.
SRCCLR-SID-2857: jackson-core is vulnerable to denial of service (DoS) attacks. The vulnerability is triggered when jackson-core reports an invalid token which has a word of length 10MB. It prints out the token to `server.log` file without limiting `maxTokenLength` to  256 bytes. This can cause a denial of service condition by filling up the disk space available.
CVE-2021-38153: Apache Kafka is vulnerable to timing attack. The library validates password or key using `Arrays.equals`, allowing an attacker to leak credentials via brute force attacks.
CVE-2020-5411: spring-batch-core is vulnerable to remote code execution. The upgrade of Jackson in 4.2.3.RELEASE enabled default typing by default and resulted in Spring Batch to be vulnerable to untrusted deserialization. An attacker will be able to execute arbitrary code if `ExecutionContext` is serialized and the attacker has write access to the data store used by `JobRepository`.
CVE-2023-42794: Tomcat is vulnerable to Denial Of Service (DoS). This vulnerability exists due to an incomplete implementation of the Commons FileUpload which improperly closes streams, allowing an attacker to cause a Denial of Service in the system if tomcat is run on Windows.
CVE-2023-34055: Spring Boot is vulnerable to Denial Of Service. The vulnerability is due to parsing malicious HTTP Request without proper validation or sanitization. This issue can be exploited by an attacker via crafting mailicous HTTP Request leading to Denial Of Service. Note that the following conditions must be met for this vulnerability to be exploitable. The application must use Spring MVC or Spring WebFlux and `org.springframework.boot:spring-boot-actuator` is on the classpath
CVE-2022-40152: woodstox-core is vulnerable to denial of service. The vulnerability exists because the `FullDTDReader.java` does not properly limit the recursion limit for DTD parsing, allowing an attacker to cause an application crash through StackOverflow by passing a malicious input if DTD support is enabled.
CVE-2020-13935: apache tomcat is vulnerable to denial of service. An infinite loop to occurs when invalid payload lengths are parsed. An attacker is able to cause a denial of service condition in the application via malicious WebSocket frames with invalid payload lengths.
CVE-2020-5398: spring-web is vulnerable to reflected file download. The filename attribute that is derived from the user-supplied `Content-Disposition` header is not validated and sanitized, potentially resulting in the downloaded content of the response to be saved and executed as a file by the user's browser. 
CVE-2022-27772: spring-boot is vulnerable to directory traversal. The vulnerability exists due to a lack of sanitization of access rights allowing an attacker to write to an embedded web server. 
CVE-2018-17196: Apache Kafka is vulnerable to access control bypass. The vulnerability exists due to a lack of verification of authorization of authenticated clients, allowing an attacker to manually craft a `Produce` request which bypasses transaction/idempotent ACL validation.
CVE-2021-42340: tomcat-websocket is vulnerable to denial of service (DoS) attacks. An out of memory (OOM) occurs as the internal upgrade handler doesn't close the associated web connection on destroy causing an application crash. 
CVE-2020-5405: spring-cloud-config-client is vulnerable to directory traversal. The attack is possible because it fails to validate the names and labels in environment and resource controller, allowing an attacker to provide malicious configuration files by exploiting the vulnerability.
SRCCLR-SID-22823: spring-security-web is vulnerable to cross-site forgery request (CSRF). A remote attacker is able to submit requests to the SwitchUserFilter on behalf of the authenticated user by tricking the user into visiting a malicious web page. This vulnerability exists as the application accepts all HTTP methods, specifically the GET method, and is unable to verify the authenticity of the requests.
CVE-2022-22969: Spring Security OAuth is vulnerable to denial of service. The vulnerability exists due to a lack of restriction of the number of request initiating the Authorization Request for the Authorization Code Grant allowing an attacker to exhaust the system resources sending multiple requests with a single session. 
CVE-2019-11269: Spring Security OAuth versions 2.3 prior to 2.3.6, 2.2 prior to 2.2.5, 2.1 prior to 2.1.5, and 2.0 prior to 2.0.18, as well as older unsupported versions could be susceptible to an open redirector attack that can leak an authorization code. A malicious user or attacker can craft a request to the authorization endpoint using the authorization code grant type, and specify a manipulated redirection URI via the redirect_uri parameter. This can cause the authorization server to redirect the resource owner user-agent to a URI under the control of the attacker with the leaked authorization code.
CVE-2020-13943: tomcat-coyote is vulnerable to authorization bypass. The vulnerability exists as requests could contain HTTP headers of a previous request rather than the intended headers, if a HTTP/2 client has exceeded the agreed maximum number of concurrent streams for a connection.
CVE-2020-13934: apache tomcat is vulnerable to denial of service. The HTTP/1.1 processor is not released after an upgrade to HTTP/2, allowing an attacker to cause a denial of service condition due to an `OutOfMemoryException` by sending a large number of upgrade requests.
CVE-2020-1938: tomcat-coyote is vulnerable to authentication bypass. The vulnerability exists as it does not disable AjpProtocol by default, and allows any unauthenticated client to read or write application files on the server.
CVE-2019-12418:  Tomcat-catalina is vulnerable to privilege escalation. When JMX Remote Lifecycle Listener is used to configure Tomcat, a local attack is possible to access Tomcat process or configuration files and manipulate RMI registry, thereby allowing the attacker to act as man-in-the-middle (MitM) to steal the the credential for JMX interface and to get full control over JMX instance.
CVE-2022-24823: netty-common is vulnerable to information disclosure. The vulnerability exists due to the insufficient fix for the CVE-2021-21290. When the temporary storing uploads on the disk is enabled and running on java 6, an attacker can gain sensitive information through the local system temporary directory due to the lack of permission checks in temporary files in the `createTempFile` function of `PlatformDependent.java`
CVE-2023-34034: org.springframework.security:spring-security-config is vulnerable to Improper Access Control. The vulnerability exists due to lack of checks in multiple files, which allows an attacker to use `**` as a pattern in the configurations for WebFlux, creating a mismatch in pattern matching, resulting in a potential security bypass.
CVE-2023-6481: ch.qos.logback:logback-classic is vulnerable to Denial Of Service (DoS). The vulnerability is due to the `readObject()` method in the `LoggingEventVO` class which fails to check the length of an argument array during deserialization. An attacker could send crafted data, resulting in Denial of Service (DoS). Note that this vulnerability is only exploitable when the logback-receiver component is enabled and also reachable by the attacker.
CVE-2020-36843: net.i2p.crypto, eddsa, net.i2p, i2p is vulnerable to Improper Verification of Cryptographic Signature. The vulnerability is due to the implementation not satisfying the SUF-CMA property, allowing an attacker to forge alternative valid signatures for a known message.
SRCCLR-SID-3960: mongo-java-driver is vulnerable to collision attacks. These attacks are possible because it is using a non-collision resistant hashing algorithm, `MD5`, in  `GridFSUploadStreamImpl.java` to generate the digest of uploaded files.
CVE-2024-52317: Apache Tomcat is vulnerable to Incorrect object recycling and re-use. The vulnerability is due to flawed object recycling logic in Apache Tomcat's HTTP/2 implementation. Specifically, the request and response objects are not properly cleared or segregated before being reused, allowing data from one user's session to inadvertently mix with another's.
CVE-2025-1948: org.eclipse.jetty.http2, jetty-http2-common is vulnerable to Denial Of Service (DoS). The vulnerability is due to missing validation of the SETTINGS_MAX_HEADER_LIST_SIZE parameter in HTTP/2 settings frames. Specifically, Jetty fails to enforce reasonable limits on this value, allowing an attacker to trigger excessive memory allocation.
CVE-2018-1275: Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework.
CVE-2018-1257: Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.
CVE-2018-1270: Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.
SRCCLR-SID-22654: acorn is vulnerable to denial of service. A regex in the form of `/[x-\ud800]/u` causes the parser to enter an infinite loop as the string is not valid UTF-16 character. This results in it being sanitized before reaching the parser and when an application processes untrusted input and passes it directly to acorn, attackers will be able to exploit the vulnerability and crash the application.
CVE-2024-52318: org.apache.tomcat, tomcat-jasper is vulnerable to Cross Site Scripting. The vulnerability is due to improper management of the object lifecycle, where objects are not properly reset or disposed of after use.  
CVE-2018-3739: https-proxy-agent before 2.1.1 passes auth option to the Buffer constructor without proper sanitization, resulting in DoS and uninitialized memory leak in setups where an attacker could submit typed input to the 'auth' parameter (e.g. JSON).
SRCCLR-SID-21577: https-proxy-agent is vulnerable to man-in-the-middle (MitM). The vulnerability exists as the socket returns without TLS upgrade through non-200 CONNECT response, allowing request data can be sent over unencrypted connection.
CVE-2021-32013: xlsx is vulnerable to denial of service. An attacker is able to crash the application via a malicious `.xlsx` document.
CVE-2021-32012: xlsx of sheetjs is vulnerable to denial of service. The vulnerability exists due to an XLS Xnum Buffer underflow. An attacker is able to crash the system by uploading a malicious crafted xlsx document. 
CVE-2021-32014: xlsx is vulnerable to denial of service. An attacker is able to crash the application via a malicious `.xlsx` document.
CVE-2019-10196: http-proxy-agent is susceptible to denial of service (DoS). `auth` parameters are passed to the buffer constructor without proper sanitization, leading to DoS via uninitialized memory leak. .
CVE-2022-21230: nanohttpd is vulnerable to information disclosure. The vulnerability exists due to creating a temporary file with insecure permissions in `DefaultTempFile` of `DefaultTempFile.java`, allowing an attacker to view all the user's content on the host machine by sending the HTTP request larger than the 1024 bytes.
CVE-2017-1000190: SimpleXML (latest version 2.7.1) is vulnerable to an XXE vulnerability resulting SSRF, information disclosure, DoS and so on.
CVE-2023-34035: spring-security-config is vulnerable to Authorization Rule Misconfiguration. The vulnerability exists due to the lack of validation in the `RequestMatcher` of `AbstractRequestMatcherRegistry.java` when the application uses the `requestMatchers(String)` function with multiple servlets, one of them being Spring MVC’s `DispatcherServlet`.
CVE-2023-34053: org.springframework: spring-web is vulnerable to Denial Of Service (DoS). The vulnerability is due to a lack of validation for HTTP methods in  `DefaultServerRequestObservationConvention.java`. This allows an attacker to inject specially crafted HTTP requests that may cause Denial of Service. Note that the following conditions must be true for the vulnerability to be exploitable in an application. The application must use Spring MVC or Spring WebFlux, `io.micrometer:micrometer-core` is on the classpath and `ObservationRegistry` is configured in the application to record observations.
CVE-2016-3093: Apache Struts 2.0.0 through 2.3.24.1 does not properly cache method references when used with OGNL before 3.0.12, which allows remote attackers to cause a denial of service (block access to a web site) via unspecified vectors.
CVE-2023-20862: spring-security-web is vulnerable to Improper Logout Implementation. The vulnerability exists in the `SwitchUserFilter.java` because it does not properly clean the security context if using serialized versions, which allows an attacker to stay authenticated even after they perform a logout.
CVE-2023-34047: org.springframework.graphql:spring-graphql is vulnerable to Information Disclosure. The vulnerability is due to an issue where an application provides a `DataLoaderOptions` instance when registering batch loader functions through the `DefaultBatchLoaderRegistry` method leading to information disclosure in the GraphQL context.
CVE-2024-40094: com.graphql-java: graphql-java is vulnerable to Denial Of Service (DoS). The vulnerability is due to improper handling of ExecutableNormalizedFields (ENFs) in introspection queries, allowing attackers to send queries that can overwhelm the service and cause it to become unresponsive.   
SRCCLR-SID-37353: d3-color is vulnerable to regular expression denial of service. The vulnerability exists due to an ambiguous regular expression allowing an attacker to exploit the vulnerability by causing backtracking via a maliciously crafted string 
SRCCLR-SID-27708: ngx-bootstrap is vulnerable to cross-site scripting (XSS). An attacker is able to inject and execute arbitrary Javascript via the search and highlight functionality within the typeahead component.
CVE-2023-28154: webpack is vulnerable to Sensitive Information Disclosure. The vulnerability exists because `ImportParserPlugin.js` does not restrict cross-realm object access and mishandles the magic comment feature, allowing an attacker who controls a property of an untrusted object to obtain access to the real global object.
CVE-2022-31684: io.projectreactor.netty:reactor-netty-http is vulnerable to information disclosure. A remote attacker is able to request log headers in some cases of invalid HTTP requests which may reveal valid access tokens when WARN level is enabled, resulting in disclosure of sensitive information.
CVE-2025-29908: io.netty.incubator, netty-incubator-codec-quic is vulnerable to Hash Collision Attack. The vulnerability is due to a hash collision in the hash map used to manage connections, which allows remote attackers to perform a Hash DoS attack by initiating connections with colliding Source Connection IDs (SCIDs).
SRCCLR-SID-3636: commons-net is vulnerable to information disclosure. The vulnerability is possible because `newStringUtf8()` in Base64.java does not prevent the storage of sensitive data in a String object which would not be deleted until the JVM performs garbage collection. There is a chance for an attacker to collect sensitive information by dumping the memory when the application has crashed .
CVE-2021-37533: commons-net is vulnerable to information disclosure. The vulnerability exists because the `_parsePassiveModeReply` function of `FTPClient.java` trusts the host from the `PASV` response by default, allowing an attacker to gain sensitive information by redirecting to the malicious host URLs
CVE-2024-29133: Apache Commons Configuration is vulnerable to Out-of-Bounds Write. The vulnerability is due to improper handling of a cyclical object tree, which can trigger a `StackOverflowError` when the `ListDelimiterHandler.flatten()` method is called. This occurs because the method recursively traverses the object tree without a proper termination condition, leading to excessive recursion and eventually a stack overflow, resulting in Denial of Service (DoS).
CVE-2024-29131: Apache Commons Configuration is vulnerable to Out-of-Bounds Write. The vulnerability is due to improper iterator handling within the `AbstractListDelimiterHandler.flattenIterator()` method, which can result in Denial of Service if crafted input is passed to the method.
CVE-2018-12536: In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.
CVE-2019-10241: In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.
SRCCLR-SID-3606: Jersey common is vulnerable to billion laugh attacks. These attacks are possible because it does not disable XML Entity Expansion (XEE).
CVE-2024-36114: io.airlift: aircompressor is vulnerable to Denial Of Service (DoS) / Information Disclosure. The vulnerability is due to improper memory bounds checking during data decompression, caused by the use of the `sun.misc.Unsafe` class without additional safeguards. This can lead to out-of-bounds memory access and potentially leads to a Java Virtual Machine (JVM) crash or the exposure sensitive information.
CVE-2025-29907: jsPDF is vulnerable to Regular Expression Denial Of Service (ReDoS). The vulnerability is due to improper input validation due to user-controlled arguments in the addImage, html, and addSvgAsImage methods allowing the use of harmful data URLs, leading to high CPU utilization and service disruption.
CVE-2021-23353: jspdf is vulnerable to regular expression denial of service. The vulnerability exists because it does not properly handle the regular expression for input image info `extractedInfo` in the function `addImage` , causing an application crash. 
CVE-2022-48285: jszip is vulnerable to Directory Traversal. The vulnerability exists as untrusted user input is not properly validated and/or sanitized, allowing an attacker to exploit the vulnerability via a crafted ZIP archive.
CVE-2021-23413: jszip is vulnerable to prototype pollution. An attacker is allowed to create a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc), returning an object with a modified prototype instance.
CVE-2022-25758: scss-tokenizer is vulnerable to regular expression denial of service. The vulnerability exists in the `loadAnnotation` function of `previous-map.js` due to the insecure regex pattern used in the `match` attribute, allowing an attacker to crash the application by providing malicious input.
CVE-2018-1000613: Legion of the Bouncy Castle Legion of the Bouncy Castle Java Cryptography APIs 1.58 up to but not including 1.60 contains a CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') vulnerability in XMSS/XMSS^MT private key deserialization that can result in Deserializing an XMSS/XMSS^MT private key can result in the execution of unexpected code. This attack appear to be exploitable via A handcrafted private key can include references to unexpected classes which will be picked up from the class path for the executing application. This vulnerability appears to have been fixed in 1.60 and later.
CVE-2023-46604: activemq is vulnerable to Remote Code Execution. The vulnerability is due to `BaseDataStreamMarshaller.java` as there is no class validation and does not verify that the loaded class is a valid `Throwable`. This allows an attacker to manipulate serialized class types within the OpenWire protocol, potentially leads to the broker creating an instances of any class available on the system's classpath, which can result in Remote Code Execution.
CVE-2020-4267: IBM MQ is vulnerable to denial of service. The vulnerability exists due to a memory leak allowing an attacker to crash the system. 
CVE-2021-38949: IBM MQ is vulnerable to information disclosure. The vulnerability exists due to the system storing user credentials in clear plain text. 
CVE-2020-4310: IBM MQ is vulnerable to denial of service. The vulnerability exists due to an error within the Data Conversion logic.
CVE-2024-25048: IBM MQ Appliance 9.3 CD and LTS are vulnerable to a Heap-based Buffer Overflow. The vulnerability is due to improper bounds checking, allowing a remote authenticated attacker to overflow a buffer and execute arbitrary code on the system or cause the server to crash.
CVE-2020-4682: IBM MQ is vulnerable to remote code execution. The vulnerability exists due to an insecure deserialization of trusted data allowing an attacker to execute maliciously crafted script on the system. 
CVE-2019-4619: IBM MQ is vulnerable to information disclosure. An attacker is able to exploit the vulnerability by including sensitive data within trace. 
CVE-2019-4055: IBM MQ is vulnerable to denial of service. The vulnerability exists due to a lack of sanitization of the TLS key renegotiation function. 
CVE-2019-4719: IBM MQ is vulnerable to information disclosure. An attacker may exploit the vulnerability obtaining sensitive information via the `runmqras` data.
CVE-2023-28514: github.com/ibm-messaging/mq-container is vulnerable to Information Disclosure. The vulnerability allows a local user to obtain sensitive credential information when a detailed technical error message is returned in a stack trace, resulting in the disclosure of sensitive information.
CVE-2020-4319: IBM MQ is vulnerable to information disclosure. The vulnerability exists due to a data leak from an error message within the pre-v7 pubsub logic.
CVE-2019-4261: IBM MQ is vulnerable to denial of service. An attacker is able to crash the system via a maliciously crafted message. 
CVE-2019-4762: IBM MQ is vulnerable to denial of service. The vulnerability exists due to an error in the Channel processing function. 
CVE-2023-28950: IBM MQ is vulnerable to Information Disclosure. The vulnerability exists when the Advanced Message Security setup is enabled which can leak sensitive information through trace files. 
CVE-2019-4656: IBM MQ is vulnerable to denial of service. An attacker is able to exploit the vulnerability by sending a maliciously crafted message to crash the system. 
CVE-2020-4375: IBM MQ is vulnerable to denial of service. The vulnerability exists due to a memory leak via an error via creating a dynamic queue. 
CVE-2020-4320: IBM MQ is vulnerable to insecure access control. The vulnerability exists due to an error in the SSLPEER logic within a AMQP channel.
CVE-2019-4227: IBM MQ is vulnerable to insecure session. The vulnerability exists due to an error where users are not disconnected when they logout allowing an attacker to conduct a session fixation attack. 
CVE-2020-4465: IBM MQ is vulnerable to denial of service. The vulnerability exists due to a buffer overflow via an error within the channel processing code allowing an attacker to overflow the buffer using an older client and crash the system. 
CVE-2019-4378: IBM MQ is vulnerable to denial of service. An attacker is able to crash the system via maliciously crafted PCF messages. 
CVE-2017-5644: Apache POI in versions prior to release 3.15 allows remote attackers to cause a denial of service (CPU consumption) via a specially crafted OOXML file, aka an XML Entity Expansion (XEE) attack.
SRCCLR-SID-3029: Apache poi is vulnerable to denial of service (DoS) attacks. These are possible when an embedded OLE10Native object has a buffer that is incorrectly allocated, this can lead to an out-of-memory condition.
SRCCLR-SID-5110: Apache POI is vulnerable to denial of service (DoS) attacks. A malicious user can pass a file with a corrupted length, causing the application to run out-of-memory and crash.
CVE-2017-12626: Apache POI in versions prior to release 3.17 are vulnerable to Denial of Service Attacks: 1) Infinite Loops while parsing crafted WMF, EMF, MSG and macros (POI bugs 61338 and 61294), and 2) Out of Memory Exceptions while parsing crafted DOC, PPT and XLS (POI bugs 52372 and 61295).
CVE-2019-17495: swagger-ui is vulnerable to CSS injection. The `?url=` parameter allows an attacker to override a hard-coded schema file, which would enable for the Relative Path Overwrite (RPO) exploit technique, allowing exfiltration of confidential information from a victim's browser such as the CSRF token value. 
CVE-2014-3529: The OPC SAX setup in Apache POI before 3.10.1 allows remote attackers to read arbitrary files via an OpenXML file containing an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.
CVE-2014-3574: Apache POI before 3.10.1 and 3.11.x before 3.11-beta2 allows remote attackers to cause a denial of service (CPU consumption and crash) via a crafted OOXML file, aka an XML Entity Expansion (XEE) attack.
CVE-2021-43466: thymeleaf-spring5 is vulnerable to template injection. An attacker can inject malicious input through the `render` function in `AjaxThymeleafView.java`, leading to remote code execution.
CVE-2018-14335: An issue was discovered in H2 1.4.197. Insecure handling of permissions in the backup function allows attackers to read sensitive files (outside of their permissions) via a symlink to a fake database file.
CVE-2021-23463: h2 is vulnerable to XML external entity injection. The vulnerability exists due to the `getSource` method executed within the `DOMSource.class` input parameter when passing string data into the `org.h2.jdbc.JdbcSQLXML` class, allowing an attacker to cause an application crash or access sensitive data.
CVE-2021-42392: h2 is vulnerable to remote code execution. The vulnerability exists due to the use of `javax.naming.Context.lookup method` which performs JNDI lookup,as a dangerous function/sink, allowing an attacker to load custom class/ remote LDAP/RMI queries and execute malicious code in a process with H2 Console exposed to the LAN or WAN. (Note: its H2 Console connection isnt always used with the H2 database and listens only localhost by default.)
CVE-2022-45868: H2 Database Engine is vulnerable to information disclosure. The vulnerability is caused by the webAdminPassword argument, which allows an administrator to specify the password in plaintext. An attacker can get the password for the H2 web admin console by looking at the running processes.
CVE-2020-13936: velocity-engine-core is vulnerable to remote code execution. The Uberspector fails to prevent access to `java.lang.ClassLoader` methods and allows an attacker that is able to modify Template contents to execute arbitrary Java code or run arbitrary system commands with the same privileges as the account running the Servlet container.
CVE-2023-22043: Oracle Java SE is vulnerable to Unauthorized Data Access. The vulnerability is due to the lack of proper authentication measures and due to running untrusted code that rely on Java sandbox for security. This results in unauthorized creation, deletion, or modification access to critical data or all Oracle Java SE accessible data. This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets.
CVE-2015-0899: The MultiPageValidator implementation in Apache Struts 1 1.1 through 1.3.10 allows remote attackers to bypass intended access restrictions via a modified page parameter.
CVE-2016-1182: ActionServlet.java in Apache Struts 1 1.x through 1.3.10 does not properly restrict the Validator configuration, which allows remote attackers to conduct cross-site scripting (XSS) attacks or cause a denial of service via crafted input, a related issue to CVE-2015-0899.
CVE-2016-1181: ActionServlet.java in Apache Struts 1 1.x through 1.3.10 mishandles multithreaded access to an ActionForm instance, which allows remote attackers to execute arbitrary code or cause a denial of service (unexpected memory access) via a multipart request, a related issue to CVE-2015-0899.
CVE-2022-42889: Apache Commons Text is vulnerable to arbitrary code execution. The vulnerability exists in the `lookup` module due to insecure interpolation defaults when untrusted configuration values are used which allows an attacker to inject arbitrary code into the system.
CVE-2024-37168: @grpc/grpc-js is vulnerable to Denial of Service (DoS). The vulnerability is due to improper message size checks becauses messages that exceed the `grpc.max_receive_message_length` are buffered or decompressed in entirety before being discarded, which can result in DoS.
CVE-2022-25878: protobufjs is vulnerable to prototype pollution. An attacker is able to add/modify properties of the Object.prototype by parsing/loading .proto files or via providing untrusted user input to `util.setProperty` or to `ReflectionObject.setParsedOption` functions, resulting in prototype pollution.
CVE-2023-36665: protobufjs is vulnerable to Prototype Pollution. The vulnerability exists in the `setProperty` function of `util.js`, which allows an attacker to inject and modify malicious properties such as `__proto__`, resulting in prototype pollution.
CVE-2025-24791: snowflake-connector-nodejs is vulnerable to Improper Access Control. The vulnerability is due to insufficient file permission checks due to an attacker with write access to the local cache directory being able to bypass temporary credential cache restrictions.
CVE-2025-46328: snowflake-sdk is vulnerable to a Time-of-Check to Time-of-Use (TOCTOU) race condition. The vulnerability is due to improper validation of file ownership and permissions during logging configuration loading, allowing an attacker to modify the file between the check and its use.
CVE-2018-11797: In Apache PDFBox 1.8.0 to 1.8.15 and 2.0.0RC1 to 2.0.11, a carefully crafted PDF file can trigger an extremely long running computation when parsing the page tree.
CVE-2018-8036: In Apache PDFBox 1.8.0 to 1.8.14 and 2.0.0RC1 to 2.0.10, a carefully crafted (or fuzzed) file can trigger an infinite loop which leads to an out of memory exception in Apache PDFBox's AFMParser.
CVE-2018-1000850: Square Retrofit version versions from (including) 2.0 and 2.5.0 (excluding) contains a Directory Traversal vulnerability in RequestBuilder class, method addPathParameter that can result in By manipulating the URL an attacker could add or delete resources otherwise unavailable to her.. This attack appear to be exploitable via An attacker should have access to an encoded path parameter on POST, PUT or DELETE request.. This vulnerability appears to have been fixed in 2.5.0 and later.
CVE-2024-6762: org.eclipse.jetty:jetty-servlets is vulnerable to Denial Of Service (DoS). The vulnerability is due to unauthenticated users being able to exhaust the server's memory, leading to a crash. 
CVE-2022-24197: itext7-core is vulnerable to denial of service. The vulnerability exists in the `writeFloats` component in `OutputStream.java  file` which allows an attacker to crash the system using stack-based buffer overflow via a crafted PDF file.  
CVE-2022-24198: com.itextpdf, kernel is vulnerable to denial of service. The vulnerability exists in `readDictionary` component in `PdfReader.java`file which allows an attacker to crash the system via a crafted PDF file.
CVE-2021-35515: commons-compress is vulnerable to denial of service. Failure to check the size of PAX header against the size of the current entry allows an attacker to send a malicious 7Z archive to trigger an infinite loop.
CVE-2018-11771: When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.
CVE-2021-35517: commons-compress is vulnerable to denial of service. Lack of proper handling of memory while compressing tar package causes an out of memory error even for very small inputs.
CVE-2021-35516: libcommons-compress-java is vulnerable to denial of service. The vulnerability exists due to the system allocating a large amount of memory for compress. 
CVE-2021-36090: commons-compress is vulnerable to denial of service. When reading a specially crafted ZIP archive, large amounts of memory can be made to be alloocated, which would lead to an out of memory error for small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.
CVE-2024-21907: Newtonsoft.Json is vulnerable to denial of service. The use of insecure defaults cause an StackOverFlow exception (SOE) whenever nested expressions are being processed when an attacker sends 5 requests that cause SOE in time frame of 5 minutes.  
CVE-2022-29117: .NET and Visual Studio are vulnerable to denial of service. The vulnerability exists due to a flaw in dotnet allowing an attacker to crash the system by sending MyCookie=chunks-2147483647 without the actual cookie chunks, causing large allocations, exceptions, and excess CPU utilization on the server when it tries to read or delete that many chunks.
CVE-2024-21319: Microsoft.IdentityModel.JsonWebTokens and System.IdentityModel.Tokens.Jwt are vulnerable to Denial Of Service (DoS). The vulnerability is cause by improper JWT compression checks, which results in resource exhaustion due processing of  malicious JSON Web Encryption(JWE) token. Successful exploitation leads to excessive memory allocation and processing time during compression, leading to DoS.
CVE-2021-32841: sharpziplib is vulnerable to directory traversal. The vulnerability exists due to the TAR extraction directory path not enforced to be slash terminated allowing an attacker to create a file with a name thats begins with the destination directory.
SRCCLR-SID-27876: SharpZipLib uses an insecure temporary file name. An attacker can predict the name of the temporary file and potentially gain access to confidential information. 
CVE-2021-32842: sharpziplib is vulnerable to directory traversal. The vulnerability exists due to the TAR extraction directory path not enforced to be slash terminated allowing an attacker to create a file with a name thats begins as the destination directory one level up from the directory.
CVE-2021-32840: sharpziplib is vulnerable to directory traversal. The vulnerability exists due to the TAR extraction directory path not enforced to be slash terminated allowing an attacker to create a file with a name thats begins as the destination directory one level up from the directory.
CVE-2018-1002205: DotNetZip.Semvered before 1.11.0 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.
CVE-2009-3275: Microsoft patterns & practices Enterprise Library is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability is due a regex string with inefficient complexity located in `Blocks/Common/Src/Configuration/Manageability/Adm/AdmContentBuilder.cs`, which allows an attacker to input a string composed of many \ (backslash) characters followed by a " (double quote), resulting in Denial of Service by consuming excessive CPU cycles.
CVE-2018-1002208: sharplibzip before 1.0 RC1 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.
CVE-2012-2098: Algorithmic complexity vulnerability in the sorting algorithms in bzip2 compressing stream (BZip2CompressorOutputStream) in Apache Commons Compress before 1.4.1 allows remote attackers to cause a denial of service (CPU consumption) via a file with many repeating inputs.
CVE-2020-1945: ant uses an insecure temporary directory. The system property `java.io.tempdir` causes insecure permissions to be set on a directory, allowing local users to access the temporary directory or write arbitrary files into it. This could also lead to an attacker injecting modified source files into the build process.
CVE-2020-15250: junit is vulnerable to information disclosure. The vulnerability exists through the behaviour of `TemporaryFolder` on UNIX-like systems, where the system's temporary directory is shared between all users on that system by default.
CVE-2023-51079: org.mvel: mvel2 is vulnerable to Denial Of Service (DoS). The vulnerability is due to the  `ParseTools.subCompileExpression` method which times or executes for an indefinite time when parsing a crafted MVFLEX Expression (MVEL). A malicious user can craft an MVEL expression and pass to the `subCompileExpression` method resulting in Denial Of Service (DoS). 
CVE-2024-38286: Apache Tomcat is vulnerable to Denial Of Service (DoS). The vulnerability is due to insufficient resource limitations during the TLS handshake process, which allows an attacker to exploit this process repeatedly, leading to memory exhaustion and an OutOfMemoryError.
CVE-2022-36046: next is vulnerable to denial of service. The vulnerability exists in the extended function of `getClonableBody` in `body-streams.ts` due to some unhandled rejections when a connection is canceled with the edge runtime which allows an attacker to cause an application crash.
CVE-2024-47831: Next.js is vulnerable to a Denial of Service (DoS). The vulnerability is due to improper handling of image optimization, allowing for excessive resource consumption that can lead to a Denial of Service (DoS) attack.       
CVE-2023-46298: next is vulnerable to Denial Of Service (DoS). The vulnerability exists because the `base-server.ts` does not include a `cache-control` header. Consequently, empty prefetch responses might be cached by a Content Delivery Network (CDN). This creates an opportunity for an attacker to potentially crash the application by repeatedly requesting the same URL via that CDN. 
CVE-2025-29927: Next.js is vulnerable to Authorization Bypass. The vulnerability is due to improper handling of the x-middleware-subrequest header, allowing attackers to bypass authorization checks in middleware.
CVE-2024-51479: Next is vulnerable to Authorization Bypass. The vulnerability is due to improper authorization in middleware based on pathname, allowing it to be bypassed for pages directly under the root directory of a Next.js application.       
CVE-2024-45801: DOMPurify is vulnerable to Cross-Site Scripting (XSS). The vulnerability is due to improper depth checking, which can be bypassed through special HTML nesting techniques and prototype pollution, allowing an attacker to execute malicious scripts in the victim's browser.       
CVE-2024-36043: survey-core is vulnerable to Cross Site Scripting (XSS). The vulnerability is due to insufficient sanitization of the imageLink property in `question_image.ts`, which allows an attacker to execute malicious scripts via setting contentMode=youtube.
CVE-2024-39338: Axios is vulnerable to Server-Side Request Forgery (SSRF). The vulnerability is due to unexpected behavior where requests for path-relative URLs are processed as protocol-relative URLs.
SRCCLR-SID-49270: Mermaid is vulnerable to prototype pollution.The vulnerability is due to prototype pollution in its bundled version of DOMPurify, which allows attackers to manipulate object properties in JavaScript, potentially causing unintended behavior in applications.
CVE-2024-34342: react-pdf is vulnerable to Arbitrary JavaScript Execution. This vulnerability is due to `isEvalSupported` set to true by default, allowing for the execution of arbitrary JavaScript code embedded within the PDF.
CVE-2024-4367: pdfjs-dist is vulnerable to Remote Code Execution (RCE). The vulnerability is due to the default setting `isEvalSupported` set to true, which allows unrestricted execution of attacker-controlled JavaScript within the hosting domain context.
SRCCLR-SID-25149: sheetjs is vulnerable to regular expression denial of service (ReDoS). The attack exists because it uses vulnerable regular expressions for `xlmlregex` value in the function `xlml_normalize`.
CVE-2022-41881: netty-codec-haproxy is vulnerable to denial of service. The vulnerability is due to a StackOverflowError in the `HAProxyMessage.java` as it does not properly limit the maximum nesting of TLV, allowing an attacker to cause an application crash via infinite recursion by passing a maliciously crafted message. 
CVE-2025-27636: org.apache.camel, camel-support is vulnerable to a Header Injection. The vulnerability is due to insufficient header filtering, where only headers starting with "Camel", "camel", or "org.apache.camel." are blocked, allows attackers to forge header names and manipulate method invocation in the camel-bean component.
CVE-2023-38037: ActiveSupport is vulnerable to Locally Encrypted File Disclosure. The vulnerability exists because the library's temporary file's permissions default to the user's current `umask` settings, which allows an attacker on the same system to read the contents of the temporary file before it gets encrypted to disk.
CVE-2024-22271: org.springframework.cloud: spring-cloud-function-context is vulnerable to Denial of Service (DoS). The vulnerability is caused when attempting to compose functions with non-existing functions. This allows an attacker to potentially disrupt service availability by exploiting this flaw.
CVE-2024-38996: ag-grid-community and ag-grid-enterprise are vulnerable to prototype pollution. The vulnerability is due to the `_.mergeDeep` function, allowing attackers to execute arbitrary code or cause a Denial of Service (DoS) via injecting arbitrary properties.
CVE-2024-39001: ag-grid-enterprise is vulnerable to Prototype Pollution. The vulnerability is due to the functions `_.mergeDeep`, `_ModuleSupport.jsonApply`, `_ModuleSupport.setPath`, and `_Util.jsonApply` accepting arguments that include the built-in property `proto`. Attackers can exploit this by passing specially crafted arguments to these functions.
CVE-2023-28867: graphql-java is vulnerable to Denial Of Services (DoS). An attacker can send a maliciously crafted GraphQL query that causes excessive stack consumption, which can lead to an application crash.
CVE-2022-37734: graphql-java is vulnerable to denial-of-service. The vulnerability exists because of the missing sanitizations in the `parseDocumentImpl` function in `Parser.java` which allows a remote attacker to cause an application crash.  
CVE-2022-45146: bc-fips is vulnerable to information disclosure. The vulnerability exists because the temporary keys used in the module get zeroed out while still in use by the module, resulting in an error or potential information loss. This vulnerability only affects Java 13 or later
CVE-2021-40690: Apache Santuario is vulnerable to bypass of secure validation. Lack of secure handling of `secureValidation` property allows an attacker to abuse an XPath Transform and to extract any local .xml files in a RetrievalMethod element during the creation of a KeyInfo from a KeyInfoReference element. 
CVE-2023-44483: Apache Santuario - XML Security is vulnerable to Information Disclosure. The vulnerability is due to a key exposed as a part of debug log when debug level is enabled. This can lead to Information Disclosure if an attacker has access to the logs.
CVE-2014-4895: The Herpin Time Radio (aka com.herpin.time.radio) application 2.0 for Android does not verify X.509 certificates from SSL servers, which allows man-in-the-middle attackers to spoof servers and obtain sensitive information via a crafted certificate.
CVE-2023-4863: libwebp.so is vulnerable to Out Of Bounds Memory Write. The vulnerability is due to the `BuildHuffmanTable` function in `src/dec/vp8l_dec.c` improperly allocating memory to the table when parsing a stream, which results in an application crash or Arbitrary Code Execution when reading a webp image file.
CVE-2025-32031: @apollo/gateway is vulnerable to a Denial Of Service (DoS). The vulnerability is due to inefficient query planning due to internal optimizations being bypassed when processing deeply nested and reused named fragments.
CVE-2024-43414: @apollo/gateway and @apollo/query-planner are vulnerable to Uncontrolled Recursion. The vulnerability is due to the query planner potentially entering an infinite loop when processing sufficiently complex queries, leading to unbounded memory consumption and possible system crashes.  
CVE-2025-32030: Apollo Gateway is vulnerable to a Denial of Service (DoS). The vulnerability is due to inefficient query planning due to deeply nested and reused named fragments that cause excessive resource consumption during named fragment expansion.
CVE-2023-41329: wiremock is vulnerable toa  Race Condition. The vulnerability is due to the `render`  function when DNS server's address expire between initial validation and an outbound network request, potentially leading to unintended access to prohibited domains.
CVE-2024-22233: org.springframework: spring-core is vulnerable to Denial of Service (DoS). The vulnerability is due to the mishandling of specially crafted HTTP requests, which can result in Denial of Service (DoS). As a prerequisite, Spring MVC and Spring Security must be on the classpath for this vulnerability to be exploitable within an application.
CVE-2023-48631: @adobe/css-tools is vulnerable to Denial Of Service. The vulnerability is due to exponential regex backtracking when parsing CSS in the `parse` method of `src/parse/index.ts`, which can result in Denial of Service.
CVE-2023-26364: @adobe/css-tools is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability exists in `index.ts` due to improper input validations which allows an attacker to cause an application slowdown when parsing CSS. 
CVE-2023-1436: org.codehaus.jettison:jettison is vulnerable to Denial of Service (DoS). The vulnerability is due to an infinite loop when constructing a `JSONArray` from a Collection that contains a self-reference in one of its elements which leads to a StackOverflowError exception, resulting in an application crash.
SRCCLR-SID-1890: Mustache.java and jmustache contains the potential for cross-site scripting when using unquoted attributes.
CVE-2012-5784: Apache Axis 1.4 and earlier, as used in PayPal Payments Pro, PayPal Mass Pay, PayPal Transactional Information SOAP, the Java Message Service implementation in Apache ActiveMQ, and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.
CVE-2023-48795: asyncssh-pypi is vulnerable to Rogue Session Attack. The vulnerability is due to malicious negotiation of extensions during the SSH connection setup process. This issue can be exploited by an attacker via injecting malicious extensions during the negotiation process, resulting in a SSH security downgrade. 
CVE-2019-3778: Spring Security OAuth, versions 2.3 prior to 2.3.5, and 2.2 prior to 2.2.4, and 2.1 prior to 2.1.4, and 2.0 prior to 2.0.17, and older unsupported versions could be susceptible to an open redirector attack that can leak an authorization code. A malicious user or attacker can craft a request to the authorization endpoint using the authorization code grant type, and specify a manipulated redirection URI via the "redirect_uri" parameter. This can cause the authorization server to redirect the resource owner user-agent to a URI under the control of the attacker with the leaked authorization code. This vulnerability exposes applications that meet all of the following requirements: Act in the role of an Authorization Server (e.g. @EnableAuthorizationServer) and uses the DefaultRedirectResolver in the AuthorizationEndpoint. This vulnerability does not expose applications that: Act in the role of an Authorization Server and uses a different RedirectResolver implementation other than DefaultRedirectResolver, act in the role of a Resource Server only (e.g. @EnableResourceServer), act in the role of a Client only (e.g. @EnableOAuthClient).
CVE-2017-13098: BouncyCastle TLS prior to version 1.0.3, when configured to use the JCE (Java Cryptography Extension) for cryptographic functions, provides a weak Bleichenbacher oracle when any TLS cipher suite using RSA key exchange is negotiated. An attacker can recover the private key from a vulnerable application. This vulnerability is referred to as "ROBOT."
CVE-2015-6644: BouncyCastle is vulnerable to information disclosure attacks. Attackers can use a malicious application to obtain sensitive user information.
CVE-2025-41235: org.springframework.cloud, spring-cloud-gateway-server is vulnerable to Spoofing Attack. The vulnerability is due to insufficient validation of X-Forwarded-For and Forwarded headers from untrusted proxies, allowing attackers to spoof client IP addresses.
CVE-2016-5725: Directory traversal vulnerability in JCraft JSch before 0.1.54 on Windows, when the mode is ChannelSftp.OVERWRITE, allows remote SFTP servers to write to arbitrary files via a ..\ (dot dot backslash) in a response to a recursive GET command.
SRCCLR-SID-26294: itextsharp is vulnerable to denial of service. An attacker is able to crash the application via decompression bombs from passed pdf streams.
SRCCLR-SID-26293: itextsharp does not properly verify the validity of the signature. It was possible to bypass the signature checker due to insufficient validation of PDF document.
CVE-2023-22874: IBM MQ Clients are vulnerable to Denial Of Service (DoS). The vulnerability exists when processing configuration files which allows an attacker to cause an application crash. 
SRCCLR-SID-22675: nimbus-jose-jwt is vulnerable to timing attacks. This attack is possible due to insecure comparisons between base64 encoded character length and  the specified input byte length allowing an attacker to get information about which memory locations are being accessed leading to an information disclosure.
CVE-2019-17195: nimbus-jose-jwt is vulnerable to denial of service. Uncaught exceptions while parsing a JWT allow an attacker to submit a malicious JWT which could result in an application crash, potentially disclosing confidential information or a potential authentication bypass.
CVE-2015-5237: protobuf is vulnerable to arbitrary code execution. The protobuf compiler store size information in an int variable, which may truncate size values on 64-bit architectures, leading to a heap-based buffer overflow which results in arbitrary code execution. At the time of creation, the vendor has no plans on fixing this issue.
CVE-2022-46751: org.apache.ivy:ivy is vulnerable to XML Injection. The vulnerability exists due to improper external DTD XML restrictions. An attacker is able to exploit this vulnerability by parsing a specially crafted XML file, which allows the attacker to access sensitive information, such as passwords or other confidential data.
CVE-2022-37865: apache ivy is vulnerable to arbitrary file write. The vulnerability exists due to the  `unpack` function in `ZipPacking.java` not properly verifying the target path when extracting an artifact archive, allowing an attacker to write files to any location on the file system through the absolute paths or paths that try to traverse upwards using `...` sequences.
CVE-2022-37866: apache ivy is vulnerable to path traversal. The vulnerability exists due to lack of file path pattern checks in the `getCachedDataFile` function of `DefaultRepositoryCacheManager.java`, allowing an attacker to overwrite  files outside of the local cache by using `../` in artifact coordinates.
CVE-2017-9735: Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.
CVE-2021-24033: react-dev-utils is vulnerable to OS command injection. An attacker is able to inject and execute arbitrary OS commands on the host OS due to the usage of `child_process.execFileSync()` through `getProcessForPort`.
CVE-2021-33623: trim-newlines is vulnerable to regular expression denial of service. The usage of an insecure regular expression in the `.end()` method allows an attacker to cause excessive resource consumption.
CVE-2021-29060: color-string is vulnerable to regular expression denial of service. An attacker parsing a malicious crafted string that consist of more than 5000 characters into the `hwb()` or `hsl()` function will cause the system to crash.   
SRCCLR-SID-25854: color-string is vulnerable to regular expression denial of service. The vulnerability exists due to the quadratic worst-case time complexity of regular expressions in `cs.get.hsl` and `cs.get.hwb` functions in `index.js` when a string has more than 5000 characters, allowing a malicious user to cause an application crash.
CVE-2021-28092: is-svg is vulnerable to regular expression denial of service. An attacker is able to crash the application via a malicious SVG/XML document due to the usage of an insecure regular expression.
CVE-2021-27290: ssri is vulnerable to regular expression denial of service. An attacker is able to crash the application by submitting a malicious string when the Integrity metadata is using the strict option. This results in a long processing time which would lead to the application crash.
CVE-2021-23362: hosted-git-info is vulnerable to regular expression denial of service (ReDoS). An attacker can provide a malicious string via `shortcutMatch` in the function `fromUrl()` in `index.js` to crash the application.
CVE-2024-48910: DOMPurify is vulnerable to Prototype Pollution. The vulnerability is due to insufficient sanitization, allowing attackers to manipulate the prototype of JavaScript objects, potentially leading to unexpected behavior or security issues.
CVE-2020-24025: node-sass is vulnerable to man-in-the-middle attack. The certificate validation when requesting binaries is disabled even if the user does not specify an alternative download path. This allows for a man-in-the-middle attacker to intercept and modify network traffic, and potentially introduce malicious code into the downloaded package.
SRCCLR-SID-20396: websocker-driver is vulnerable to uninitialized buffer allocation attacks. The library contains an uninitialized memory allocation when handling a large number, which can allow a malicious user to gain access to sensitive information or crash the application.
CVE-2018-20834: A vulnerability was found in node-tar before version 4.4.2. An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content.
CVE-2020-28469: glob-parent is vulnerable to Regular Expression Denial Of Service (ReDoS). The vulnerability exists as the `enclosure` regex used to check for strings ending in enclosure containing path separator has an unescaped exclamation mark. 
CVE-2020-15366: ajv is vulnerable to prototype pollution. The vulnerability exists as it does not prevent the overwrite of `proto` properties.
CVE-2023-0842: xml2js is vulnerable to Prototype Pollution. The vulnerability exists because the library does not properly validate the incoming JSON keys, allowing an attacker to modify the  `__proto__.` attribute. 
CVE-2022-34716: microsoft.aspnetcore.app is vulnerable to information disclosure. The vulnerability exists in some of the .NET Core packages which allows an attacker to gain access to privileged information.
CVE-2022-21986: microsoft.aspnetcore.http.features is vulnerable to denial of service. The vulnerability exists in `NET 6.0 and .NET 5.0` when kestrel web server processes certain HTTP requests causing an application crash.
CVE-2024-27086: microsoft.identity.client is vulnerable to Denial of Service. The vulnerability is due to an incorrect activity export configuration, allowing a malicious application on the same Android device to interfere with the authentication processes. This vulnerability is `only` exploitable to applications targeting Xamarin Android and .NET Android.
CVE-2024-45302: RestSharp is vulnerable to Carriage Return Line Feed (CRLF) Injection. The vulnerability is due to the lack of CRLF character validation in HTTP header values by the HttpHeaders.TryAddWithoutValidation method, which allows an attacker to inject additional HTTP headers or smuggle entire HTTP requests.       
CVE-2021-24112: System.Drawing.Common is vulnerable to Remote Code Execution (RCE). The vulnerability exists because the library does not add the reference count to the graphics metafiles, which allows an attacker to inject and execute malicious code by providing maliciously crafted graphic files. This vulnerability only exists on systems running on MacOS or Linux.
CVE-2024-21508: mysql2 is vulnerable to Remote Code Execution (RCE). The vulnerability is due to improper validation of supportBigNumbers and bigNumberStrings values within the `readCodeFor` function, which allows an attacker to execute arbitrary code.
CVE-2024-21507: mysql2 is vulnerable to cache poisoning. The vulnerability is due to insufficient validation of user-supplied input within the keyFromFields function, allowing an attacker to inject a colon (:) character within a value of the attacker-crafted key, which results in cache poisoning.
CVE-2024-21509: mysql2 is vulnerable to Prototype Pollution. The vulnerability is due to insecure object creation and improper user input sanitization which is passed through the parserFn method in both `text_parser.js` and `binary_parser.js`.
CVE-2024-21512: mysql2 is vulnerable to Prototype Pollution. The vulnerability is due to improper user input sanitization when data is passed to fields and tables within a nestTables, which allows an attacker to manipulate the objects prototype.
CVE-2024-21511: mysql2 is vulnerable to Arbitrary Code Injection. The vulnerability is due to improper sanitization of the `timezone` parameter in the `readCodeFor` function by calling a native MySQL Server date/time function. This allows an attacker to inject arbitrary code into the system.
CVE-2024-21534: jsonpath-plus is vulnerable to Remote Code Execution (RCE). The vulnerability is due to improper input sanitization, allowing an attacker to execute arbitrary code on the system by exploiting the unsafe default usage of vm in Node.  
CVE-2025-47944: multer is vulnerable to Denial of Service (DoS). The vulnerability is  due to an unhandled exception triggered by a malformed multipart upload request that allows an attacker to crash the process.
CVE-2025-47935: Multer is vulnerable to Denial Of Service (DoS). The vulnerability is due to improper handling of error events in HTTP request streams causes internal streams (like busboy) to remain open, allows an attacker to exhaust server resources.
CVE-2025-48997: Multer is vulnerable to Denial of Service (DoS). The vulnerability is due to improper handling of file upload requests with empty string field names, allowing an attacker to crash the server with a crafted request.
SRCCLR-SID-45177: Axios is vulnerable to Prototype Pollution. The vulnerability is due to the `formDataToJSON` method within `lib/helpers/formDataToJSON.js` improperly filtering the `__proto__` attribute from the `FormData` object, allowing an attacker to overwrite critical JavaScript Object attributes.
CVE-2025-27391: org.apache.activemq:artemis-project is vulnerable to Insertion of Sensitive Information into Log File. The vulnerability is due to improper handling of sensitive data in debug logging and the ConfigurationImpl logger exposing all broker property values, including credentials or tokens. It allows an attacker to access sensitive information such as credentials or configuration secrets if they can read the debug log files.
CVE-2024-53900: Mongoose is vulnerable to a Code Injection. The vulnerability is due to improper use of the $where operator, which allows the execution of arbitrary JavaScript code in MongoDB queries. This could lead to code injection attacks, enabling unauthorized access to or manipulation of database data.
CVE-2025-23061: Mongoose is vulnerable to Search Injection. The vulnerability is due to improper handling of a nested $where filter with a populate() match, allows the improper handling of a nested $where filter with a populate() match, which can be exploited for search injection attacks.      
CVE-2021-21391: ckeditor5 is vulnerable to regular expression denial of service. An attacker is able to exploit the vulnerability and crash the system by submitting a malicious html code via the `parse.js` function. 
CVE-2023-22467: luxon is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability exists via the `replace` parameter in `regexParser.js`, which does not properly handle user-untrusted data allowing the attacker to supply arbitrary input to the function, resulting in a system crash.  
CVE-2020-28500: lodash is vulnerable to regular expression denial of service. The usage of the insecure regex `/\s+$/` allows an attacker to cause exponential processing time which could eventually lead to a denial of service condition.
SRCCLR-SID-29274: codemirror is vulnerable to regular expression denial of service. An attacker is able to cause a denial of service condition by passing long strings containing sub-pattern `(s|/*.*?*/)*`.
SRCCLR-SID-28982: codemirror is vulnerable to regular expression denial of service. An attacker is able to cause a denial of service condition through the submission of a malicious token.
CVE-2020-28168: axios is vulnerable to server-side request forgery (SSRF). The vulnerability exists due to a lack of validation of the URL that is passed via the request from client, allowing the attacker to bypass a proxy and submit requests on behalf of the server by providing a URL that responds with a redirect to a restricted host or IP address. 
CVE-2024-24786: protobuf is vulnerable to an infinite loop. The vulnerability is due to improper handling of malformed JSON structures, specifically when unmarshaling into messages containing a `google.protobuf.Any` value or when the `UnmarshalOptions.DiscardUnknown` option is set. This can potentially leads to denial of service.
CVE-2024-45338: golang.org/x/net is vulnerable to Denial Of Service (DoS). The vulnerability is due to non-linear processing of input length, which causes excessive parsing delays and allows an attacker to craft input that results in a denial of service.
CVE-2025-22870: golang.org/x/net is vulnerable to improper hostname validation. The vulnerability is due to improper handling of IPv6 zone IDs in host matching against proxy patterns, allowing an attacker to bypass proxy restrictions and potentially send traffic through unintended network paths
CVE-2023-45288: golang.org/x/net is vulnerable to Denial Of Service (DoS). The vulnerability is due to a lack of header frame limits, allowing an attacker to send excessive CONTINUATION frames which causes the endpoint to read arbitrary amounts of header data without proper memory allocation limits..
CVE-2023-39325: Golang.org/x/net is vulnerable to Denial of Service (DoS). This vulnerability exists due to a flaw which allows a user to send a request, and quickly cancel it. The `http2.Server.MaxConcurrentStreams` limits the amount of allowed inflight requests, but does not handle the situation of resetting the request, which allows an attacker to cause an application crash.
CVE-2025-22872: golang.org/x/net is vulnerable to improper parsing logic. The vulnerability is due to incorrect tag interpretation in unquoted attribute values ending with a solidus (/) being mistakenly marked as self-closing, especially in foreign content like <math> or <svg>. which allows attackers to exploit content in the DOM structure when parsing foreign content from those elements.
CVE-2022-30636: golang.org/x/crypto is vulnerable to Path Traversal. The vulnerability is due to the use of path.Base instead of filepath.Base on Windows, allowing attackers to supply crafted relative paths that could lead to unauthorized access to unintended directories or files.
CVE-2025-22869: golang.org/x/crypto are vulnerable to a Denial Of Service (DoS). The vulnerability is due to incomplete or slow key exchanges, which cause pending content to be read into memory but never transmitted, allowing an attacker to consume server resources and cause a denial of service.
CVE-2024-45337: golang.org/x/crypto is vulnerable to Authorization Bypass. The vulnerability is due to improper handling of public key authentication callbacks where the order or reuse of keys in the callback can lead to incorrect authorization decisions, allowing attackers to exploit misused APIs or assumptions.
CVE-2025-30204: github.com/golang-jwt/jwt is vulnerable to Denial Of Service (DoS). The vulnerability is due to inefficient parsing of untrusted input in the ParseUnverified function, which splits tokens using strings.Split without proper input validation, allowing an attacker to trigger excessive memory allocations by sending a malicious Authorization header with a large number of periods (.).
CVE-2024-51744: github.com/golang-jwt/jwt is vulnerable to Authentication Bypass. The vulnerability is due to ambiguous error handling in the ParseWithClaims function, where a token that is both expired and invalid may lead users to check only for jwt.ErrTokenExpired, potentially ignoring jwt.ErrTokenSignatureInvalid and accepting invalid tokens.   
CVE-2022-21698: github.com/prometheus/client_golang is vulnerable to denial of service. Lack of proper handling of requests with non-standard HTTP methods allows an attacker to cause unbounded cardinality, and potential memory exhaustion.
CVE-2020-14040: github.com/golang/text is vulnerable to denial of service (DoS). The attack is possible because it does not properly handle the single-byte UTF-16 inputs passing to a UTF-16 decoder, causing an infinite loop if the return value from transformer is `ErrShortSrc` with `atEOF` true.
CVE-2022-32149: golang.org/x/text is vulnerable to denial of service. The vulnerability exists in the `ParseAcceptLanguage` function of `parse.go`, allowing an attacker to cause an application crash through the maliciously crafted Accept-Language header.
CVE-2021-38561: git-lfs is vulnerable to denial of service. The vulnerability exists because an incorrectly formatted language tag can cause parse to panic, due to an out of bounds read causing an application crash.
CVE-2022-28948: github.com/go-yaml/yaml is vulnerable to denial of service. The vulnerability exists when the deserializing input data through the `unmarshal` function of `yaml.go`, allowing an attacker to crash the application by providing invalid YAML data.
SRCCLR-SID-25852: github.com/onsi/gomega is vulnerable to denial of service (DoS). The `MessageWithDiff` function in `format.go` does not properly handle long messages, allowing a malicious user to cause an application crash.
CVE-2025-48387: tar-fs is vulnerable to Directory traversal. The vulnerability is due to improper path validation during tarball extraction, allowing attackers to write files outside the target directory and potentially overwrite system files or inject malicious content.
CVE-2024-12905: tar-fs is vulnerable to Path Traversal. The vulnerability is due to improper validation of symbolic links and pathnames during tar file extraction, which allows attackers to escape the target extraction directory and write files to arbitrary locations on the file system.
CVE-2011-2487: Tibor Jager, Sebastian Schinzel and Juraj Somorovsky have published a paper that describes a number of attacks on the PKCS#1 v1.5 Key Transport Algorithm, used to encrypt symmetric keys as part of WS-Security. One of these attacks exploits the fact that WSS4J can leak information about where a particular decryption operation fails. This bug has been fixed in WSS4J 1.6.5, where a  new symmetric key is generated if the decryption of the encrypted key fails.  In this way it is not possible for an attacker to find out whether a decryption failure was due to the failure of decrypting the key or the data.
CVE-2014-3623: Apache WSS4J before 1.6.17 and 2.x before 2.0.2, as used in Apache CXF 2.7.x before 2.7.13 and 3.0.x before 3.0.2, when using TransportBinding, does not properly enforce the SAML SubjectConfirmation method security semantics, which allows remote attackers to conduct spoofing attacks via unspecified vectors.
CVE-2015-0227: Apache WSS4J before 1.6.17 and 2.x before 2.0.2 allows remote attackers to bypass the requireSignedEncryptedDataElements configuration via a vectors related to "wrapping attacks."
CVE-2010-1622: SpringSource Spring Framework 2.5.x before 2.5.6.SEC02, 2.5.7 before 2.5.7.SR01, and 3.0.x before 3.0.3 allows remote attackers to execute arbitrary code via an HTTP request containing class.classLoader.URLs[0]=jar: followed by a URL of a crafted .jar file.
CVE-2011-2894: Spring Framework 3.0.0 through 3.0.5, Spring Security 3.0.0 through 3.0.5 and 2.0.0 through 2.0.6, and possibly other versions deserialize objects from untrusted sources, which allows remote attackers to bypass intended security restrictions and execute untrusted code by (1) serializing a java.lang.Proxy instance and using InvocationHandler, or (2) accessing internal AOP interfaces, as demonstrated using deserialization of a DefaultListableBeanFactory instance to execute arbitrary commands via the java.lang.Runtime class.
CVE-2016-4461: Apache Struts 2.x before 2.3.29 allows remote attackers to execute arbitrary code via a "%{}" sequence in a tag attribute, aka forced double OGNL evaluation.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-0785.
CVE-2014-7809: Apache Struts 2.0.0 through 2.3.x before 2.3.20 uses predictable <s:token/> values, which allows remote attackers to bypass the CSRF protection mechanism.
CVE-2011-1772: Multiple cross-site scripting (XSS) vulnerabilities in XWork in Apache Struts 2.x before 2.2.3, and OpenSymphony XWork in OpenSymphony WebWork, allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) an action name, (2) the action attribute of an s:submit element, or (3) the method attribute of an s:submit element.
CVE-2019-0233: struts2-core is vulnerable to denial of service (DoS). The vulnerability exists as when the uploaded file, exposed through a getter, through an Action is set to read-only, causing the subsequent actions on the file to give an error.
CVE-2015-5209: Apache Struts 2.x before 2.3.24.1 allows remote attackers to manipulate Struts internals, alter user sessions, or affect container settings via vectors involving a top object.
CVE-2019-0230: struts2-core is vulnerable to remote code execution (RCE). The vulnerability exists through the possibility of a forced double OGNL expression through the `${itemValue}` expression in  `simple/radiomap.ftl`.
SRCCLR-SID-1865: Apache Struts contains a cross-site scripting vulnerability in UrlHelper.java. When using <s:url> tag with includeParams='all', an attacker can execute javascript code.
CVE-2016-3081: Apache Struts 2.x before 2.3.20.2, 2.3.24.x before 2.3.24.2, and 2.3.28.x before 2.3.28.1, when Dynamic Method Invocation is enabled, allow remote attackers to execute arbitrary code via method: prefix, related to chained expressions.
CVE-2013-2115: Apache Struts 2 before 2.3.14.2 allows remote attackers to execute arbitrary OGNL code via a crafted request that is not properly handled when using the includeParams attribute in the (1) URL or (2) A tag. NOTE: this issue is due to an incomplete fix for CVE-2013-1966.
CVE-2016-3090: The TextParseUtil.translateVariables method in Apache Struts 2.x before 2.3.20 allows remote attackers to execute arbitrary code via a crafted OGNL expression with ANTLR tooling.
CVE-2012-0393: The ParameterInterceptor component in Apache Struts before 2.3.1.1 does not prevent access to public constructors, which allows remote attackers to create or overwrite arbitrary files via a crafted parameter that triggers the creation of a Java object.
CVE-2013-2134: Apache Struts 2 before 2.3.14.3 allows remote attackers to execute arbitrary OGNL code via a request with a crafted action name that is not properly handled during wildcard matching, a different vulnerability than CVE-2013-2135.
CVE-2015-2992: Apache Struts before 2.3.20 is vulnerable to cross-site scripting when JSP files can be accessed directly or when debug mode is switched on.
CVE-2018-11776: Apache Struts versions 2.3 to 2.3.34 and 2.5 to 2.5.16 suffer from possible Remote Code Execution when alwaysSelectFullNamespace is true (either by user or a plugin like Convention Plugin) and then: results are used with no namespace and in same time, its upper package have no or wildcard namespace and similar to results, same possibility when using url tag which doesn't have value and action set and in same time, its upper package have no or wildcard namespace.
CVE-2020-17530: struts2-core is vulnerable to remote code execution. Tag attributes can be used to perform a double evaluation when forced OGNL evaluation is applied, by using the `%{...}` syntax. This can lead to remote code execution when an attacker provides a malicious input to be evaluated.
CVE-2013-2251: Apache Struts is vulnerable to arbitrary code execution. The vulnerability allows remote attackers to execute arbitrary OGNL expressions via a parameter.
CVE-2013-1966: Apache Struts 2 before 2.3.14.1 allows remote attackers to execute arbitrary OGNL code via a crafted request that is not properly handled when using the includeParams attribute in the (1) URL or (2) A tag.
CVE-2011-5057: Apache Struts 2.3.1.1 and earlier provides interfaces that do not properly restrict access to collections such as the session and request collections, which might allow remote attackers to modify run-time data values via a crafted parameter to an application that implements an affected interface, as demonstrated by the SessionAware, RequestAware, ApplicationAware, ServletRequestAware, ServletResponseAware, and ParameterAware interfaces.  NOTE: the vendor disputes the significance of this report because of an "easy work-around in existing apps by configuring the interceptor."
CVE-2012-4386: The token check mechanism in Apache Struts 2.0.0 through 2.3.4 does not properly validate the token name configuration parameter, which allows remote attackers to perform cross-site request forgery (CSRF) attacks by setting the token name configuration parameter to a session attribute.
CVE-2016-0785: Apache Struts 2.x before 2.3.28 allows remote attackers to execute arbitrary code via a "%{}" sequence in a tag attribute, aka forced double OGNL evaluation.
CVE-2013-1965: Apache Struts Showcase App 2.0.0 through 2.3.13, as used in Struts 2 before 2.3.14.1, allows remote attackers to execute arbitrary OGNL code via a crafted parameter name that is not properly handled when invoking a redirect.
CVE-2012-0391: The ExceptionDelegator component in Apache Struts before 2.2.3.1 interprets parameter values as OGNL expressions during certain exception handling for mismatched data types of properties, which allows remote attackers to execute arbitrary Java code via a crafted parameter.
CVE-2013-2135: Apache Struts 2 before 2.3.14.3 allows remote attackers to execute arbitrary OGNL code via a request with a crafted value that contains both "${}" and "%{}" sequences, which causes the OGNL code to be evaluated twice.
CVE-2014-0094: The ParametersInterceptor in Apache Struts before 2.3.16.1 allows remote attackers to "manipulate" the ClassLoader via the class parameter, which is passed to the getClass method.
CVE-2014-0116: CookieInterceptor in Apache Struts 2.x before 2.3.16.3, when a wildcard cookiesName value is used, does not properly restrict access to the getClass method, which allows remote attackers to "manipulate" the ClassLoader and modify session state via a crafted request.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-0113.
CVE-2013-2248: Multiple open redirect vulnerabilities in Apache Struts 2.0.0 through 2.3.15 allow remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in a parameter using the (1) redirect: or (2) redirectAction: prefix.
CVE-2012-0838: Apache Struts 2 before 2.2.3.1 evaluates a string as an OGNL expression during the handling of a conversion error, which allows remote attackers to modify run-time data values, and consequently execute arbitrary code, via invalid input to a field.
CVE-2016-2162: Apache Struts 2.x before 2.3.25 does not sanitize text in the Locale object constructed by I18NInterceptor, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors involving language display.
CVE-2013-4310: Apache Struts 2.0.0 through 2.3.15.1 allows remote attackers to bypass access controls via a crafted action: prefix.
CVE-2016-4436: Apache Struts 2 before 2.3.29 and 2.5.x before 2.5.1 allow attackers to have unspecified impact via vectors related to improper action name clean up.
CVE-2017-12611: In Apache Struts 2.0.1 through 2.3.33 and 2.5 through 2.5.10, using an unintentional expression in a Freemarker tag instead of string literals can lead to a RCE attack.
CVE-2012-0392: The CookieInterceptor component in Apache Struts before 2.3.1.1 does not use the parameter-name whitelist, which allows remote attackers to execute arbitrary commands via a crafted HTTP Cookie header that triggers Java code execution through a static method.
CVE-2013-4316: Apache Struts 2.0.0 through 2.3.15.1 enables Dynamic Method Invocation by default, which has unknown impact and attack vectors.
CVE-2016-3082: struts2-core is susceptible to remote code execution attacks. It happens because the XSLTResult class of struts2-core does not validate the type and content during file uploads. The vulnerable package does not prevent passing the location of a stylesheet as a request parameter. As a result, attackers can inject remotely executable code.
CVE-2014-0113: CookieInterceptor in Apache Struts before 2.3.16.2, when a wildcard cookiesName value is used, does not properly restrict access to the getClass method, which allows remote attackers to "manipulate" the ClassLoader and execute arbitrary code via a crafted request.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-0094.
CVE-2012-0394: ** DISPUTED ** The DebuggingInterceptor component in Apache Struts before 2.3.1.1, when developer mode is used, allows remote attackers to execute arbitrary commands via unspecified vectors.  NOTE: the vendor characterizes this behavior as not "a security vulnerability itself."
CVE-2021-31805: Apache Struts is vulnerable to remote code execution. The vulnerability exists due to an incomplete fix of CVE-2020-17530 which is double evaluation if OGNL is used, allowing an attacker to inject maliciously crafted script via the %{...} syntax within the Struts tag.
CVE-2023-41835: org.apache.struts, struts2-core is vulnerable to Denial Of Services. The vulnerability exists due to the lack of a validated a max string length limit in `JakartaMultiPartRequest.java` which allows an attacker to cause an application crash by submitting large multipart requests.
CVE-2016-4003: Cross-site scripting (XSS) vulnerability in the URLDecoder function in JRE before 1.8, as used in Apache Struts 2.x before 2.3.28, when using a single byte page encoding, allows remote attackers to inject arbitrary web script or HTML via multi-byte characters in a url-encoded parameter.
CVE-2024-53677: org.apache.struts, struts2-core is vulnerable to Remote Code Execution (RCE). The vulnerability is due to improper validation and handling of file uploads, allowing attackers to potentially upload and execute malicious files on the server.      
CVE-2015-5169: Cross-site scripting (XSS) vulnerability in Apache Struts before 2.3.20.
CVE-2008-6505: Multiple directory traversal vulnerabilities in Apache Struts 2.0.x before 2.0.12 and 2.1.x before 2.1.3 allow remote attackers to read arbitrary files via a ..%252f (encoded dot dot slash) in a URI with a /struts/ path, related to (1) FilterDispatcher in 2.0.x and (2) DefaultStaticContentLoader in 2.1.x.
SRCCLR-SID-1868: FastByteArrayOutputStream.java in struts2-core has an infinte loop when the character code of input data is UTF-8, longer than 16KB, and there is a character of a surrogate pair after the 16KB of data. This could lead to a denial of service.
CVE-2011-2731: Race condition in the RunAsManager mechanism in VMware SpringSource Spring Security before 2.0.7 and 3.0.x before 3.0.6 stores the Authentication object in the shared security context, which allows attackers to gain privileges via a crafted thread.
CVE-2012-5055: DaoAuthenticationProvider in VMware SpringSource Spring Security before 2.0.8, 3.0.x before 3.0.8, and 3.1.x before 3.1.3 does not check the password if the user is not found, which makes the response delay shorter and might allow remote attackers to enumerate valid usernames via a series of login requests.
CVE-2011-2732: CRLF injection vulnerability in the logout functionality in VMware SpringSource Spring Security before 2.0.7 and 3.0.x before 3.0.6 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the spring-security-redirect parameter.
CVE-2010-3700: VMware SpringSource Spring Security 2.x before 2.0.6 and 3.x before 3.0.4, and Acegi Security 1.0.0 through 1.0.7, as used in IBM WebSphere Application Server (WAS) 6.1 and 7.0, allows remote attackers to bypass security constraints via a path parameter.
CVE-2012-0881: Apache Xerces2 Java Parser before 2.12.0 allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.
CVE-2013-6440: The (1) BasicParserPool, (2) StaticBasicParserPool, (3) XML Decrypter, and (4) SAML Decrypter in Shibboleth OpenSAML-Java before 2.6.1 set the expandEntityReferences property to true, which allows remote attackers to conduct XML external entity (XXE) attacks via a crafted XML DOCTYPE declaration.
CVE-2011-1411: Shibboleth OpenSAML library 2.4.x before 2.4.3 and 2.5.x before 2.5.1, and IdP before 2.3.2, allows remote attackers to forge messages and bypass authentication via an "XML Signature wrapping attack."
CVE-2015-1796: The PKIX trust engines in Shibboleth Identity Provider before 2.4.4 and OpenSAML Java (OpenSAML-J) before 2.6.5 trust candidate X.509 credentials when no trusted names are available for the entityID, which allows remote attackers to impersonate an entity via a certificate issued by a shibmd:KeyAuthority trust anchor.
CVE-2011-2088: XWork 2.2.1 in Apache Struts 2.2.1, and OpenSymphony XWork in OpenSymphony WebWork, allows remote attackers to obtain potentially sensitive information about internal Java class paths via vectors involving an s:submit element and a nonexistent method, a different vulnerability than CVE-2011-1772.3.
CVE-2008-6504: ParametersInterceptor in OpenSymphony XWork 2.0.x before 2.0.6 and 2.1.x before 2.1.2, as used in Apache Struts and other products, does not properly restrict # (pound sign) references to context objects, which allows remote attackers to execute Object-Graph Navigation Language (OGNL) statements and modify server-side context objects, as demonstrated by use of a \u0023 representation for the # character.
SRCCLR-SID-1850: The LocaleChangeInterceptor in Spring Framework before 3.0.6.RELEASE does not escape the locale values passed from a request. This allows for a potential cross-site scripting vulnerability.
CVE-2014-0054: The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.
CVE-2013-7315: The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through 4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this issue was SPLIT from CVE-2013-4152 due to different affected versions.
CVE-2013-4517: Apache Santuario XML Security for Java before 1.5.6, when applying Transforms, allows remote attackers to cause a denial of service (memory consumption) via crafted Document Type Definitions (DTDs), related to signatures.
CVE-2013-2172: jcp/xml/dsig/internal/dom/DOMCanonicalizationMethod.java in Apache Santuario XML Security for Java 1.4.x before 1.4.8 and 1.5.x before 1.5.5 allows context-dependent attackers to spoof an XML Signature by using the CanonicalizationMethod parameter to specify an arbitrary weak "canonicalization algorithm to apply to the SignedInfo part of the Signature."
SRCCLR-SID-30023: freemarker is vulnerable to server-side template injection (SSTI). By using `java.security.ProtectionDomain.getClassLoader` templates, an attacker is able to gain access to the classloader and subsequently the filesystem or execute arbitrary code on the host OS.
CVE-2013-4152: The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.
CVE-2016-3092: commons-fileupload is vulnerable to denial of service attacks. The vulnerability can be triggered because the HTTP server does not properly filter the file upload requests which has the size of MIME boundary close to the size of the buffer in MultipartStream.
CVE-2016-1000031: Apache Commons FileUpload before 1.3.3 DiskFileItem File Manipulation Remote Code Execution
CVE-2013-2186: The DiskFileItem class in Apache Commons FileUpload allows remote attackers to write to arbitrary files via a NULL byte in a file name when it is deserialized. This vulnerability first requires the application using this library to be deserializing untrusted data.
CVE-2014-0050: MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.
CVE-2013-0248: The default configuration of javax.servlet.context.tempdir in Apache Commons FileUpload 1.0 through 1.2.2 uses the /tmp directory for uploaded files, which allows local users to overwrite arbitrary files via an unspecified symlink attack.
SRCCLR-SID-1840: Spring Framework JMS 3.2.11 through 3.2.13 and 4.0.7 through 4.0.9 contain a possible denial of service vulnerability. When remoting using JMS, the JmsInvokerProxyFactoryBean creates a temporary queue where the message reply should be sent. The queue may be removed before the reply is delivered. Since Spring Framework 4.0.7, the MessageListenerContainer does not remove messages from the queue when they can't be delivered. This results in endless retries as the temporary queue will never come back.
CVE-2014-1904: Cross-site scripting (XSS) vulnerability in web/servlet/tags/form/FormTag.java in Spring MVC in Spring Framework 3.0.0 before 3.2.8 and 4.0.0 before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via the requested URI in a default action.
CVE-2020-7660: serialize-javascript is vulnerable to remote code execution (RCE). The attack exists because the `deleteFunctions` within `index.js` does not sanitize the objects `foo` and `bar` and generates the value of internal UID `<UID>` using `Math.random()` function with insufficient entropy, allowing an attacker to brute force the possible values and inject malicious code.
CVE-2021-27515: url-parse performs Insecure URL Validation. The vulnerability exists as the unsanitized value of `address` in `index.js` could be used to bypass validation checks when used in the browser.
CVE-2020-7774: y18n is vulnerable to prototype pollution. An attacker is able to exploit the vulnerability to inject arbitrary properties into existing construct prototypes and modify attributes such as `__proto__`, `constructor` and `prototype`.
CVE-2020-7662: websocket-extensions is vulnerable to regular expression denial of service (ReDoS). A regex backtracking is introduced due to the way the parser processes the `Sec-WebSocket-Extensions` header, using up quadratic time in a single-threaded server when an unclosed string parameter with repeating two-byte sequence of a backslash and some other character are included in the Sec-WebSocket-Extensions header.
CVE-2020-13822: elliptic is suffers from ECDSA signature malleability. The vulnerability exists as it fails to ensure that the following tests produces different results, `long form encoding of length of sequence`, `length of sequence contains leading 0`, `length of integer contains leading 0`, `uint32 overflow in length of integer`, `uint64 overflow in length of integer`, `prepending 0's to integer`, and `long form encoding of length of integer`.
CVE-2020-28498: elliptic is vulnerable to information disclosure. Usage of an insecure `secp256k1` implementation in `elliptic/ec/key.js` can cause the disclosure of the private key after a number of ECDH operations are performed.
SRCCLR-SID-27567: elliptic is vulnerable to information disclosure. An attacker can send a malicious w-NAF data with bit length larger than allocated memory via `getNAF`, leading to a memory leak.
CVE-2020-7788: ini is vulnerable to prototype pollution. An attacker is able to inject properties into existing construct prototypes and modify attributes such as `__proto__`, `constructor` and `prototype`.
CVE-2020-28477: immer is vulnerable to prototype pollution. An attacker is able to exploit the vulnerability to inject arbitrary properties into existing construct prototypes and modify attributes such as `__proto__`, `constructor` and `prototype`.
CVE-2020-7720: node-forge is vulnerable to prototype pollution. An attacker is able to inject properties into existing construct prototypes and modify attributes such as `__proto__`, `constructor` and `prototype`.
SRCCLR-SID-25508: http-proxy is vulnerable to denial of service (DoS). The vulnerability exists when an attacker sends an HTTP request with a long body, resulting in an unhandled exception `ERR_HTTP_HEADERS_SENT` and crashing the proxy server.  
CVE-2016-10540: Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter.
CVE-2018-16487: lodash is vulnerable to prototype pollution attack. The vulnerability exists due to the ability to inject properties on Object.prototype, which allows DoS, and possibly other forms of attacks.
SRCCLR-SID-25849: lodash is vulnerable to injection vulnerability. An attacker can inject malicious code via `sourceURL` since it is not sanitized for the user-provided code that leads to the `eval()` function.
CVE-2018-3721: lodash is vulnerable to prototype pollution attacks. Attackers can add or modify existing properties relating to an Object by using the utilities function to change the prototype of said Object. Using this flaw, attackers can trigger denial of service (DoS) attacks and in some situations remote code execution(RCE) attacks.
CVE-2019-10744: lodash is vulnerable to prototype pollution. The vulnerability exists due to the ability to inject properties in `_.defaultsDeep`, which allows DoS, and possibly other forms of attacks.
CVE-2024-38999: requirejs is vulnerable to Prototype Pollution. The vulnerability is due to missing prototype checks in the  `config`, `s.contexts._.configure`, and `parse` functions, which allows an attackers to modify the built-in `Object.prototype` by passing arguments containing the special `__proto__` key, which results in behavior modifications of the library.
CVE-2024-38998: requirejs is vulnerable to Prototype Pollution. The vulnerability is due to the config function which allows attackers to inject arbitrary prototype properties, which potentially allows an attacker to execute arbitrary code or cause a Denial of Service (DoS).
SRCCLR-SID-7078: validator is vulnerable to regular expression denial of service (ReDoS) attacks. A malicious user can pass a long URI to the `isDataURI()` function to cause a ReDoS attack.
CVE-2024-56332: Next.js is vulnerable to a Denial of Service (DoS). The vulnerability is due to requests to Server Actions hanging indefinitely, causing the server to remain idle with the connection open, allows an attacker to keep the connection open until the hosting provider cancels the function, leading to potential DoS or excessive billing without significant resource usage.
CVE-2022-37609: js-beautify is vulnerable to prototype pollution. An attacker is able to pollute any future object creations by passing a crafted malicious payload to `_mergeOpts` function in `options.js` via the `name` variable.
CVE-2022-31679: spring-data-rest-webmvc is vulnerable to information disclosure. The vulnerability exists due to the improper implementation of the JSON patch in the library, allowing an attacker to get information about the hidden entity attributes through maliciously crafted HTTP requests.
SRCCLR-SID-20560: sanitize-html is vulnerable to cross-site scripting (XSS). The opentag function in index.js fails to sanitize HTML attributes when sanitizing HTML tags that have been modified using a custom tag transformation. If an application uses custom tag transformations, and places user input in an HTML attribute, an attacker can inject arbitrary Javascript into a victim's browser to steal session tokens or perform unwanted actions on behalf of the user.
CVE-2022-25887: sanitize-html is vulnerable to regular expression denial of service. The vulnerability exists due to the insecure regex pattern used for the `href` attribute in the `sanitizeHtml` function of `index.js`, allowing an attacker to cause an application crash by providing a malicious input.
CVE-2024-21501: sanitize-html is vulnerable to Information Exposure. The vulnerability is due to the parsing of CSS through the `style` attribute without disabling source maps, which can allow attackers to infer the file system structure and dependencies of the server.
CVE-2021-26539: sanitize-html is vulnerable to hostname validation bypass. The package does not properly validate the iframe hostname in URL parser, allowing an IDNA (Internationalized Domain Name) iframe attack.
CVE-2021-26540: sanitize-html is vulnerable to privilege escalation. An attacker is able to bypass hostname whitelist for iframe element when the "allowIframeRelativeUrls" is set to true due to the hostnames set by the "allowedIframeHostnames" not properly validated. 
SRCCLR-SID-28498: highlight.js is vulnerable to regular expression denial of service (ReDoS). The vulnerability exists through the grammars used by the parser during `highlightAuto`.
SRCCLR-SID-2859: plexus-utils is vulnerable to directory traversal attacks. A malicious user can traverse the directory when passing a file to be extracted due to the lack of validation of the pathing.
CVE-2022-4245: plexus-utils is vulnerable to XML External Entity (XXE) Injection. The vulnerability exists in the `writeComment` function of `XmlWriterUtil.java` because it does not properly check if the comment includes a `-->`,  resulting in the text contained in the command string being interpreted as XML, allowing an attacker to inject and execute malicious XML document to perform requests on behalf of the server.
CVE-2022-4244: plexus-utils is vulnerable to Path Traversal. An attacker can access arbitrary files and directories stored on the file system through the `extractFile` function in `Expand.java` and manipulate files with `dot-dot-slash (../)` sequences and variations or by using absolute file paths.
SRCCLR-SID-22745: plexus-utils is vulnerable to XML injection. An attacker is able to inject and execute arbitrary XML tags and statements via the comment using a `-->` character sequence.
CVE-2024-53382: PrismJS is vulnerable to DOM Clobbering. The vulnerability is due to attacker-injected HTML elements shadowing the document.currentScript lookup, allowing an attacker to potentially leads to Cross-Site Scripting (XSS).
CVE-2013-4002: XMLscanner.java in Apache Xerces2 Java Parser before 2.12.0, as used in the Java Runtime Environment (JRE) in IBM Java 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 as well as Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, Java SE Embedded 7u40 and earlier, and possibly other products allows remote attackers to cause a denial of service via vectors related to XML attribute names.
CVE-2018-2799: Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 7u171, 8u162 and 10; Java SE Embedded: 8u161; JRockit: R28.3.17. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).
CVE-2024-21529: dset is vulnerable to Prototype Pollution. The vulnerability is due improper user input sanitization. This vulnerability allows the attacker to inject malicious object property using the built-in Object property __proto__, which is recursively assigned to all the objects in the program.  
CVE-2018-1000873: Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.
SRCCLR-SID-29152: merge-deep is vulnerable to prototype pollution attacks. An attacker is able to inject and overwrite arbitrary properties such as `__proto__`, `constructor` or `prototype`, resulting in privilege escalation, denial of service or potential arbitrary code execution.
CVE-2020-7693: sockjs is vulnerable to denial of service (DoS). The vulnerability exists as the `res.end()` gets called twice when improperly handling the `Upgrade` header with an incorrect URL.
CVE-2020-7608: yargs-parser is vulnerable to prototype pollution. The attack exists as it does not properly sanitize the key value provided by users, allowing the malicious properties of Object.prototype to be parsed or modified using a` __proto__` payload.
CVE-2020-15256: object-path is vulnerable to prototype pollution. The vulnerability exists as the `set()` method does not restrict the `__proto__` header value to be set. The vulnerability is limited to the `includeInheritedProps` mode, and setting the option `includeInheritedProps: true`, or by using the default `withInheritedProps` instance. 
CVE-2021-3805: object-path is vulnerable to Prototype Pollution. An attacker is able to exploit the vulnerability to inject arbitrary properties into existing construct prototypes and modify attributes such as `__proto__`, `constructor` and `prototype` via the `del` function.
CVE-2021-23434: object-path is vulnerable to prototype pollution. The vulnerability exists due to type confusion when the path components used in the path parameter are arrays.
CVE-2023-26144: graphql is vulnerable to Denial Of Service. The vulnerability is due to an insufficient check/comparison between `node1` and `node2` in the `OverlappingFieldsCanBeMergedRule.ts` file. This can result in a degradation of system performance when processing large queries.
CVE-2021-28165:  jetty-io is vulnerable to denial of service. An attacker is able to send a large TLS frame with data length of more than 17408, resulting in high CPU consumption and a potential application crash.
CVE-2019-20444: netty-codec-http is vulnerable to HTTP request smuggling. The library does not detect if a colon is missing when parsing HTTP headers. This allows an attacker to smuggle HTTP requests via an invalid line fold.
CVE-2019-20445: netty-codec-http is vulnerable to HTTP request smuggling. The library does not properly validate duplicate `Content-Length` header fields and the `Transport-Encoding` headers, allowing a remote attacker to smuggle HTTP request by submitting a malicious `Transport-Encoding` header.
CVE-2020-27218: Eclipse Jetty allows insecure GZIP request body inflation. An attacker can send a request with a body that is not consumed by the application which will overflow to the subsequent request on the same connection.
CVE-2021-34428: org.eclipse.jetty, jetty-server has Insecure Session ID. The vulnerability exists due the `SessionListener#sessionDestroyed()` not validating the session ID if an exception is thrown.  
CVE-2009-1523: Directory traversal vulnerability in the HTTP server in Mort Bay Jetty 5.1.14, 6.x before 6.1.17, and 7.x through 7.0.0.M2 allows remote attackers to access arbitrary files via directory traversal sequences in the URI.
CVE-2011-4461: Jetty 8.1.0.RC2 and earlier computes hash values for form parameters without restricting the ability to trigger hash collisions predictably, which allows remote attackers to cause a denial of service (CPU consumption) by sending many crafted parameters.
CVE-2020-27216: jetty is vulnerable to privilege escalation. The vulnerability exists on Unix like systems where the system's temporary directory is shared between all users on that system, allowing a user to observe the process of creating a temporary sub-directory in the shared temporary directory, and race to complete the creation of the temporary subdirectory to get read and write permission to the subdirectory.
CVE-2020-27223: Jetty is vulnerable to denial of service (DoS). The use of multiple Accept headers with a large number of `quality` causes a high CPU usage, resulting in long durations of CPU processing and crashing of the application.
SRCCLR-SID-43085: @apollo/server and apollo-server-core are vulnerable to Information Disclosure. The vulnerability is due to a lack sensitive information masking (such as Studio API keys) which can end up getting logged if they are passed incorrectly (with leading/trailing whitespace) or if they have any invalid characters, which could be exploited by an attacker to gain access to sensitive information if they have access to log files.
CVE-2023-46233: crypto-js is vulnerable to Insecure Hashing Algorithm. The vulnerability is present because the library uses the cryptographically weak `sha1` algorithm by default. This weakness allows an attacker to potentially forge data, certificates, or digital signatures, which could lead to unauthorized access and data breaches.
CVE-2024-28176: jose is vulnerable to Denial Of Service (DoS). This vulnerability is due to a flaw in the support for decompressing plaintext post-decryption. An attacker can exploit a scenario with exceptionally high compression ratios, leading to JWE token lengths falling below application-defined limits. This could render existing application-level mechanisms ineffective against resource exhaustion.
SRCCLR-SID-43991: google.golang.org/grpc is vulnerable to HTTP/2 Stream Cancellation Attack. The vulnerability exists because the library does not enforce the limit of concurrently running handlers set by `MaxConcurrentStreams`. This enables an attacker to send malicious HTTP/2 requests, cancel them, and then send subsequent requests. While this behavior is compliant with the HTTP/2 protocol, it results in the gRPC-Go server launching more concurrent method handlers than the intended maximum stream limit.Consequently, this can lead to an application crash.
CVE-2024-6104: github.com/hashicorp/go-retryablehttp is vulnerable to Information Disclosure . The vulnerability is due to improper sanitization of URLs when writing them to the log file, allowing an attacker to potentially access sensitive HTTP basic auth credentials.
CVE-2023-1732: github.com/cloudflare/circl is vulnerable to Insecure Randomness. `Kyber` and `FrodoKEM` did not check whether `crypto/rand.Read()` returned an error, leading to a predictable shared secret. The `tkn20` and `blindrsa` components did not check if enough randomness was returned from the user provided randomness source. In rare deployment cases, this could lead to a predictable shared secret.
SRCCLR-SID-44984: github.com/cloudflare/circl is vulnerable to Timing Attack. The vulnerability is caused due to arithmetic operations during ciphertext compression which leaks sensitive timing information. An attacker can learn parts of secret key by exploiting this vulnerability (brute force).
CVE-2021-41079: Apache Tomcat is vulnerable of denial of service. An attacker is able to crash the system by sending a maliciously crafted packet when the system is configured for TLS. 
SRCCLR-SID-25863: adal4j is vulnerable to XML External Entity (XXE). The vulnerability exists because the external DTDs are not disabled by default in `WSTrustResponse parse` function in `WSTrustResponse.java` and ` getWsTrustEndpointFromMexResponse` function in `MexParser.java`, allowing an attacker to submit a malicious XML document to perform requests on behalf of the server or read system files.
CVE-2021-22573: Google OAuth Client is vulnerable to token validation bypass. The function IdTokenVerifier validate any token with custom payload as valid token if the token is properly signed.
CVE-2025-32421: Next.js is vulnerable to Race Condition. The vulnerability is due to a race condition due to misconfigured Pages Router setups allowing pageProps data to be served instead of standard HTML responses.
CVE-2024-46982: Next is vulnerable to Cache Poisoning. The vulnerability is due to improper handling of crafted HTTP requests, causing the incorrect caching of non-dynamic server-side rendered routes in the pages router. It allows an attacker to manipulate the cache, potentially serving stale or incorrect content.
CVE-2025-47949: samlify is vulnerable to a Signature Wrapping attack. The vulnerability is due to improper validation of signed XML documents, allowing an attacker to forge a SAML Response and authenticate as any user.
CVE-2025-29775: xml-crypto is vulnerable to an XML Signature Bypass. The vulnerability is due to improper validation of signed XML structures, allowing an attacker to modify a signed XML message while still passing signature verification checks.
CVE-2025-29774: xml-crypto is vulnerable to an XML signature manipulation. The vulnerability is due to improper validation of signed XML documents, which allows an attacker to modify a signed XML message while still passing signature verification checks.
CVE-2024-36361: pug is vulnerable to Code execution. The vulnerability is due to the lack of proper input validation for the name option in the `compileClient`, `compileFileClient`, or `compileClientWithDependenciesTracked` functions, which allows attackers to execute arbitrary JavaScript code in the context of the application.
CVE-2023-7272: org.eclipse.parsson:parsson is vulnerable to Denial Of Service (DoS). The vulnerability is caused due to improper handling of documents with a large depth of nested objects. This may lead to a Java stack overflow exception and denial of service.
CVE-2023-4043: org.eclipse.parsson:parsson is vulnerable to Denial of Service (DoS). An attacker is able to exploit this vulnerability by sending a specially crafted JSON document with large numbers, which would cause the parser to consume excessive resources leading to a Denial of Service.
CVE-2022-1415: org.drools:drools-compiler is vulnerable to deserialization of untrusted data.  The vulnerability exists due to lack of serialization in multiple functions in `CompositeKnowledgeBuilderImpl.java` and `KnowledgeBuilderImpl.java` which allows an attacker to execute arbitrary malicious code on the system.    
CVE-2024-41818: fast-xml-parser is vulnerable to Regular Expression Denial of Service. The vulnerability is due to inefficient regex processing in `currency.js`, which allows attackers to exploit this by providing malicious input to cause excessive backtracking and performance degradation potentially leads to DoS. 
CVE-2023-21971: mysql-connector-java is vulnerable to Remote Code Execution. The vulnerability is due to not sanitizing the  `propertiesTransformClassName` when instantiated or not in `setupPropertiesTransformer` in the `ConnectionUrl.java` file. This potentially leads to Arbitrary Code Execution .
CVE-2018-8119: The Azure IoT Device Provisioning AMQP Transport library is vulnerable to spoofing due to improper validation of certificates over the AMQP protocol. The vulnerability affects C# SDK, C SDK and Java SDK.
CVE-2016-1000340: In the Bouncy Castle JCE Provider versions 1.51 to 1.55, a carry propagation bug was introduced in the implementation of squaring for several raw math classes have been fixed (org.bouncycastle.math.raw.Nat???). These classes are used by our custom elliptic curve implementations (org.bouncycastle.math.ec.custom.**), so there was the possibility of rare (in general usage) spurious calculations for elliptic curve scalar multiplications. Such errors would have been detected with high probability by the output validation for our scalar multipliers.
CVE-2018-1000180: Bouncy Castle BC 1.54 - 1.59, BC-FJA 1.0.0, BC-FJA 1.0.1 and earlier have a flaw in the Low-level interface to RSA key pair generator, specifically RSA Key Pairs generated in low-level API with added certainty may have less M-R tests than expected. This appears to be fixed in versions BC 1.60 beta 4 and later, BC-FJA 1.0.2 and later.
CVE-2025-23184: org.apache.cxf, cxf-core is vulnerable to Denial of Service (DoS). The vulnerability is due to CachedOutputStream instances not being closed in certain edge cases, potentially filling up the file system when backed by temporary files, allows an attacker to exhaust the file system.
CVE-2022-46364: cxf-core is vulnerable to Server-side Request Forgery (SSRF). The vulnerability exists due to the lack of URL encode in MTOM content-id, which allows an attacker to perform SSRF-style attacks on web services that take at least one parameter of any type through the href attribute of `XOP:Include`.
CVE-2022-46363: cxf-rt-transports-http is vulnerable to path traversal. The vulnerability exists in the `handleRequest` function of `AbstractHTTPServlet.java` when the CXFServlet is configured with both the `static-resources-list` and `redirect-query-check` attributes, allowing an attacker to access any path on the system.
CVE-2022-41704: Batik bridge is vulnerable to information disclosure. The vulnerability exists in the `<init>` function of `DefaultScriptSecurity` because the jars get loaded by default which allows an attacker to execute arbitrary codes into the system.
CVE-2022-40146: org.apache.xmlgraphics:batik-bridge is vulnerable to server-side request forgery. The vulnerability exists in `DefaultExternalResourceSecurity` because the constructor logic does not properly restrict external resources, which allows remote attackers to cause SSRF bypass and gain access to confidential information.
CVE-2022-38648: org.apache.xmlgraphics:batik-bridge is vulnerable to server-side request forgery. The vulnerability exists in the `createImageGraphicsNode` function in `SVGImageElementBridge.java` because the function logic does not properly restrict external resources, which allows remote attackers to cause SSRF bypass and gain access to confidential information.
CVE-2022-44729: Apache XML Graphics Batik is vulnerable to Server-Side Request Forgery (SSRF). An attacker is able to trick the application into loading a malicious SVG file, which could then be used to cause excess resource consumption or make unauthorized requests to other systems.
CVE-2022-38398: org.apache.xmlgraphics:batik-bridge is vulnerable to server-side request forgery. The vulnerability exists in `DefaultExternalResourceSecurity` because the constructor logic does not properly restrict external resources, which allows remote attackers to cause SSRF bypass and gain access to confidential information.
CVE-2020-11987: batik-svgbrowser is vulnerable to XML external entity (XXE) attacks. An attacker is able to submit HTTP GET requests on behalf of the server using malicious arguments.
CVE-2022-42890: batik-script is vulnerable to information disclosure. The vulnerability is due to the `visibleToScripts` function in `RhinoClassShutter.java` not restricting access to batik internals from script which allows an attacker to execute arbitrary codes.
CVE-2022-44730: org.apache.xmlgraphics:batik-script is vulnerable to Server-Side Request Forgery (SSRF). An attacker is able to trick the application into loading a malicious SVG file, which could then be used to probe user data.
